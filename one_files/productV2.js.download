redesign.define('productPartial/pdp_productThumbnailButton',['handlebars','dsPartial/thumbnail'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_productThumbnailButton", this["ANF"]["templates"]["pdp_productThumbnailButton"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "        <button class=\"product-thumbnail-button\" tabindex=\"-1\" data-image-type=\""
    + alias2(alias1((depth0 != null ? depth0.imageType : depth0), depth0))
    + "\" data-image-id=\""
    + alias2(alias1((depth0 != null ? depth0.imageId : depth0), depth0))
    + "\">\n"
    + ((stack1 = container.invokePartial(partials.thumbnail,depth0,{"name":"thumbnail","hash":{"selectedText":"Selected","selected":(depth0 != null ? depth0.selected : depth0),"alt":(depth0 != null ? depth0.alt : depth0),"data-src":(depth0 != null ? depth0["data-src"] : depth0)},"data":data,"indent":"            ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "        </button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"product-thumbnails slider js-slider js-thumbnails thumbnail-slider\" style=\"display:none;\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.thumbnails : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
/*
*	Usage
*		To get individual segments
*			segment = xSeg.get(xSeg.XSEG_GLOBAL);
*
*		To check if the segment's page is a value
* 			var isInPageTest = xSeg.checkPageSegment(xSeg.XSEG_GLOBAL, "A");
*
*		To check if the segment's module is a value
* 			var isInModuleTest = xSeg.checkModuleSegment(xSeg.XSEG_GLOBAL, "1");
*/
redesign.define('coreServices/xSeg',['anfUtil/testFramework', 'jsCookie'], function (test, cookies) {
  'use strict';

  var partRegex = new RegExp(/([a-zA-Z]+)=([a-zA-Z]+)-(\d+)/);
  var nullValue = Object.create(Object.prototype,  {
    'page': {
      value: null,
      writable: false
    },
    'module': {
      value: null,
      writable: false
    }
  });
  var constants = [
    {
      name: 'XSEG_BAG',
      value: 'b'
    },
    {
      name: 'XSEG_CATALOG',
      value: 'c'
    },
    {
      name: 'XSEG_CHECKOUT',
      value: 'co'
    },
    {
      name: 'XSEG_CUSTOMER_SERVICE',
      value: 'cs'
    },
    {
      name: 'XSEG_GLOBAL',
      value: 'g'
    },
    {
      name: 'XSEG_HOMEPAGE',
      value: 'h'
    },
    {
      name: 'XSEG_PRODUCT',
      value: 'p'
    },
    {
      name: 'XSEG_SEARCH',
      value: 's'
    },
    {
      name: 'XSEG_SORT_RULE_MANAGER',
      value: 'sq'
    }
  ];
  var module = {
    /*
    * @description get the specific segment of the xSeg cookie
    * @param {string} segment the part of the xSeg cookie you are trying to get
    * @return {object} a standard object that contains the page and module portions of the segment, if segment was not found these values will be null
    */
    get: function (segment) {
      var returnValue = nullValue;

      if (test.object.containsKey(this.xSeg, segment, false)) {
        returnValue = this.xSeg[segment];
      }
      return returnValue;
    },
    /*
    * @description check if the page part of the segment equals the value supplied
    * @param {string} segment : the part of the xSeg cookie you are trying to get
    * @param {string} value : the value to be evaluated against the segment's page value
    * @return {boolean} if the value is the same as the segment's page value
    */
    checkPageSegment: function (segment, value) {
      var segmentValue = this.get(segment);
      return (segmentValue.page === value);
    },
    /*
    * @description check if the module part of the segment equals the value supplied
    * @param {string} segment : the part of the xSeg cookie you are trying to get
    * @param {string} value : the value to be evaluated against the segment's module value
    * @return {boolean} if the value is the same as the segment's module value
    */
    checkModuleSegment: function (segment, value) {
      var segmentValue = this.get(segment);
      return (segmentValue.module === value);
    }
  };

  /* Start Section For processing the xSegValue */

  /*
  * @description Private method to break down the x=y-0 parts of the xSeg value
  * @param {string} part : the individual segments from the xSeg cookie
  * @return {object} the processed object containing the key, page, and module
  */
  function processPart(part) {
    var returnValue = {
      key: null,
      page: null,
      module: null
    };

    var partBreakDown = partRegex.exec(part);

    try {
      returnValue.key = partBreakDown[1];
      returnValue.page = partBreakDown[2];
      returnValue.module = partBreakDown[3];
    } catch (e) {
      // Do nothing on failure
    }

    return returnValue;
  }

  /*
  * @description Private method to add a processed part to the rest of the segments object
  * @param {object} segmentGroups : the object that holds the segments
  * @param {object} segment : the segment being added to the segments.  should contain a key, page, and module value.
  * @return {object} the segmentGroups with the added segment
  */
  function combineProcessedParts(segmentGroups, segment) {
    if (
      test.string.not.empty(segment.key, false) &&
      test.string.not.empty(segment.page, false) &&
      test.string.not.empty(segment.module, false)
    ) {
      var segmentDescription = Object.create(Object.prototype,  {
        'page': {
          value: segment.page,
          writable: false
        },
        'module': {
          value: segment.module,
          writable: false
        }
      });

      Object.defineProperty(segmentGroups, segment.key, {
        value: segmentDescription,
        writable: false
      });
    }

    return segmentGroups;
  }

  Object.defineProperty(module, 'xSeg', {
    configurable: false,
    enumerable: false,
    get: function () {
      var cookie = cookies.get('xSeg');
      var returnValue = {};
      if (test.string.not.empty(cookie, false) && test.string.not.equalsIgnoreCase(cookie, 'null', false)) {
        returnValue = cookie.split('&')
          .map(processPart)
          .reduce(combineProcessedParts, {});
      }
      return returnValue;
    }
  });
  /* End Section For processing the xSegValue */

  /* Start Section For setting up CONSTANTS */
  constants.forEach(function (constant) {
    Object.defineProperty(module, constant.name, {
      value: constant.value,
      writable: false,
      enumerable: false
    });
  });
  /* End Section For setting up CONSTANTS */

  return module;
});

redesign.define('productModules/helpers/Utils',[
  'coreServices/xSeg'
], function defineUtils(
  xSeg
) {
  'use strict';

  var instance = null;

  function Utils() {
    if (instance !== null) {
      throw new Error('Cannot instantiate more than one Utils, use Utils.getInstance()');
    }

    this.initialize();
  }

  Utils.prototype = {
    initialize: function init() {
      // Initializes the singleton.
    },

    urlSearchParams: new URLSearchParams(window.location.search),

    /**
    * Detect if user is coming to PDP from an internal source
    * e.g. category page or not google!
    */

    isInternalBrowsingCustomer: function isInternalBrowsingCustomer(document) {
      var documentReferrer = document.referrer.toLowerCase();
      return documentReferrer.indexOf('abercrombie') !== -1 || documentReferrer.indexOf('hollisterco') !== -1;
    },

    /**
		 * Detect if quickview is opened
		 */
    get isQuickviewOpened() {
      return $('.product-quickview__modal[data-open="true"]').length > 0;
    },

    get isPdpPage() {
      return $('body').is('.product-page-v2');
    },

    /**
		 * Detect if exchange quickview is opened
		 */
    get isQuickviewExchangesOpened() {
      return $('.exchanges-quickview__modal[data-open="true"]').length > 0;
    },

    isKidsProduct: function isKidsProduct($productSection) {
      return $productSection.hasClass('is-kids-product');
    },

    getProductBrand: function getProductBrand(productId) {
      return this.getProductData(productId).productAttrs.brand;
    },

    /**
		 * Return the correct product section based on productID
		 * @param {String} productID The Product ID
		 * @return {Object} the jquery object of the correct product section
		 */
    getProductSection: function getProductSection() {
      var productSelectorString = '.product-page-v2-modules';
      return this.isQuickviewOpened ? $('.product-quickview__modal[data-open="true"]').find(productSelectorString) : $(productSelectorString);
    },

    baseGet: function baseGet(object, path) {
      var pathArr = path.split('.');
      var index = 0;
      var length = pathArr.length;
      var tempObj = object;

      while (tempObj !== null && typeof tempObj !== 'undefined' && index < length) {
        tempObj = tempObj[pathArr[index++]] || null;
      }
      return index && index === length ? tempObj : null;
    },

    /**
		 * Gets the value at `path` of `object`. If the resolved value is
		 * `undefined`, the `defaultValue` is returned in its place.
		 *
		 * @param {Object} object The object to query.
		 * @param {string} path The path of the property to get.
		 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
		 * @returns {*} Returns the resolved value.
		 * @example
		 *
		 * var object = { 'a': { 'b': { 'c': 3 } } };
		 *
		 * Utils.getValueFromObject(object, 'a.b.c');
		 * // => 3
		 *
		 * Utils.getValueFromObject(object, 'a.b.c.d', 'default');
		 * // => 'default'
		 */
    getValueFromObject: function getValueFromObject(object, path, defaultValue) {
      var result = object === null || object === typeof 'undefined' ? null : this.baseGet(object, path);
      return typeof result === 'undefined' || result === null ? defaultValue : result;
    },

    getParentProductSection: function getParentProductSection($child) {
      return $child.parents('.product-page-v2-modules');
    },

    getANFObject: function getANFObject() {
      return ANF;
    },

    getProductData: function getProductData(productId) {
      return productCatalog[productId] || {};
    },

    /**
     * @description Return an object with modelHeight and modelSize based on the selectedModel
     * @param {String} productId product id
     * @return {modelSpecs} return modelHeight and modelSize
     */
    getModelSpecs: function getModelSpecs(productId) {
      var productData = this.getProductData(productId);
      var defaultModelStr = window.selectedModelSegment || this.getValueFromObject(productData, 'productAttrs.ModelData.defaultModel', null);
      var selectedModel = defaultModelStr && productData.productAttrs.ModelData ? productData.productAttrs.ModelData[defaultModelStr] : null;

      var modelHeight = selectedModel ? selectedModel.height : this.getValueFromObject(productData, 'productAttrs.OFPModelHeight', '');
      var modelSize = selectedModel ? selectedModel.size : this.getValueFromObject(productData, 'productAttrs.OFPModelSize', '');

      return {
        modelHeight: modelHeight,
        modelSize: modelSize
      };
    },

    hasFinalSaleEnabled: function hasFinalSaleEnabled() {
      return window.digitalData.get('flag.has-pdp-final-sale', false);
    },

    getProductDepartmentId: function getProductDepartmentId(productId) {
      return this.getProductData(productId).kicId.split('_')[1].split('-')[0];
    },

    getProductKicId: function getProductKicId(productId) {
      return this.getProductData(productId).kicId;
    },

    isJeansProduct: function isJeansProduct(productId) {
      var jeansDepartmentIds = this.getANFObject().params.storeAttributes.jeansDepartmentIds.split(',');
      var productDepartmentId = this.getProductDepartmentId(productId);
      return  jeansDepartmentIds.includes(productDepartmentId);
    },

    productHasEarlyAccessIndicator: function productHasEarlyAccessIndicator(productId) {
      var earlyAccessIndicator = this.getValueFromObject(this.getProductData(productId).productAttrs, 'EarlyAccessIndicator', '');
      return earlyAccessIndicator.toString().toLowerCase() === 'true';
    },

    hasProductMFEEnabled: function hasProductMFEEnabled() {
      var hasProductMFEEnabledStoreAttr = this.getANFObject().params.storeAttributes.catalogV2.hasProductMFEEnabled;
      var hasProductMFEEnabledParam = this.urlSearchParams.get('hasProductMFEEnabled');
      var isDevEnv = this.getANFObject().params.env.name === 'DEV';

      return hasProductMFEEnabledStoreAttr || (hasProductMFEEnabledParam && isDevEnv);
    },

    hasPDPMFEBelowTheFold: function hasPDPMFEBelowTheFold() {
      return this.getANFObject().params.storeAttributes.catalogV2.hasPDPMFEBelowTheFold;
    },

    isExternalUser: function isExternalUser() {
      var paramNames = ['cmp', 'source', 'utm_source'];
      var isExternalVisitor = false;
      var pdpExternalVisitorEnabledCheck = ANF.params.storeAttributes.catalogV2.hasPDPExternalVisitorEnabled && xSeg.checkPageSegment(xSeg.XSEG_PRODUCT, 'CT');

      for (var i = 0; i < paramNames.length; i++) {
        if (new URLSearchParams(window.location.search).has(paramNames[i])) {
          isExternalVisitor = true;
        }
      }
      return pdpExternalVisitorEnabledCheck && isExternalVisitor;
    },

    hasQuickviewMfeEnabled: function hasQuickviewMfeEnabled() {
      var hasQuickviewMfeEnabledStoreAttr = this.getANFObject().params.storeAttributes.catalogV2.hasQuickviewMfeEnabled;
      var hasQuickviewMfeEnabledParam = this.urlSearchParams.get('hasQuickviewMFEEnabled');
      var isDevEnv = this.getANFObject().params.env.name === 'DEV';

      return hasQuickviewMfeEnabledStoreAttr || (hasQuickviewMfeEnabledParam && isDevEnv);
    },

    isEyewearProduct: function isEyewearProduct(productAttrsData) {
      var hasEyewearEnabled = this.getANFObject().params.storeAttributes.catalogV2.hasEyewearEnabled;
      return !!(hasEyewearEnabled && productAttrsData && (
        productAttrsData.EyewearDimensionLensWidth ||
        productAttrsData.EyewearDimensionBridgeWidth ||
        productAttrsData.EyewearDimensionArmLength
      ));
    }
  };

  Utils.getInstance = function getInstance() {
    // Gets an instance of the singleton.
    if (instance === null) {
      instance = new Utils();
    }
    return instance;
  };

  return Utils.getInstance();
});

redesign.define('productModules/helpers/imageLoadHelper',['coreClass/ANFImage'],
  function imageLoadHelper(ANFImage) {
    'use strict';

    function removeBrokenImageFromArray($productSection, failedImageId) {
      var imageProcessedArray = publicMembers.getProcessedImageArray($productSection);

      return imageProcessedArray.filter(function removeBrokenImageId(item) {
        return failedImageId !== item.id;
      });
    }

    function removeBrokenImageFromImageObject($productSection, failedImageId, imageType) {
      var imageDataModel = publicMembers.getImageDataModel($productSection);
      var imageSetType = imageType;

      if (imageType === 'product') {
        imageSetType = 'prod';
      } else if (imageType === 'lifestyle') {
        imageSetType = 'life';
      } else if (imageType === 'user') { // ugc images alt text is "user generated #"
        imageSetType = 'ugc';
      }

      imageDataModel[imageSetType] = imageDataModel[imageSetType].filter(function removeBrokenImageFromObjectArray(item) {
        return failedImageId !== item.id;
      });

      return imageDataModel;
    }

    var publicMembers = {
      removeFailedImage: function reomoveFailedImage(failedImageElement, $productSection, imageType, imageId) {
        var $brokenImage = $(failedImageElement);

        var newImageProcessedArray = removeBrokenImageFromArray($productSection, imageId);
        var newImageDataModel = removeBrokenImageFromImageObject($productSection, imageId, imageType);


        return {
          imageArray: newImageProcessedArray,
          imageObject: newImageDataModel,
          $brokenImage: $brokenImage
        };
      },
      storeImageData: function storeImageData($productSection, processedImageArray, imageDataModel) {
        $productSection.data('processedImageArray', processedImageArray);
        $productSection.data('imageDataModel', imageDataModel);
      },
      getProcessedImageArray: function getProcessedImageArray($productSection) {
        return  $productSection.data('processedImageArray');
      },
      getImageDataModel: function getImageDataModel($productSection) {
        return  $productSection.data('imageDataModel');
      },

      loadImages: function loadImages(images, successCallback, failCallback) {
        // The object that will be returned in the callback
        var log = {
          success: [],
          error: [],
          totalImageCount: images.length
        };

        // Executed everytime an img is successfully or wrongly loaded
        var verifier = function verifier() {
          /* total count should be successful loads + error loads.
            But we dont want to call success if all images failed.
            inifite slider setup loop caused EPIC-9359 */
          if (log.success.length + log.error.length === log.totalImageCount && log.error.length !== log.totalImageCount) {
            successCallback.call(null, log);
          }
        };

        // Loop through all the images URLs
        for (var index = 0; index < images.length; index++) {
          // Prevent that index has the same value by wrapping it inside an anonymous fn
          (function setListeners(i) {
            // Image path providen in the array e.g image.png
            var el = images[i];
            var src = el.getAttribute('data-src');
            var img = new Image();

            img.addEventListener('load', function load() {
              if (!!el.parent) {
                el.parent.replaceChild(img, el);
              } else {
                el.src = src;
              }
              log.success.push(el);
              verifier();
            }, false);

            img.addEventListener('error', function error() {
              log.failedImageElement = el;
              log.error.push(el);
              failCallback.call(null, log);
              verifier();
            }, false);

            img.src = src;
          })(index);
        }
      },

      getProd1ImageId: function getProd1ImageId(imageSets) {
        var imageId;
        if (imageSets && imageSets.prod.length > 0) {
          imageId = imageSets.prod[0].imageId;
        } else {
          imageId = this.getNoImageAvailableAssetImageId();
        }

        return imageId;
      },

      getNoImageAvailableAssetUrl: function getNoImageAvailableAssetUrl() {
        var id = this.getNoImageAvailableAssetImageId();

        return ANFImage.instance()
          .setImageName(id)
          .setSizePresetEnabled(false)
          .url;
      },

      getNoImageAvailableAssetImageId: function getNoImageAvailableAssetImageId() {
        var currentBrand = $('header').attr('data-brand');
        var brandFlag;

        switch (currentBrand) {
          case 'anf':
            brandFlag = 1;
            break;
          case 'kids':
            brandFlag = 2;
            break;
          default:
            brandFlag = 3;
            break;
        }

        return 'KIC_' + brandFlag + 'XX-XXXX-XXXX-XXX';
      }
    };

    return publicMembers;
  }
);

redesign.define('productModules/product/productThumbnails',[
  'anfcore/components/slider',
  'productPartial/pdp_productThumbnailButton',
  'productModules/helpers/Utils',
  'coreClass/ANFImage',
  'productModules/helpers/imageLoadHelper'
], function ProductThumbnails(
  dsSlider,
  productPartialPdpProductThumbnailButton,
  Utils,
  ANFImage,
  imageLoadHelper
) {
  'use strict';

  var thumbnailContainerSelectorClass = '.product-thumbnails__container .product-thumbnails';
  var productThumbnailWrapperSelectorClass = '.product-thumbnails__container';
  var productMainImagesWrapperSelectorClass = '.product-main-images__wrapper';
  var productMainImagesSelectorClass = '.product-main-images';
  var thumbnailInnerWrapperSelectorClass = '.thumbnail-inner-wrapper';
  var thumbnailButtonSelectorClass = '.product-thumbnail-button';

  var messageBus = $(ANF);
  var $newThumbnailsContainer;
  var $oldThumbnailsContainer;

  function onSwatchChanged(e, data) {
    var $productSection = data.$productSection;
    var processedImageArray = data.processedImageArray;
    $oldThumbnailsContainer = $productSection.find(thumbnailContainerSelectorClass).first();
    removeHalfLoadingThumbnails();

    imageLoadHelper.storeImageData($productSection, processedImageArray, data.imageDataModel);

    if (processedImageArray.length > 1) {
      // convert data to html and insert add it to .product-thumbnails__container
      var thumbnailsData = getThumbnailsData(processedImageArray);
      var thumbnailsHtml = productPartialPdpProductThumbnailButton.templates.pdp_productThumbnailButton({thumbnails: thumbnailsData});
      $newThumbnailsContainer = $(thumbnailsHtml)
        .appendTo($productSection.find(productThumbnailWrapperSelectorClass));
      // load thumbnails images
      var $images = $newThumbnailsContainer.find('img');
      imageLoadHelper.loadImages($images, onThumbnailsImagesLoaded, onThumbnailLoadFailure);
    } else {
      removeOldThumbnails($oldThumbnailsContainer);
      messageBus.trigger('thumbnailSlider:InitComplete');
    }
  }

  function getThumbnailsData(imageData) {
    var thumbnailsData =  [];
    imageData.forEach(function mapImageData(image, idx) {
      var altText = ANF.messaging.catalogV2.thumbnailTMNTs[image.type + 'AltImageText'];
      var thumbnail = {
        'selected': (parseInt(idx, 10) === 0),
        'data-src': ANFImage.instance()
          .setImageName(image.id)
          .setWidth(60)
          .url,
        'alt': altText.replace('{0}', image.index),
        'imageId': image.id,
        'imageType': image.type
      };

      thumbnailsData.push(thumbnail);
    });

    return thumbnailsData;
  }

  function onThumbnailsImagesLoaded() {
    removeOldThumbnails($oldThumbnailsContainer);
    // fade new one in
    if ($newThumbnailsContainer) {
      if (Utils.isQuickviewOpened) {
        $newThumbnailsContainer.fadeIn(0, onCrossfadeEnd);
      } else {
        $newThumbnailsContainer.fadeIn(200, onCrossfadeEnd);
      }
    }
  }

  function onThumbnailLoadFailure(log) {
    var $failedImage = $(log.failedImageElement);
    var $thumbnailButton = $failedImage.closest(thumbnailButtonSelectorClass);
    var failedImageType = $thumbnailButton.data('image-type');
    var failedImageId = $thumbnailButton.data('image-id');
    var $productSection = Utils.getParentProductSection($failedImage);
    var cleanedImageDataObject = imageLoadHelper.removeFailedImage(log.failedImageElement, $productSection, failedImageType, failedImageId);

    $failedImage.closest(thumbnailButtonSelectorClass).remove();
    imageLoadHelper.storeImageData($productSection, cleanedImageDataObject.imageArray, cleanedImageDataObject.imageObject);
  }

  function onCrossfadeEnd() {
    publicMembers.slider = $newThumbnailsContainer;
    // turn to slider
    $newThumbnailsContainer.on('beforeChange', onThumbnailsBeforeChange);
    $newThumbnailsContainer.on('afterChange', onThumbnailsAfterChange);
    $newThumbnailsContainer.on('init', onSliderInit);
    $newThumbnailsContainer.on('setPosition', onSliderSetPosition);
    $newThumbnailsContainer.on('breakpoint', onSliderBreakpoint);
    initDSSlider($newThumbnailsContainer);

    messageBus.trigger('thumbnailSlider:InitComplete');

    // reset variables
    $oldThumbnailsContainer = null;
    $newThumbnailsContainer = null;
  }

  function onSliderInit(e, slick) {
    var $nextArrow = slick.$nextArrow;
    var $prevArrow = slick.$prevArrow;
    var $slider = slick.$slider;

    if ($nextArrow.hasClass('slick-hidden')) {
      $slider.removeClass('has-arrows');
    } else {
      $slider.addClass('has-arrows');
      $prevArrow.attr('tabindex', -1);
    }
  }

  function onSliderSetPosition(e, slick) {
    var $slider = slick.$slider;
    var $slickTrack = $slider.find('.slick-track');
    // prevent slider moving up when vertical
    if (!$slider.hasClass('has-arrows') && slick.options.vertical === true) {
      $slickTrack.css('transform', 'translate3d(0px, 0px, 0px)');
    }
  }

  function onThumbnailsBeforeChange(e, slick, currentSlideIndex, nextSlideIndex) {
    var $slides = slick.$slides;
    var currentSlide = $slides[currentSlideIndex].querySelector(thumbnailInnerWrapperSelectorClass);
    var nextSlide = $slides[nextSlideIndex].querySelector(thumbnailInnerWrapperSelectorClass);

    // unselect current slide
    if (currentSlide) currentSlide.setAttribute('data-state', '');

    // select next slide
    if (nextSlide) nextSlide.setAttribute('data-state', 'selected');
  }

  function onThumbnailsAfterChange(e, slick) {
    var $prevArrow = slick.$prevArrow;
    var $nextArrow = slick.$nextArrow;

    if ($prevArrow.hasClass('slick-disabled')) {
      $prevArrow.attr('tabindex', -1);
    } else {
      $prevArrow.attr('tabindex', 0);
    }
    if ($nextArrow.hasClass('slick-disabled')) {
      $nextArrow.attr('tabindex', -1);
    } else {
      $nextArrow.attr('tabindex', 0);
    }
  }

  function onSliderBreakpoint(e, slick, breakpoint) {
    if (breakpoint) {
      var $slider = slick.$slider;
      var $mainImage = slick.getOption('asNavFor');
      var $thumbnail = $slider.find(thumbnailButtonSelectorClass).first();
      var slidesToShow = getSlidesToShow($mainImage, $thumbnail);

      var slickSlidesToShowOption = slidesToShow.slidesToShowVertical;
      if (breakpoint === 540) slickSlidesToShowOption = slidesToShow.slidesToShowHorizontal;

      slick.slickSetOption('slidesToShow', slickSlidesToShowOption);
      slick.refresh();
      onSliderInit(e, slick);

      var thumbnails = $slider.find(thumbnailInnerWrapperSelectorClass);
      thumbnails.attr('data-state', '');
      thumbnails[0].setAttribute('data-state', 'selected');
    }
  }

  function getSlidesToShow($mainImage, $thumbnail) {
    var slidesToShow = {
      slidesToShowVertical: 1,
      slidesToShowHorizontal: 1
    };

    // this was a painpoint! if either the mainImageWidth and mainImageHeight are negative you get an inifite loop. - NT+JR 3/31/20
    var paddingForArrowsHorizonal = 92;
    var mainImageWidth = $mainImage.width() - paddingForArrowsHorizonal;
    var thumbnailWidth = $thumbnail.width();
    // default to 1 if Infinity
    slidesToShow.slidesToShowHorizontal = thumbnailWidth !== 0 ? Math.floor(mainImageWidth / thumbnailWidth) : 1;

    var paddingForArrowsVertical = 80;
    var mainImageHeight = ($mainImage.width() * 1.25) - paddingForArrowsVertical;
    var thumbnailHeight = $thumbnail.height();
    // default to 1 if Infinity
    slidesToShow.slidesToShowVertical = thumbnailHeight !== 0 ? Math.floor(mainImageHeight / thumbnailHeight) : 1;

    return slidesToShow;
  }

  function initDSSlider($thumbnails) {
    var $correspondingMainImages = $thumbnails
      .parent(productThumbnailWrapperSelectorClass)
      .siblings(productMainImagesWrapperSelectorClass)
      .find(productMainImagesSelectorClass)
      .last();
    var $thumbnail = $thumbnails.find(thumbnailButtonSelectorClass).first();
    var slidesToShow = getSlidesToShow($correspondingMainImages, $thumbnail);

    var thumbnailSliderSettings = {
      arrows: true,
      asNavFor: $correspondingMainImages,
      focusOnSelect: true,
      infinite: false,
      mobileFirst: true,
      variableWidth: true,
      waitForAnimate: false,
      responsive: [
        {
          breakpoint: 540,
          settings: {
            slidesToShow: slidesToShow.slidesToShowHorizontal
          }
        },
        {
          breakpoint: 825,
          settings: {
            slidesToShow: slidesToShow.slidesToShowVertical,
            verticalSwiping: true,
            variableWidth: false,
            vertical: true
          }
        }
      ]
    };

    publicMembers.thumbnailSlider.initializeSlider($thumbnails[0], thumbnailSliderSettings);
  }

  function removeOldThumbnails($oldthumbnails) {
    $($oldthumbnails).remove();
  }

  function removeHalfLoadingThumbnails() {
    $($newThumbnailsContainer) // stop any animation is currently running on the element then remove
      .stop(true, true)
      .remove();
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productMainImage:load productThumbnails:reload', onSwatchChanged);
    },

    thumbnailSlider: dsSlider.default()
  };

  return publicMembers;
});

redesign.define('productPartial/pdp_productImages',['handlebars','dsHelper/concat','wcsHelper/i18n'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_productImages", this["ANF"]["templates"]["pdp_productImages"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.isUGC : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <div class=\"product-main-images__image product-main-images__image--ugc\" data-orig-role=\"button\"  >\n         <img class=\"product-main-image\" data-lazy=\""
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "\" alt=\""
    + alias2(helpers.concat.call(alias3,helpers.i18n.call(alias3,helpers.concat.call(alias3,"product.product_alt_",(depth0 != null ? depth0.type : depth0),"img",{"name":"concat","hash":{},"data":data}),{"name":"i18n","hash":{},"data":data})," ",(depth0 != null ? depth0.index : depth0),{"name":"concat","hash":{},"data":data}))
    + "\" data-image-id=\""
    + alias2(alias1((depth0 != null ? depth0.imageId : depth0), depth0))
    + "\" itemprop=\"image\"/>\n      </div>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : (container.nullContext || {});

  return "        <button class=\"product-main-images__image product-main-images__zoom-modal-button\" data-image-type=\""
    + alias2(alias1((depth0 != null ? depth0.type : depth0), depth0))
    + "\" tabindex=\"-1\">\n          <img class=\"product-main-image\" data-lazy=\""
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "\" alt=\""
    + alias2(helpers.concat.call(alias3,helpers.i18n.call(alias3,helpers.concat.call(alias3,"product.product_alt_",(depth0 != null ? depth0.type : depth0),"img",{"name":"concat","hash":{},"data":data}),{"name":"i18n","hash":{},"data":data}),(depth0 != null ? depth0.index : depth0),{"name":"concat","hash":{},"data":data}))
    + "\" data-image-id=\""
    + alias2(alias1((depth0 != null ? depth0.imageId : depth0), depth0))
    + "\" itemprop=\"image\"/>\n        </button>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"product-main-images slider js-slider js-main-image loading\">\n"
    + ((stack1 = helpers.blockHelperMissing.call(depth0,container.lambda((depth0 != null ? depth0.mainImages : depth0), depth0),{"name":"mainImages","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>\n";
},"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/productMainImage',[
  'productPartial/pdp_productImages',
  'anfcore/components/slider',
  'productModules/helpers/Utils',
  'productModules/helpers/imageLoadHelper',
  'coreClass/ANFImage'
],
function productMainImage(
  productPartialPdpProductImages,
  dsSlider,
  Utils,
  imageLoadHelper,
  ANFImage
) {
  'use strict';

  var mainImagesContainerWrapperSelectorClass = '.product-main-images__wrapper';
  var loadedMainImagesSelectorClass = '.product-main-images:not(:last-of-type)';
  var nonUGCMainImageClass = '.product-main-images .product-main-images__image:not(.product-main-images__image--ugc)';
  var loadingClass = 'loading';
  var productLoadingContainerSelectorClass = '.product-main-images__loading-container';
  var mainImageZoomModalButtonSelectorClass = '.product-main-images__zoom-modal-button';
  var mainImageSliderSettings = {
    accessibility: true,
    arrows: false,
    dots: true,
    dotsClass: 'slick-dots ds-override',
    hoverArrows: true,
    infinite: false,
    lazyLoad: 'progressive',
    mobileFirst: true,
    responsive: [
      {
        breakpoint: 540,
        settings: {
          asNavFor: Utils.isQuickviewOpened ? null : '.product-thumbnails__container .product-thumbnails',
          dots: Utils.isQuickviewOpened ? true : false,
          fade: true,
          waitForAnimate: false
        }
      },
      {
        breakpoint: 825,
        settings: {
          asNavFor: null,
          dots: false
        }
      }
    ]
  };
  // Implementing a queue for handling swatch changes in rapid succession
  var queue = [];
  var queueProcessing = false;
  var noImageAvailableAssetImageId = imageLoadHelper.getNoImageAvailableAssetImageId();
  var noImgProcessedImageArray = [{
    id: noImageAvailableAssetImageId,
    imageId: noImageAvailableAssetImageId,
    index: 1,
    isUGC: false,
    src: imageLoadHelper.getNoImageAvailableAssetUrl(),
    type: 'prod'
  }];
  var mainImageWidth = 800;

  var messageBus = $(ANF);

  function imageLoadHandler(e, data) {
    // push data for current swatch into queue to handle swatch clicks in rapid succession
    queue.push({
      processedImageArray: data.processedImageArray.slice(0),
      imageDataModel: data.imageDataModel,
      productId: data.productId,
      $productSection: data.$productSection,
      $mainImagesContainerWrapper: data.$productSection.find(mainImagesContainerWrapperSelectorClass)
    });

    processQueue();

    if (!Utils.isQuickviewOpened) {
      if (Utils.isExternalUser()) {
        $('.product-page-user-content__recommendations').addClass('hide');
        $('.pdp-grid-container').removeClass('hide');
      }
    }
  }

  function processQueue() {
    if (queueProcessing) {
      return;
    }

    if (queue.length) {
      queueProcessing = true;
      var currentQueueObj = queue.pop();
      queue = [];

      if (currentQueueObj.processedImageArray.length < 1) {
        currentQueueObj.processedImageArray = noImgProcessedImageArray;
      }
      addNewImages(currentQueueObj);
    }
  }

  function addNewImages(currentQueueObj) {
    var obj = currentQueueObj;
    obj.processedImageArray.forEach(function addImageSrc(imageData) {
      var imgData = imageData;
      imgData.src = ANFImage.instance()
        .setImageName(imgData.id)
        .setWidth(mainImageWidth)
        .url;
    });

    // need jquery object of the hbs output to listen for load/error on each image to be added
    obj.$imagesMarkup = $(productPartialPdpProductImages.templates.pdp_productImages({mainImages: obj.processedImageArray}));
    currentQueueObj.$mainImagesContainerWrapper.append(obj.$imagesMarkup);

    postFadeProcess(obj);
    initSlider(obj);
  }

  function postFadeProcess(currentQueueObj) {
    var $productSection = currentQueueObj.$productSection;
    currentQueueObj.$productSection.find(loadedMainImagesSelectorClass).remove();

    // on reload this fires the thumbies reload
    messageBus.trigger('productMainImage:firstDownloadComplete', $productSection);

    $productSection.find(productLoadingContainerSelectorClass).removeClass(loadingClass); // remove for mobile
    currentQueueObj.$imagesMarkup.removeClass(loadingClass); // remove for desktop

    if (!Utils.isQuickviewOpened) {
      window.setTimeout(function detailsImageLoadTimeout() { // to move trigger response to the end of the JS queue
        messageBus.trigger('productPageReviews:updateImage', [$productSection]);
      }, 0);
    }
    queueProcessing = false;
    processQueue();
  }

  function imageFailedLoadHandler(sliderObj, failedImage) {
    var slickIndex = $(failedImage).closest('.slick-slide').attr('data-slick-index');
    sliderObj.$slider.slick('slickRemove', slickIndex);
    sliderObj.$slider.slick('slickGoTo', slickIndex);
  }

  function initSlider(currentQueueObj) {
    var $container = currentQueueObj.$imagesMarkup;
    $container.on('afterChange', onSlideChange);
    $container.on('init', onSlideInit);
    $container.on('lazyLoadError', function lazyLoadErrorDataPassThrough(_e, sliderObj, $img) {
      imageFailedLoadHandler(sliderObj, $img, currentQueueObj.$productSection);
    });
    $container.on('lazyLoaded', function lazyLoadedFunction(_e, slick, $img) {
      if ($img.closest('.slick-slide').data('slick-index') === 0) {
        $img.fadeIn(100, function isfirstImageLoaded() {
          if (Utils.isQuickviewOpened) {
            // push this trigger to the back of the JS stack, so the quickview load sequence can begin and not be held up by magnify.
            window.setTimeout(function startMagnifyImages() {
              messageBus.trigger('quickviewImages:mainImageLoaded', slick.$slider);
            }, 0);
          } else {
            $('.complementary-products-container').fadeIn(100);
          }
        });
      } else {
        $img.addClass('loaded');
      }
    });

    dsSlider.default().initializeSlider($container[0], mainImageSliderSettings);
  }

  function onSlideChange(event, slick, currentSlide) {
    var $currentSlickSlide = $($(slick.$slides).get(currentSlide));
    $(ANF).trigger('productMainImage:sliderAfterChange', $currentSlickSlide);
  }
  // This function will fire again if we end up removing a slide from the Main Image Slider
  function onSlideInit() {
    $(ANF).trigger('productMainImage:sliderInit');
  }

  function mainImageClickHandler(e) {
    var $selectedImage = $(e.currentTarget);
    messageBus.trigger('productMainImage:mainImageClicked', [{
      idx: $selectedImage.closest('.slick-slide').attr('data-slick-index'),
      $productSection: $selectedImage.closest('.product-page-v2-modules'),
      image: $selectedImage.find('img'),
      imageButton: $selectedImage.find(mainImageZoomModalButtonSelectorClass)
    }]);
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productMainImage:load productMainImage:reload productPageMainImages:modelSelected', imageLoadHandler);
    },
    bindEvents: function bindEvents() {
      $(mainImagesContainerWrapperSelectorClass).on('click', nonUGCMainImageClass, mainImageClickHandler);
    }
  };

  return publicMembers;
});

redesign.define('productModules/helpers/breakpoints',[], function BreakpointsMain() {
  'use strict';

  /**
   * A convenience way to track breakpoint and window resize event
   * Built-in to the global ANF object and already run on page
   * @example
   * // Strings for different screen size
   * 'small_phone' 'phone' 'tablet' 'small_desktop' 'desktop' 'large_desktop' 'max_desktop'
   * // To get the current screen size
   * console.log(ANF.breakpoints.screen)
   **/

  function Breakpoints() {
    this.screen = null;

    this.options = [
      {
        maxWidth: 359,
        name: 'small_phone'
      },
      {
        maxWidth: 539,
        name: 'phone'
      },
      {
        maxWidth: 699,
        name: 'tablet'
      },
      {
        maxWidth: 824,
        name: 'small_desktop'
      },
      {
        maxWidth: 1024,
        name: 'desktop'
      },
      {
        maxWidth: 1499,
        name: 'large_desktop'
      },
      {
        maxWidth: 100000,
        name: 'max_desktop'
      }
    ];

    this.screens = this.options.map(function map(obj, idx, array) {
      var minWidth;
      var maxWidth;

      maxWidth = obj.maxWidth;

      if (idx === 0) {
        minWidth = 0;
      } else {
        minWidth = array[idx - 1].maxWidth + 1;
      }

      return [minWidth, maxWidth, obj.name];
    });

    this.getCurrentScreen = function getCurrentScreen(width) {
      var currentScreenData;
      var	currentScreenType;

      currentScreenData = this.screens.filter(function filter(element) {
        if (element[0] <= width && width <= element[1]) {
          return true;
        }
        return false;
      });

      try {
        currentScreenType = currentScreenData[0][2];
      } catch (event) {
        currentScreenType = this.screens[this.screens.length - 1][2];
      }

      if (currentScreenType !== this.screen) {
        this.screen = currentScreenType;
      }
    };

    this.getCurrentScreen(window.innerWidth, true);

    return this;
  }

  var breakpoints = new Breakpoints();

  ANF.breakpoints = breakpoints;

  return breakpoints;
});

redesign.define('productPartial/pdp_productImagesZoom',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_productImagesZoom", this["ANF"]["templates"]["pdp_productImagesZoom"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "    <li class=\"product-zoom__image loading\" data-collection=\""
    + alias2(alias1((depth0 != null ? depth0.collectionId : depth0), depth0))
    + "\" tabindex=\"-1\">\n      <img data-src=\""
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "\" data-collection=\""
    + alias2(alias1((depth0 != null ? depth0.collectionId : depth0), depth0))
    + "\"\n        alt=\""
    + alias2(alias1((depth0 != null ? depth0.altText : depth0), depth0))
    + "\" />\n    </li>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"product-zoom__thumbnails\">\n</div>\n<ul class=\"product-zoom__images\">\n"
    + ((stack1 = helpers.blockHelperMissing.call(depth0,container.lambda((depth0 != null ? depth0.zoomImages : depth0), depth0),{"name":"zoomImages","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</ul>\n";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_mobileZoomImage',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_mobileZoomImage", this["ANF"]["templates"]["pdp_mobileZoomImage"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "<img id=\"zoom-img\" class=\"loading\" src=\""
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "\" alt=\""
    + alias2(alias1((depth0 != null ? depth0.alt : depth0), depth0))
    + "\" />";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_zoomThumbnails',['handlebars','dsPartial/button','dsPartial/thumbnail'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_zoomThumbnails", this["ANF"]["templates"]["pdp_zoomThumbnails"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.button,depth0,{"name":"button","hash":{"variant":"borderless-button","type":"button"},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.thumbnail,depth0,{"name":"thumbnail","hash":{"selected":false,"selectedText":(depth0 != null ? depth0.Selected : depth0),"alt":(depth0 != null ? depth0.altText : depth0),"src":(depth0 != null ? depth0.src : depth0)},"data":data,"indent":"            ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class='zoom-thumbnail-list slider'>\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.thumbImages : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</div>";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/productZoom',[
  'productModules/helpers/breakpoints',
  'anfcore/components/modal',
  'anfcore/components/slider',
  'productModules/helpers/imageLoadHelper',
  'anfUtil/testFramework',
  'coreClass/ANFImage',
  'productPartial/pdp_productImagesZoom',
  'productPartial/pdp_mobileZoomImage',
  'productPartial/pdp_zoomThumbnails',
  'productModules/helpers/Utils'
], function ProductZoom(
  breakpoints,
  modal,
  slider,
  imageLoadHelper,
  test,
  ANFImage,
  productPartialPdpProductImagesZoom,
  productPartialPdpMobileZoomImage,
  productPartialPdpZoomThumbnails,
  Utils
) {
  'use strict';

  // Constants
  var $window = $(window);
  var dsModal = modal.default();
  var dsSlider = slider.default();
  var messageBus = $(ANF);
  var zoomImagesContainerSelectorClass = '.product-zoom__images';
  var zoomImageWrapperSelectorClass = '.product-zoom__image';
  var zoomModalContainerSelectorClass = '.product-zoom__modal';
  var zoomThumbnailInnerWrapperSelector = '.thumbnail-inner-wrapper';
  var zoomThumbnailSlideSelector = '.slide';
  var zoomThumbWrapperSelectorClass = '.product-zoom__thumbnails .thumbnail-inner-wrapper';
  var zoomThumbWrapperElement = '<div class="product-zoom__thumbnails"></div>';
  var mobileImageWidth = 800;
  var imageWidth = 1900;
  var zoomThumbWidth = 60;
  // end Constants

  var publicMembers = {
    bindEvents: function bindEvents() {
      $(document).on('click touchstart', '.product-zoom__modal .slick-slide .slide', thumbnailSelectEventHandler);
    },

    listen: function listen() {
      messageBus.on('productMainImage:mainImageClicked', initZoomModal);
    }
  };

  function initZoomModal(_e, data) {
    var $productSection = data.$productSection;
    var productId = $productSection.attr('data-productid');
    var collectionId = Utils.getProductData(productId).collection;
    var $zoomModalContentBlock = $productSection.find('.product-zoom__modal .modal-block .modal-content');
    var $imageButton = data.imageButton;
    var zoomModal;

    var zoomImageLoaderObject = {};
    zoomImageLoaderObject[productId] = {};
    zoomImageLoaderObject[productId].productSection = $productSection;
    zoomImageLoaderObject[productId].parentCollectionId = collectionId;

    if (isMobile()) {
      zoomModal = renderMobileZoom(data, collectionId, $zoomModalContentBlock, productId);
    } else {
      zoomImageLoaderObject[productId] = prepareZoomImagesForLoad(data, zoomImageLoaderObject[productId]);
      zoomModal = openDesktopZoomModal(zoomImageLoaderObject[productId]);
      $zoomModalContentBlock.html(zoomThumbWrapperElement);

      if (zoomImageLoaderObject[productId].imageDataSrcArray.zoomImages.length > 1) {
        handleZoomThumbnailsLoad(zoomImageLoaderObject[productId], $zoomModalContentBlock);
      }
      downloadImages(zoomImageLoaderObject[productId], $zoomModalContentBlock, $(zoomModal), data.idx);
    }

    zoomModal.addEventListener('dsModal:Close', function restoreImageFocus() {
      $window.off('resize.zoom');
      $imageButton.focus();
    }, {once: true});

    setTimeout(function showZoomTimeout() {
      // TODO: remove after image presentation test over
      $window.trigger('analytics.miscProductFeature', {
        'type': 'PDP Image',
        'action': 'click'
      });
    }, 0);
  }

  function openDesktopZoomModal(zoomImageLoaderObject) {
    var zoomModal = dsModal.openModal('product-zoom__' + zoomImageLoaderObject.parentCollectionId);

    $window.on('resize.zoom', onResizeThumbnailSliderUpdate);

    return zoomModal;
  }

  function prepareZoomImagesForLoad(data, zoomImageLoaderObject) {
    var renderedHtml;
    var $currentProductSection = data.$productSection;
    var newZoomImageLoaderObject = zoomImageLoaderObject;
    var collectionId = zoomImageLoaderObject.parentCollectionId;
    var imageDataSrcArray = {
      zoomImages: [],
      thumbImages: []
    };

    $currentProductSection.data('processedImageArray').forEach(function zoomImageDataModelCuration(image) {
      // we dont add UGC images to Zoom
      if (image.isUGC) {
        return false;
      }
      var zoomImageSrc = ANFImage.instance()
        .setImageName(image.imageId)
        .setWidth(imageWidth)
        .url;

      var zoomThumnbailSrc = ANFImage.instance()
        .setImageName(image.imageId)
        .setWidth(zoomThumbWidth)
        .url;

      var zoomImageObject = {
        src: zoomImageSrc,
        collectionId: collectionId,
        isOFP: false
      };
      var zoomThumbImageObject = {
        src: zoomThumnbailSrc,
        isOFP: false
      };

      if (image.type === 'model') {
        zoomImageObject.isOFP = true;
        zoomImageObject.altText = ANF.messaging.product.PDP_TEXT_MODEL + ' ' + image.index;
        zoomThumbImageObject.altText = ANF.messaging.product.PDP_TEXT_MODEL + ' ' + image.index;
      } else if (image.type === 'life') {
        zoomImageObject.altText = ANF.messaging.product.PDP_TEXT_LIFESTYLE + ' ' + image.index;
        zoomThumbImageObject.altText = ANF.messaging.product.PDP_TEXT_LIFESTYLE + ' ' + image.index;
      } else {
        zoomImageObject.altText = ANF.messaging.product.PDP_TEXT_PRODUCT + ' ' + image.index;
        zoomThumbImageObject.altText = ANF.messaging.product.PDP_TEXT_PRODUCT + ' ' + image.index;
      }

      imageDataSrcArray.zoomImages.push(zoomImageObject);
      imageDataSrcArray.thumbImages.push(zoomThumbImageObject);

      return true;
    });

    renderedHtml = productPartialPdpProductImagesZoom.templates.pdp_productImagesZoom(imageDataSrcArray);

    newZoomImageLoaderObject.imagesLoaded = false;
    newZoomImageLoaderObject.$renderedHtml = $(renderedHtml);
    // include the thumbnail html, for some reason $renderedHtml has 3 items in the array. 1st is zoom images 2nd is a text node? 3rd is thumbnail container
    newZoomImageLoaderObject.modalContent = newZoomImageLoaderObject.$renderedHtml[0].outerHTML + newZoomImageLoaderObject.$renderedHtml[2].outerHTML;
    newZoomImageLoaderObject.imageDataSrcArray = imageDataSrcArray;
    newZoomImageLoaderObject.parentCollectionId = collectionId;

    return newZoomImageLoaderObject;
  }

  function downloadImages(zoomImageLoaderObject, $zoomModalContentBlock, $zoomModal, index) {
    var newZoomImageLoaderObject = zoomImageLoaderObject;

    newZoomImageLoaderObject.loadedImageCount = 0;

    $zoomModalContentBlock.append(newZoomImageLoaderObject.modalContent);

    $zoomModalContentBlock.find('.product-zoom__image img').each(function downloadZoomImageLoop() {
      var $currImgSrc = $(this).attr('src', $(this).data('src'));
      $currImgSrc.one('load', function zoomImageLoad() {
        imageLoaded(newZoomImageLoaderObject, $(this).parent(), $zoomModal, index);
      });
      bindImageErrorEvent($currImgSrc);
    });
  }

  function imageLoaded(zoomImageLoaderObject, $zoomImageContainer, $zoomModal, index) {
    var newZoomImageLoaderObject = zoomImageLoaderObject;
    newZoomImageLoaderObject.loadedImageCount++;
    $zoomImageContainer.removeClass('loading');

    if (newZoomImageLoaderObject.loadedImageCount >= newZoomImageLoaderObject.imageDataSrcArray.zoomImages.length) {
      newZoomImageLoaderObject.imagesLoaded = true;
      scrollToCorrespondingImage($zoomModal, index);
      initWaypoints($zoomModal);
    }
  }

  function renderMobileZoom(data, collectionId, $zoomModalContentBlock) {
    var $imgClicked = data.image;
    var imgUrl = ANFImage.instance()
      .setImageName($imgClicked.data().imageId)
      .setWidth(mobileImageWidth)
      .url;

    var zoomImageDataModel = {
      isProdFlatImage: false,
      src: imgUrl,
      alt: $imgClicked.attr('src').indexOf('prod') > -1 ? 'prod' : 'model'
    };

    var mobileZoomImage = productPartialPdpMobileZoomImage.templates.pdp_mobileZoomImage(zoomImageDataModel);

    $zoomModalContentBlock.html(mobileZoomImage);

    $(zoomModalContainerSelectorClass).on('dsModal:Open', function zoomDSModalOpen() {
      var $currentZoomImg = $('#zoom-img');
      $currentZoomImg.load(function zoomImageLoad() {
        $(this)[0].scrollIntoView({
          behavior: 'auto',
          block: 'center',
          inline: 'center'
        });
        $(this).removeClass('loading');
      });
      bindImageErrorEvent($currentZoomImg);
    });
    var zoomModal = dsModal.openModal('product-zoom__' + collectionId);

    $('#product-zoom__' + collectionId ).focus();

    return zoomModal;
  }

  function handleZoomThumbnailsLoad(zoomImageLoaderObject, $zoomModalContentBlock) {
    var newZoomImageLoaderObject = zoomImageLoaderObject;
    newZoomImageLoaderObject.thumbnailContent = generateZoomThumbTemplate(newZoomImageLoaderObject);
    renderZoomThumbnails($zoomModalContentBlock, newZoomImageLoaderObject);
    initZoomThumbnailSlider(newZoomImageLoaderObject);
  }

  function generateZoomThumbTemplate(zoomImageLoaderObject) {
    return productPartialPdpZoomThumbnails.templates.pdp_zoomThumbnails(zoomImageLoaderObject.imageDataSrcArray);
  }

  function renderZoomThumbnails($zoomModalContentBlock, zoomImageLoaderObject) {
    var $zoomThumbnailContentBlock = $zoomModalContentBlock.find('.product-zoom__thumbnails');
    $zoomThumbnailContentBlock.html(zoomImageLoaderObject.thumbnailContent);
  }

  function initZoomThumbnailSlider(zoomImageLoaderObject) {
    var viewportHeight = window.innerHeight;
    var $thumbnailListContainer = $('.product-zoom__modal[data-open=true] .zoom-thumbnail-list');
    var thumbnailHeight = 85;
    var thumbnailCount = Math.floor(viewportHeight / thumbnailHeight);
    var newZoomImageLoaderObject =  zoomImageLoaderObject;

    var sliderSettings = {
      arrows: true,
      infinite: false,
      slidesToShow: thumbnailCount,
      vertical: true,
      respondTo: 'window'
    };

    newZoomImageLoaderObject.loadedThumbnailImageCount = 0;

    $thumbnailListContainer.children().each(function zoomThumbnailLoop() {
      $(this).find('img').on('load', function zoomThumbnailLoad() {
        newZoomImageLoaderObject.loadedThumbnailImageCount++;

        if (newZoomImageLoaderObject.loadedThumbnailImageCount >= newZoomImageLoaderObject.imageDataSrcArray.thumbImages.length) {
          dsSlider.initializeSlider($thumbnailListContainer[0], sliderSettings);
        }
      });
      bindImageErrorEvent($(this).find('img'));
    });
  }

  function scrollToCorrespondingImage($modal, imageIdx) {
    var $targetZoomedImage = $modal.find(zoomImagesContainerSelectorClass + ' img').eq(imageIdx);
    var imagePosition = $targetZoomedImage.position();

    // only scroll to the image if it is on the page.
    if (test.type.defined(imagePosition)) {
      $modal.scrollTop(imagePosition.top);

      $targetZoomedImage.closest(zoomImageWrapperSelectorClass).focus();

      selectActiveThumbnail($modal, imageIdx);
    }
  }

  function selectActiveThumbnail($modal, imageIdx) {
    var $zoomThumbs = $modal.find(zoomThumbWrapperSelectorClass);
    $zoomThumbs.attr('data-state', '');
    $zoomThumbs.eq(imageIdx).attr('data-state', 'selected');
    $zoomThumbs.eq(imageIdx).closest(zoomThumbnailSlideSelector).focus();
  }

  function initWaypoints($modal) {
    var Waypoint = Waypoint || window.Waypoint;
    var $zoomImages = $modal.find(zoomImagesContainerSelectorClass).children();

    $zoomImages.each(function zoomImageWaypointDestroyLoop() {
      var $image = $(this);
      var waypointContext = Waypoint.Context.findByElement($image.context);

      if (waypointContext) {
        waypointContext.destroy();
      }
    });

    $zoomImages.waypoint({
      handler: waypointHandler,
      offset: '55%',
      context: zoomModalContainerSelectorClass
    });
  }

  function onResizeThumbnailSliderUpdate() {
    var $zoomModal =  $('.product-zoom__modal[data-open=true]');
    var viewportHeight = window.innerHeight;
    var $thumbnailListContainer = $zoomModal.find('.zoom-thumbnail-list');
    var thumbnailHeight = 85;
    var thumbnailCount = Math.floor(viewportHeight / thumbnailHeight);
    var activeThumbIndex = $thumbnailListContainer.find('.thumbnail-inner-wrapper[data-state="selected"]').closest('.slick-slide').index();

    $thumbnailListContainer.slick('slickSetOption', 'slidesToShow', thumbnailCount);
    $thumbnailListContainer.slick('refresh');

    // reselect the active thumbnail after the refresh, since refresh whipes that state
    selectActiveThumbnail($zoomModal, activeThumbIndex);
  }

  function waypointHandler(direction) {
    var idx = $(this.element).index();
    var $modal = $(this.element).closest(zoomModalContainerSelectorClass);

    idx = wayPointGetIndex(direction, idx);
    selectActiveThumbnail($modal, idx);
  }

  function wayPointGetIndex(direction, idx) {
    var currentIdex = idx;
    if (direction === 'up') {
      currentIdex -= 1;
      return currentIdex;
    }

    return currentIdex;
  }

  function thumbnailSelectEventHandler(e) {
    var $clickedThumbnail = $(e.target);
    var $modal = $clickedThumbnail.closest(zoomModalContainerSelectorClass);
    var $zoomThumbs = $modal.find(zoomThumbWrapperSelectorClass);
    var targetIndex = $zoomThumbs.index($clickedThumbnail.find(zoomThumbnailInnerWrapperSelector));

    scrollToCorrespondingImage($modal, targetIndex);
  }

  function bindImageErrorEvent($image) {
    $image.one('error', function zoomImageLoadError() {
      var imageLoadErrorFallbackUrl = imageLoadHelper.getNoImageAvailableAssetUrl();
      var imagePresets = this.src.split('?')[1];
      $(this).data('src', imageLoadErrorFallbackUrl + '?' + imagePresets);
      $(this).attr('src', imageLoadErrorFallbackUrl + '?' + imagePresets);
    });
  }

  function isMobile() {
    return breakpoints && (breakpoints.screen === 'phone' || breakpoints.screen === 'small_phone' || breakpoints.screen === 'tablet') && ANF.params.env.isMobile === 'true';
  }

  return publicMembers;
});

redesign.define('coreModulesHelpers/StringUtils',[],function () {
  'use strict';

  var instance = null;

  // Matches non-punctuation characters except apostrophe for capitalization.
  var CAPITALIZE_REG = /[^\u0000-\u0040\u005B-\u0060\u007B-\u007F]+('s)?/g;

  // Regex matching camelCase.
  var CAMELIZE_REG = /(^|_)([^_]+)/g;

  function StringUtils() {
    if (instance !== null) {
      throw new Error('Cannot instantiate more than one StringUtils, use StringUtils.getInstance()');
    }

    this.initialize();
  }

  StringUtils.prototype = {
    initialize: function () {
      // Initializes the singleton.
    },

    /**
     * Truncate string by number of words
     * @param {String} str The original string
     * @param {Number} limit The number of words to keep
     * @param {String} after The appended text after the truncated copy
     * @return {String} The truncated text
     */
    truncateOnWord: function (str, limit, after) {
      // clean up str
      var content = str.trim();
      // Convert the content into an array of words
      // Remove any words above the limit
      content = content.split(' ').slice(0, limit);
      // Convert the array of words back into a string
      // If there's content to add after it, add it
      content = content.join(' ') + (after ? after : '');
      // Return the content
      return content;
    },

    /** *
     * @method capitalize([lower] = false, [all] = false)
     * @returns String
     * @short Capitalizes the first character of the string.
     * @extra If [lower] is true, the remainder of the string will be downcased.
     *        If [all] is true, all words in the string will be capitalized.
     *
     * @example
     *
     *   'hello'.capitalize()           -> 'Hello'
     *   'HELLO'.capitalize(true)       -> 'Hello'
     *   'hello kitty'.capitalize()     -> 'Hello kitty'
     *   'hEllO kItTy'.capitalize(true, true) -> 'Hello Kitty'
     *
     * @param {boolean} [lower]
     * @param {boolean} [all]
     *
     ***/
    capitalize: function (str, lower, all) {
      return this.stringCapitalize(str, lower, all);
    },

    /** *
     * @method camelize([upper] = true)
     * @returns String
     * @short Converts string to camel case.
     * @extra If [upper] is true, the string will be UpperCamelCase.
     *
     * @example
     *
     *   'caps_lock'.camelize()             -> 'CapsLock'
     *   'capsLock'.camelize()              -> 'CapsLock'
     *   'MozBorderRadius'.camelize(false)  -> 'mozBorderRadius'
     *
     * @param {boolean} [upper]
     *
     ***/
    camelize: function (str, upper) {
      return this.stringCamelize(str, upper);
    },

    stringCamelize: function (str, upper) {
      str = this.stringUnderscore(str);
      var _this = this;
      return str.replace(CAMELIZE_REG, function (match, pre, word, index) {
        var cap = upper !== false || index > 0;
        return cap ? _this.stringCapitalize(word, true) : word;
      });
    },

    stringUnderscore: function (str) {
      return str
        .replace(/[-\s]+/g, '_')
        .replace(/([A-Z\d]+)([A-Z][a-z])/g, '$1_$2')
        .replace(/([a-z\d])([A-Z])/g, '$1_$2')
        .toLowerCase();
    },

    stringCapitalize: function (str, downcase, all) {
      if (downcase) {
        str = str.toLowerCase();
      }
      return all ? str.replace(CAPITALIZE_REG, this.simpleCapitalize) : this.simpleCapitalize(str);
    },

    simpleCapitalize: function (str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    }
  };

  StringUtils.getInstance = function () {
    // Gets an instance of the singleton.
    if (instance === null) {
      instance = new StringUtils();
    }
    return instance;
  };

  return StringUtils.getInstance();
});

redesign.define('productModules/product/productImageLoader',[
  'coreServices/url',
  'coreModulesHelpers/StringUtils',
  'anfUtil/testFramework',
  'productModules/helpers/imageLoadHelper',
  'productModules/helpers/Utils'
],
function productImageLoader(urlService, StringUtils, test, imageLoadHelper, Utils) {
  'use strict';

  var quickviewModalProductSectionSelectorClass = '.product-quickview__content .product-page-v2-modules';
  var productSectionSelectorClass = '.product-page-v2-modules';
  var productIdAttributeName = 'productid';
  var messageBus = $(ANF);

  var isReload = false;

  function getValidatedModelSegments(productDataObject) {
    if (
      test.type.not.defined(productDataObject.productAttrs, false) ||
      test.type.not.defined(productDataObject.productAttrs.ModelData, false)
    ) {
      return false;
    }

    var imageDataObj = productDataObject.imageSets;
    var modelDataObj = productDataObject.productAttrs.ModelData;
    var verifiedModelSegments = [];

    $.each(modelDataObj, function pimModelDataLoop(key) {
      var segment = key.split('Model')[1];

      // Check if image data and model data exist
      if (key.indexOf('default') < 0 && modelDataObj[key] && imageDataObj['model' + segment]) {
        // the variable key here is 'ModelA'
        verifiedModelSegments.push(key);
      }
    });

    return verifiedModelSegments;
  }

  function reorderImageArray(productDataObject, firstImageSet, modelSegment) {
    var imageDataModel = productDataObject.imageSets;
    var orderedImageArray = [];

    // store model group name
    var modelGroupName = modelSegment ? StringUtils.camelize(modelSegment, false) : 'model';
    var imageTypes = [modelGroupName, 'life', 'prod', 'ugc'];

    // make sure the data arrays exist before trying to concat them together
    for (var i = 0; i < imageTypes.length; i++) {
      if (!imageDataModel[imageTypes[i]]) {
        imageDataModel[imageTypes[i]] = [];
      }
    }

    if (firstImageSet.includes('model')) {
      orderedImageArray = orderedImageArray.concat(imageDataModel[modelGroupName], imageDataModel.prod, imageDataModel.ugc, imageDataModel.life);
    } else if (firstImageSet.includes('life')) {
      orderedImageArray = orderedImageArray.concat(imageDataModel.prod, imageDataModel[modelGroupName], imageDataModel.ugc, imageDataModel.life);
    } else if (firstImageSet.includes('ugc')) {
      orderedImageArray = orderedImageArray.concat(imageDataModel.ugc, imageDataModel.prod, imageDataModel[modelGroupName], imageDataModel.life);
    } else {
      orderedImageArray = orderedImageArray.concat(imageDataModel.prod, imageDataModel[modelGroupName], imageDataModel.ugc, imageDataModel.life);
    }

    return orderedImageArray;
  }

  function reorderImageSetToMatchDefaultModel(productDataObject, processedImageArray, isQuickview) {
    var imageDataModel = productDataObject.imageSets;
    var reorderedImageArray = processedImageArray;

    if (isQuickview) {
      return processedImageArray;
    }

    var verifiedModelSegments = getValidatedModelSegments(productDataObject);

    if (verifiedModelSegments.length > 1) {
      var productModelData = productDataObject.productAttrs.ModelData;
      var selectedModelString = window.selectedModelSegment || '';
      var defaultModelSegment;
      var modelImageSegment;

      if (verifiedModelSegments.includes(productModelData.defaultModel)) {
        defaultModelSegment = productModelData.defaultModel;
      } else {
        defaultModelSegment = verifiedModelSegments[0];
      }

      productModelData.verifiedDataFlag = true;
      productModelData.availableModelImageSetSegments = verifiedModelSegments.slice();

      // check to see if the selected model exisits and we have data for it
      if (imageDataModel[StringUtils.camelize(selectedModelString, false)] && productModelData[window.selectedModelSegment]) {
        modelImageSegment = window.selectedModelSegment;
      } else {
        modelImageSegment = defaultModelSegment;
        window.selectedModelSegment = defaultModelSegment;
      }

      reorderedImageArray = reorderImageArray(productDataObject, window.firstImageSetType, modelImageSegment);
    } else {
      window.selectedModelSegment = '';
    }

    return reorderedImageArray;
  }

  function prepareImageDataModel(productDataObject) {
    var imageIndexObj = {};

    $.each(productDataObject.imageSets, function preparingImageDataOuterEach(i, subArray) {
      $.each(subArray, function preparingImageDataInnerEach(n, img) {
        var typeExec = /(prod|life|ugc|model)([a-zA-Z]?)/g.exec(img.id) || ['prod', 'prod']; // When using fallback image, hardcode type and index group to prod
        var imgType = typeExec[1];
        var imgIdxGroup = typeExec[0];

        img.isUGC = img.id.indexOf('ugc') > 0;
        img.imageId = img.id;
        imageIndexObj[imgIdxGroup + 'Idx'] = (imageIndexObj[imgIdxGroup + 'Idx'] || 0) + 1; // If index is null set to 0 + 1
        img.index = imageIndexObj[imgIdxGroup + 'Idx'];
        img.type = imgType;
      });
    });

    productDataObject.imageDataModelPrepared = true;
  }

  function getFaceoutImageSetType(url) {
    var faceoutImageSetType;

    $.each(urlService.deconstruct(url).search, function urlParamLoop() {
      if (this.name === 'faceout') {
        faceoutImageSetType = this.value;
        return;
      }
    });
    return faceoutImageSetType;
  }

  function getFirstImageSetType(url) {
    // check first from URL, then window.firstImageSetType
    var firstImageSetType;
    var faceoutVarFromUrl = getFaceoutImageSetType(url);

    if (faceoutVarFromUrl) {
      firstImageSetType = faceoutVarFromUrl;
    } else if (window.firstImageSetType) {
      firstImageSetType = window.firstImageSetType;
    } else {
      firstImageSetType = 'prod';
    }

    return firstImageSetType;
  }

  function orderAndRouteImages(productDataObject, productId, $productSection, firstImageSetType, isQuickview) {
    var orderedImageArray = reorderImageArray(productDataObject, firstImageSetType);
    imageLoadRouter(orderedImageArray, productDataObject, productId, $productSection, isQuickview);
  }

  function loadHandler(e, data) {
    var isQuickview = data.isQuickview || Utils.isQuickviewOpened;
    var $productSection = data.$productSection;

    isReload = e.type === 'productPageImages:reload';

    if (!isQuickview && Utils.hasProductMFEEnabled()) {
      return;
    }

    if (!$productSection) {
      $productSection = isQuickview ? $(quickviewModalProductSectionSelectorClass) : $(productSectionSelectorClass);
    }

    var productId = $productSection.data(productIdAttributeName);
    var productDataObject = Utils.getProductData(productId);

    // If imageSets is empty add the "image not found" asset
    if ($.isEmptyObject(productDataObject.imageSets)) {
      productDataObject.imageSets = {};
      productDataObject.imageSets.prod = [{
        id: imageLoadHelper.getNoImageAvailableAssetImageId()
      }];
    }

    var firstImageSetType = getFirstImageSetType(data.URL, $productSection);

    window.firstImageSetType = window.firstImageSetType !== firstImageSetType ? firstImageSetType : window.firstImageSetType;

    // if the imageDataModel hasn't yet been prepared (i.e. this is a fresh swatch), prepare it.
    if (!productDataObject.imageDataModelPrepared) {
      prepareImageDataModel(productDataObject);
    }

    orderAndRouteImages(productDataObject, productId, $productSection, firstImageSetType, isQuickview);
  }

  function imageLoadRouter(orderedImageArray, productDataObject, productId, $productSection, isQuickview) {
    var reorderedImageArray = reorderImageSetToMatchDefaultModel(productDataObject, orderedImageArray, isQuickview);

    var imageLoaderObject = {
      processedImageArray: reorderedImageArray,
      imageDataModel: productDataObject.imageSets,
      productId: productId,
      $productSection: $productSection,
      isQuickview: isQuickview
    };

    if (isReload) {
      messageBus.one('productMainImage:firstDownloadComplete', function messageBusFunction() {
        messageBus.trigger('productThumbnails:reload', imageLoaderObject);
      });

      messageBus.trigger('productMainImage:reload', imageLoaderObject);
    } else {
      if (isQuickview && ($('.product-quickview__modal').attr('data-open') === 'false')) {
        $('.product-quickview__modal .product-quickview__content').empty();
        return;
      }

      messageBus.trigger('productMainImage:load', imageLoaderObject);
    }
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageImages:load', loadHandler);
      messageBus.on('productPageImages:reload', loadHandler);
    },
    reorderImageArray: reorderImageArray
  };

  return publicMembers;
});

redesign.define('productPartial/pdp_modelSelectorButton',['handlebars','dsPartial/button','dsHelper/concat','dsPartial/button-state'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_modelSelectorButton", this["ANF"]["templates"]["pdp_modelSelectorButton"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda;

  return "    <span class=\"model-specs model-selector__button__model-specs\">\n        <span class=\"model-specs__height\">"
    + ((stack1 = alias1((depth0 != null ? depth0.modelHeight : depth0), depth0)) != null ? stack1 : "")
    + "</span>\n        <span class=\"model-specs__separator\">|</span>\n        <span class=\"model-specs__size\">"
    + ((stack1 = alias1((depth0 != null ? depth0.modelSize : depth0), depth0)) != null ? stack1 : "")
    + "</span>\n    </span>\n"
    + ((stack1 = container.invokePartial(partials["button-state"],depth0,{"name":"button-state","hash":{"active":true,"aria-label":(depth0 != null ? depth0.buttonLabel : depth0),"label":(depth0 != null ? depth0.buttonLabel : depth0),"state":"initial"},"data":data,"indent":"    ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.button,depth0,{"name":"button","hash":{"data-prop":helpers.concat.call(depth0 != null ? depth0 : (container.nullContext || {}),"data-modal=",(depth0 != null ? depth0.modalID : depth0),{"name":"concat","hash":{},"data":data}),"class-list":"model-selector__button js-open-toaster","current-state":"initial","variant":"borderless-button","value":(depth0 != null ? depth0.buttonLabel : depth0),"type":"button"},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_modelSelector',['handlebars','dsPartial/toaster','dsPartial/modal','dsPartial/button'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_modelSelector", this["ANF"]["templates"]["pdp_modelSelector"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.modal,depth0,{"name":"modal","hash":{"class-list":"model-selector__modal ds-override","variant":"headerless","id":(depth0 != null ? depth0.modalID : depth0),"title":"Models"},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "			<ul class=\"model-selector__model-card-list\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.models : depth0),{"name":"each","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "			</ul>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "				<li class=\"model-selector__model-card-container "
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.isSelected : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + " \" data-segment=\""
    + container.escapeExpression(container.lambda((depth0 != null ? depth0.segment : depth0), depth0))
    + "\">\n"
    + ((stack1 = container.invokePartial(partials.button,depth0,{"name":"button","hash":{"class-list":"button ds-override model-selector__model-card no-linkify","variant":"borderless-button","type":"button"},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "				</li>\n";
},"4":function(container,depth0,helpers,partials,data) {
    return "selected";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "						<img src=\""
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "\" alt=\""
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + " wearing "
    + ((stack1 = alias1((depth0 != null ? depth0.size : depth0), depth0)) != null ? stack1 : "")
    + "\"/>\n						<div class=\"model-card__model-info\">\n							<div class=\"h4 model-card__name\">"
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "</div>\n							<div class=\"model-specs model-card__model-demensions\">\n								<span class=\"model-specs__height\">"
    + ((stack1 = alias1((depth0 != null ? depth0.height : depth0), depth0)) != null ? stack1 : "")
    + "</span>\n								<span class=\"model-specs__separator\">|</span>\n								<span class=\"model-specs__size\">"
    + ((stack1 = alias1((depth0 != null ? depth0.size : depth0), depth0)) != null ? stack1 : "")
    + "</span>\n							</div>\n						</div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"model-selector__toaster-container scope-1892\">\n"
    + ((stack1 = container.invokePartial(partials.toaster,depth0,{"name":"toaster","hash":{"class-list":"model-selector__toaster","direction":(depth0 != null ? depth0.toasterOpenDirection : depth0)},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "</div>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/productModelSelector',[
  'productModules/helpers/Utils',
  'productModules/product/productImageLoader',
  'coreClass/ANFImage',
  'productPartial/pdp_modelSelectorButton',
  'productPartial/pdp_modelSelector'
], function ProductModelSelector(
  Utils,
  imageLoader,
  ANFImage,
  productPartialPdpModelSelectorButton,
  productPartialPdpModelSelector
) {
  'use strict';

  var messageBus = $(ANF);

  var $button;
  var $buttonOverlay;
  var $toaster;
  var $productSection;
  var productId;

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productMainImage:load', onImageDataChanged);
      messageBus.on('productMainImage:reload', onImageDataChanged);
    },

    bindEvents: function bindEvents() {
      $('.product-page-v2-modules').on('click', '.model-selector__model-card-list .model-selector__model-card-container', modelSelected);
      $('.product-page-v2-modules').on('click', 'button[data-modal*="model-selector-toaster"]', openModelToaster);
    }
  };

  function onImageDataChanged(eventObj, eventData) {
    if (Utils.isQuickviewOpened) {
      return;
    }

    // reset data and view
    $productSection = eventData.$productSection;
    productId = eventData.productId;

    if ($button) {
      $button.remove();
      $button = null;
    }

    if ($toaster) {
      $toaster.remove();
      $toaster = null;
    }

    if ($buttonOverlay) {
      $buttonOverlay.remove();
      $buttonOverlay = null;
    }

    messageBus.off('productMainImage:sliderInit', onSliderInitMainImage);
    messageBus.off('productMainImage:sliderAfterChange', onSliderAfterChangeMainImage);

    var productModelDataObj = Utils.getProductData(productId).productAttrs.ModelData;

    if (productModelDataObj && productModelDataObj.verifiedDataFlag) {
      var modelSelectorDataHBS = getModelSelectorDataHBS();

      // add pdp_modelSelector.hbs to the DOM
      var buttonTemplate = productPartialPdpModelSelectorButton.templates.pdp_modelSelectorButton(modelSelectorDataHBS);
      var toasterTemplate = productPartialPdpModelSelector.templates.pdp_modelSelector(modelSelectorDataHBS);

      $productSection.find('.product-main-images__wrapper').append(buttonTemplate);
      $productSection.append(toasterTemplate);

      $button = $productSection.find('.model-selector__button');
      $buttonOverlay = $productSection.find('.model-selector-button--overlay');
      $toaster = $productSection.find('.model-selector__toaster');

      // need to init DS js everytime to bind button and toaster
      ANF.globalV2.designsystem.init();

      messageBus.on('productMainImage:sliderInit', onSliderInitMainImage);
      messageBus.on('productMainImage:sliderAfterChange', onSliderAfterChangeMainImage);
    }
  }

  function onSliderInitMainImage() {
    if (Utils.isQuickviewOpened) {
      return;
    }

    var mainImageType = $productSection.find('.product-main-images .slick-current .product-main-images__image').data('image-type');
    showHideButton(mainImageType === 'model');
  }

  function onSliderAfterChangeMainImage(e, currentImageSlide) {
    if (Utils.isQuickviewOpened) {
      return;
    }

    var mainImageType = $(currentImageSlide).find('.product-main-images__image').data('image-type');
    showHideButton(mainImageType === 'model');
  }

  function showHideButton(isButtonShown) {
    if (isButtonShown) {
      $button.stop(true, true).fadeTo(500, 0.92);
      // add class to move the slider dots to the right if on mobile
      $productSection.find('.product-main-images .slick-dots').addClass('right-align');
    } else {
      $button.stop(true, true).fadeOut(500);
      $productSection.find('.product-main-images .slick-dots').removeClass('right-align');
    }
  }

  function updateModelButtonInfo(defaultModel, productData) {
    var currentModel = Utils.getProductData(productData.productid).productAttrs.ModelData[defaultModel];

    $button.find('.model-specs__height').html(currentModel.height);
    $button.find('.model-specs__size').html(currentModel.size);

    $buttonOverlay.find('.model-specs__height').html(currentModel.height);
    $buttonOverlay.find('.model-specs__size').html(currentModel.size);
  }

  function getModelSelectorDataHBS() {
    var productData = Utils.getProductData(productId);
    var defaultModelStr = window.selectedModelSegment || Utils.getValueFromObject(productData, 'productAttrs.ModelData.defaultModel', void 0);
    var selectedModel = productData.productAttrs.ModelData[defaultModelStr];

    return {
      productId: productId,
      buttonLabel: 'Change Model',
      modelHeight: selectedModel.height,
      modelSize: selectedModel.size,
      modalID: 'model-selector-toaster__' + productId,
      toasterOpenDirection: window.innerWidth >= 700 ? 'from-left' : 'from-bottom',
      models: buildModelCardData()
    };
  }

  function buildModelCardData() {
    var productData = Utils.getProductData(productId);
    var tempArray = [];
    var productModelDataObj = productData.productAttrs.ModelData;
    var verifiedModelSegments = productData.productAttrs.ModelData.availableModelImageSetSegments.slice(0);

    for (var i = 0; i < verifiedModelSegments.length; i++) {
      var modelCard = productModelDataObj[verifiedModelSegments[i]];
      var modelSegmentLetter = verifiedModelSegments[i].split('Model')[1];

      // we are using the second model image for this feature per business requirements hence the below [1]
      var imageSrc = ANFImage.instance()
        .setImageName(productData.imageSets['model' + modelSegmentLetter][1].id)
        .setWidth(96)
        .url;

      modelCard.src = imageSrc;
      modelCard.segment = verifiedModelSegments[i];
      modelCard.isSelected = window.selectedModelSegment.indexOf(modelCard.segment) > -1;

      tempArray = tempArray.concat(modelCard);
    }

    return tempArray;
  }

  function openModelToaster() {
    $(window).trigger('analytics.miscProductFeature', {'type': 'Change Model Button', 'message': 'Click'});
  }

  function modelSelected(e) {
    var $selectedModel = $(e.currentTarget);
    var selectedModelSegment = window.selectedModelSegment = $selectedModel.attr('data-segment');
    $productSection = Utils.getParentProductSection($selectedModel);
    var productData = $productSection.data();

    $productSection.find('.model-selector__toaster .model-selector__model-card-container.selected').removeClass('selected');
    $selectedModel.addClass('selected');

    window.firstImageSetType = 'model';

    var reorderedImageArray = imageLoader.reorderImageArray(Utils.getProductData(productData.productid), 'model', selectedModelSegment);
    var imageLoaderObject = {
      processedImageArray: reorderedImageArray,
      imageDataModel: productData.imageDataModel,
      productId: productData.productid,
      $productSection: $productSection
    };

    updateModelButtonInfo(selectedModelSegment, productData);

    messageBus.trigger('productThumbnails:reload', imageLoaderObject);
    messageBus.trigger('productPageMainImages:modelSelected', imageLoaderObject);

    $(window).trigger('analytics.miscProductFeature', {'type': 'Model Image Click', 'action': $selectedModel.data('segment').split('Model')[1], 'message': $selectedModel.closest('ul').children().length});
  }

  return publicMembers;
});

redesign.define('productModules/helpers/featureSwitchHelper',[
  'productModules/helpers/Utils'
],
function FeatureSwitchHelper(Utils) {
  'use strict';

  var messageBus = $(ANF);

  var publicMembers = {
    featureTestSwitchValue: function featureTestSwitchValue(testValue, testSwitchName) {
      var storeAttribute = testValue || 0;
      var optimizely = window[testSwitchName] || false;

      switch (storeAttribute) {
        case 1:
          return optimizely;
        case 2:
          return true;
        default:
          return false;
      }
    },

    checkFeatureSwitchAndSplitTest: function checkFeatureSwitchAndSplitTest(featureAndSplitTestKey, cb) {
      var deferredResult = new $.Deferred();
      var featureFlagKey = 'flag.' + featureAndSplitTestKey;
      var splitTestKey = 'test.' + featureAndSplitTestKey;
      if (window.digitalData.get(featureFlagKey, false ) || window.digitalData.get(splitTestKey, false)) {
        deferredResult.resolve(true);
      } else {
        window.digitalData.subscribe(splitTestKey, function checkTestSegment(segment) {
          if (typeof segment !== 'undefined') {
            this.unsubscribe();
            deferredResult.resolve(segment);
          }
        });
      }

      if (cb) {
        deferredResult.promise()
          .then(function heckSegment(isEnabled) {
            if (isEnabled) cb();
          });
      }

      return deferredResult.promise();
    },

    styleFitDesc: function styleFitDescSwitcher() {
      publicMembers.checkFeatureSwitchAndSplitTest('pdp-style-fit-desc-enabled', function styleFitDesc() {
        messageBus.trigger('styleFitDesc:init');
      });
    },

    shortDescriptorSplitTest: function shortDescriptorSplitTest() {
      var subscriptionTimeout = null;
      if (window.digitalData.get('test.pdpHyperlinkDescriptor', false)) {
        messageBus.trigger('shortDescriptorTest:init', window.digitalData.get('test.pdpHyperlinkDescriptor', false));
      } else {
        var subscription = window.digitalData.subscribe('test.pdpHyperlinkDescriptor', function checkTestSegment(segment) {
          if (typeof segment !== 'undefined') {
            this.unsubscribe();
            clearTimeout(subscriptionTimeout);
            messageBus.trigger('shortDescriptorTest:init', segment);
          }
        });

        subscriptionTimeout = setTimeout( function setSubscrptionTimeout() {
          subscription.unsubscribe();
        }, 5000);
      }
    },

    stylitics: function styliticsSwitcher() {
      if (window.digitalData.get('flag.pdp-classic-outfitting-solution', false)) {
        messageBus.trigger('styliticsClassic:init');
      }

      this.checkFeatureSwitchAndSplitTest('pdp-hotspots-outfitting-solution', function hasStyliticsV3() {
        if (!Utils.hasPDPMFEBelowTheFold()) {
          messageBus.trigger('styliticsV3:init');
        }
      });
    }
  };

  return publicMembers;
});

redesign.define('productServices/product/headerHeightCalculator',[],function HeaderHeightCalculator() {
  'use strict';

  var headerPrimary = 'header.rs-header:not(:hidden)';
  var globalMessagingSystem = '.rs-nav__gms:not(:hidden)';// ESPOT above/below header
  var banner = '.intl-banner:not(:hidden)'; // Banner that may or may not exist
  var breadcrumb = '.upper-breadcrumb:not(:hidden)';
  var brandTabs = '.rs-nav__tabs-container:not(hidden)';
  var anfPasId = ANF.params.storeAttributes.pasList.anfPasId;
  var holPasId = ANF.params.storeAttributes.pasList.holPasId;
  var $rsHeaderWrapper = $('.rs-nav__wrapper');

  // Returns the height of the header plus espots
  function getFullHeaderHeight(passId) {
    var gmsTotalHeight = 0;

    // for multiple gms messages
    $.each($(globalMessagingSystem), function each(index, value) {
      gmsTotalHeight += $(value).height();

      if (index === 0) {
        gmsTotalHeight -= $(window).scrollTop(); // if we have scrolled but not enough to hide top gms banner
      }
    });
    var defaultHeight = $(headerPrimary).height() + $(banner).height() + $(breadcrumb).height() + $(brandTabs).height();
    if (passId === anfPasId || $rsHeaderWrapper.length) {
      return defaultHeight + gmsTotalHeight;
    } else if (passId === holPasId) {
      return defaultHeight + $(globalMessagingSystem).height();
    }

    return 0;
  }

  var publicMembers = {

    // Returns the height of the header section above the nav
    getFixedHeaderThresholdHeight: function getFixedHeaderThresholdHeight(passId, withBreadcrumb) {
      var breadcrumbHeight = withBreadcrumb ? $(breadcrumb).height() : 0;
      var initHeight = $(globalMessagingSystem).height() + $(banner).height() + $(brandTabs).height();
      if (passId === anfPasId || $rsHeaderWrapper.length) {
        return breadcrumbHeight + initHeight;
      } else if (passId === holPasId) {
        return initHeight;
      }

      return 0;
    },
    // Returns the height of the header that will remain on the page when the user scrolls (the sticky header)
    getCondensedHeaderHeight: function getCondensedHeaderHeight() {
      return $(brandTabs).height() || 0;
    },

    // Returns the current total height of all things header, should be the thing modules need most often
    // only sticky portion will be used if user is scrolled passed
    getCurrentHeaderHeight: function getCurrentHeaderHeight(passId) {
      var currentHeaderHeight = getFullHeaderHeight(passId);
      var fixedHeaderThresholdHeight = this.getFixedHeaderThresholdHeight(passId, false);
      var scrollTop = $(window).scrollTop();
      if (scrollTop > fixedHeaderThresholdHeight) { // if we're beyond the threshold at which the header should be fixed
        currentHeaderHeight = this.getCondensedHeaderHeight();
      }
      return currentHeaderHeight;
    }
  };

  return publicMembers;
});

redesign.define('productPartial/pdp_addToBagNotification',['handlebars','wcsHelper/i18n','dsPartial/icon-block','corePartial/freeShippingProgress','corePartial/checkoutButton','dsPartial/button'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_addToBagNotification", this["ANF"]["templates"]["pdp_addToBagNotification"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "      <span class=\"product-page__atb-notification-warning\" data-property=\"GLB_ATB_NOTIFICATION_WARNING\">"
    + container.escapeExpression(helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.GLB_ATB_NOTIFICATION_WARNING",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.freeShippingProgress,depth0,{"name":"freeShippingProgress","data":data,"indent":"    ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"5":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.props : depth0)) != null ? stack1.showCheckoutButton : stack1),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"6":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.checkoutButton,depth0,{"name":"checkoutButton","data":data,"indent":"      ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    "
    + ((stack1 = helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.GLB_VIEWBAG",{"name":"i18n","hash":{},"data":data})) != null ? stack1 : "")
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"product-page__atb-notification scope-1892\">\n  <span class=\"product-page__atb-notification-added h2\" data-property=\"GLB_ITEM_ADDED_TO_BAG\">"
    + container.escapeExpression(helpers.i18n.call(alias1,"product.GLB_ITEM_ADDED_TO_BAG",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n  <div class=\"atb-notification-warning-wrapper\">\n"
    + ((stack1 = container.invokePartial(partials["icon-block"],depth0,{"name":"icon-block","hash":{"data-icon":"clock"},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "  </div>\n\n"
    + ((stack1 = helpers["with"].call(alias1,(depth0 != null ? depth0.freeShippingMessage : depth0),{"name":"with","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["with"].call(alias1,(depth0 != null ? depth0.checkoutButton : depth0),{"name":"with","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = container.invokePartial(partials.button,depth0,{"name":"button","hash":{"data-property":"GLB_VIEWBAG","class-list":"product-page__atb-notification-cta ds-override","href":(depth0 != null ? depth0.cartUrl : depth0),"variant":"secondary"},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "</div>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_detailsAccordionContent',['handlebars','wcsHelper/i18n','wcsHelper/siteRegion','dsPartial/button'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_detailsAccordionContent", this["ANF"]["templates"]["pdp_detailsAccordionContent"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.imported : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    return "    <span>"
    + container.escapeExpression(helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.DETAILS_ACCORDION.PDP_DETAILS_IMPORTED_TEXT",{"name":"i18n","hash":{},"data":data}))
    + "</span>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "  <div class=\"anf-cares\">\n    <hr>\n    <p class=\"text-small\">\n        <span>"
    + ((stack1 = helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.DETAILS_ACCORDION.PDP_ACCORDION_DETAILS_CARES_PAGE",{"name":"i18n","hash":{},"data":data})) != null ? stack1 : "")
    + " </span>\n    </p>\n  </div>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "  <p class=\"let-us-know below-links text-small\">\n    <span class=\"title let-us-know__label\">\n      "
    + container.escapeExpression(helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.DETAILS_ACCORDION.GLB_LETUSKNOW",{"name":"i18n","hash":{},"data":data}))
    + "\n    </span>\n"
    + ((stack1 = container.invokePartial(partials.button,depth0,{"name":"button","hash":{"current-state":"initial","variant":"button-as-link","type":"button"},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "  </p>\n";
},"7":function(container,depth0,helpers,partials,data) {
    return "      <span data-state=\"initial\" data-hidden=\"false\">\n        "
    + container.escapeExpression(helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.DETAILS_ACCORDION.PDP_ARE_THESE_DETAILS_HELPFUL_LABEL",{"name":"i18n","hash":{},"data":data}))
    + "\n      </span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.escapeExpression, alias3=container.lambda;

  return "<div class=\"details-info\">\n  <div class=\"h2 details-header\" data-property=\"GLB_DETAILS\">"
    + alias2(helpers.i18n.call(alias1,"product.DETAILS_ACCORDION.GLB_DETAILS",{"name":"i18n","hash":{},"data":data}))
    + "</div>\n  <div class=\"product-title\">"
    + alias2(alias3((depth0 != null ? depth0.productName : depth0), depth0))
    + "</div>\n  <p class=\"details__description\" itemprop=\"description\">\n    "
    + ((stack1 = alias3((depth0 != null ? depth0.longDescription : depth0), depth0)) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers.unless.call(alias1,(depth0 != null ? depth0.isChinaSite : depth0),{"name":"unless","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </p>\n</div>\n<div class=\"fabric-care\">\n  <div class=\"fabric-care__container\">\n    <div class=\"h4 fiber-content__label\"></div>\n    <ul class=\"fabric-care__list bullet-list\"></ul>\n  </div>\n</div>\n<hr>\n\n<p class=\"details__store-item-number text-small\" data-property=\"CAT_STOREITEMNUMBER\">\n    <span class=\"details__store-item-title\">"
    + alias2(helpers.i18n.call(alias1,"product.DETAILS_ACCORDION.CAT_STOREITEMNUMBER",{"name":"i18n","hash":{},"data":data}))
    + " </span>\n    <span class=\"number\">"
    + alias2(alias3((depth0 != null ? depth0.storeItemNumber : depth0), depth0))
    + "</span>\n</p>\n\n<p class=\"details__web-item-number text-small\" data-property=\"CAT_WEBITEMNUMBER\">\n    <span class=\"details__web-item-title\">"
    + alias2(helpers.i18n.call(alias1,"product.DETAILS_ACCORDION.CAT_WEBITEMNUMBER",{"name":"i18n","hash":{},"data":data}))
    + " </span>\n    <span class=\"number\">"
    + alias2(alias3((depth0 != null ? depth0.webItemNumber : depth0), depth0))
    + "</span>\n</p>\n\n"
    + ((stack1 = helpers.siteRegion.call(alias1,{"name":"siteRegion","hash":{"is":"EU"},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.showForsee : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_garmentMeasurements',['handlebars','wcsHelper/i18n','dsPartial/tooltip'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_garmentMeasurements", this["ANF"]["templates"]["pdp_garmentMeasurements"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.escapeExpression;

  return "    <div class=\"hr above-garment-measurements\"></div>\n\n    <div class=\"garment-header\" data-variant=\"\">\n        <h3 class=\"h3\">"
    + alias2(helpers.i18n.call(alias1,"product.GARMENT_MEASUREMENT_LABELS.GARMENT_MEASUREMENTS",{"name":"i18n","hash":{},"data":data}))
    + "</h3>\n        <h4 class=\"h4\">"
    + alias2(helpers.i18n.call(alias1,"product.GARMENT_MEASUREMENT_LABELS.GARMENT_MEASUREMENTS",{"name":"i18n","hash":{},"data":data}))
    + "</h4>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.baseSize : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </div>\n\n    <ul>\n"
    + ((stack1 = helpers.each.call(alias1,(depth0 != null ? depth0.measurements : depth0),{"name":"each","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </ul>\n\n";
},"2":function(container,depth0,helpers,partials,data) {
    var alias1=container.escapeExpression;

  return "            <p class=\"garment-taken-from\">\n                <span>"
    + alias1(helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"product.GARMENT_MEASUREMENT_LABELS.BASE_MEASUREMENT_SIZE",{"name":"i18n","hash":{},"data":data}))
    + " "
    + alias1(container.lambda((depth0 != null ? depth0.baseSize : depth0), depth0))
    + "</span>\n            </p>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "            <li>\n                <div class=\"measurement-wrapper\">\n                    <span class=\"garment-label\">"
    + alias2(alias1((depth0 != null ? depth0.garmentLabel : depth0), depth0))
    + ":</span>\n                    <div class=\"garment-tooltip__wrapper\">\n"
    + ((stack1 = container.invokePartial(partials.tooltip,depth0,{"name":"tooltip","hash":{"variant":"small","reference-point":"parent","position":"top-right","id":(depth0 != null ? depth0.tooltipId : depth0)},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "                    </div>\n                </div>\n                <span class=\"garment-value\">"
    + alias2(alias1((depth0 != null ? depth0.garmentValue : depth0), depth0))
    + "\"</span>\n            </li>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "                            <h3 class=\"h3\">"
    + alias2(alias1((depth0 != null ? depth0.tooltipHeader : depth0), depth0))
    + "</h3>\n                            <span>"
    + alias2(alias1((depth0 != null ? depth0.tooltipBody : depth0), depth0))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.measurements : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/reviews/pdp_noReviewsData',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("reviews/pdp_noReviewsData", this["ANF"]["templates"]["reviews/pdp_noReviewsData"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<p class=\"reviews-no-results\" data-prop=\"PDP_NO_SEARCH_REVIEWS\">"
    + container.escapeExpression(container.lambda((depth0 != null ? depth0.label : depth0), depth0))
    + "</p>";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/quickview/pdp_quickviewPreload',['handlebars','dsPartial/loader'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("quickview/pdp_quickviewPreload", this["ANF"]["templates"]["quickview/pdp_quickviewPreload"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "<section class=\"product-page-v2-modules quickview-preload\" data-product-brand=\""
    + alias2(alias1((depth0 != null ? depth0.productBrand : depth0), depth0))
    + "\">\n  <section class=\"product-page__main-container scope-1892\">\n\n    <section class=\"product-page-images\">\n      <div class=\"product-thumbnails__container\"></div>\n\n      <div class=\"product-main-images__wrapper\">\n        <div class=\"product-main-images\">\n          "
    + ((stack1 = alias1((depth0 != null ? depth0.img : depth0), depth0)) != null ? stack1 : "")
    + "\n        </div>\n      </div>\n    </section>\n\n    <section class=\"product-page__info-container\">\n      <div class=\"product-page__info\">\n\n        <div class=\"product-page-info__title\">\n          <p class=\"short-description\">"
    + alias2(alias1((depth0 != null ? depth0.shortDescription : depth0), depth0))
    + "&nbsp;</p>\n          <div class=\"product-name product-name-font-size pdp-product-name\" data-brand=\""
    + alias2(alias1((depth0 != null ? depth0.productBrand : depth0), depth0))
    + "\">\n            <h1>"
    + ((stack1 = alias1((depth0 != null ? depth0.productName : depth0), depth0)) != null ? stack1 : "")
    + "</h1>\n          </div>\n        </div>\n\n        <div class=\"product-price-v2\">\n          <div class=\"product-price-v2__inner\">\n            "
    + ((stack1 = alias1((depth0 != null ? depth0.productPrice : depth0), depth0)) != null ? stack1 : "")
    + "\n          </div>\n        </div>\n        <div class=\"loader-container\">\n"
    + ((stack1 = container.invokePartial(partials.loader,depth0,{"name":"loader","hash":{"label":"loading...","variant":"spinner"},"data":data,"indent":"          ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "        </div>\n\n        <div class=\"product-page__atb-saves-wrapper\">\n          <div class=\"atb-wrapper\">\n\n            <div class=\"drop-down js-drop-down product-quantity-dropdown ds-override \" data-brand=\""
    + alias2(alias1((depth0 != null ? depth0.productBrand : depth0), depth0))
    + "\">\n              <select data-filled=\"true\" name=\"quantity\" id=\"product-quantity-dropdown-preload\" disabled>\n                <optgroup label=\"Qty\">\n                  <option value=\"1\">1</option>\n                </optgroup>\n              </select>\n              <label for=\"product-quantity-dropdown-preload\" class=\"placeholder\" data-property=\"GLB_QTY\">"
    + alias2(alias1((depth0 != null ? depth0.qtyLabel : depth0), depth0))
    + " </label>\n              <span class=\"float-label\" data-property=\"GLB_QTY\">"
    + alias2(alias1((depth0 != null ? depth0.qtyLabel : depth0), depth0))
    + "</span>\n              <span class=\"arrow-icon\" aria-hidden=\"true\"></span>\n            </div>\n\n            <button class=\"button ds-override primary-button\" type=\"button\" disabled data-brand=\""
    + alias2(alias1((depth0 != null ? depth0.productBrand : depth0), depth0))
    + "\">\n              "
    + alias2(alias1((depth0 != null ? depth0.atbLabel : depth0), depth0))
    + "\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  </section>\n</section>";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/reviews/pdp_reviewFitSection',['handlebars','dsPartial/review-summary-content','dsPartial/icon-block'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("reviews/pdp_reviewFitSection", this["ANF"]["templates"]["reviews/pdp_reviewFitSection"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["review-summary-content"],depth0,{"name":"review-summary-content","fn":container.program(2, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["icon-block"],depth0,{"name":"icon-block","hash":{"data-icon":"size"},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"3":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "            <div class=\"review-recommendation review-recommendation-fit\">\n                <span class=\"review-recommendation-most-recommended-pre\" data-property=\"GLB_MOST_RECOMMEND\">"
    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.content : depth0)) != null ? stack1.fitRec : stack1)) != null ? stack1.fitRecText : stack1), depth0))
    + "</span>\n                <b class=\"recommendation-value\">"
    + alias2(alias1((depth0 != null ? depth0.fitRecommendation : depth0), depth0))
    + "</b>\n            </div>\n";
},"5":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["review-summary-content"],depth0,{"name":"review-summary-content","fn":container.program(6, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "        <div class=\"review-recommendation review-recommendation-percentage\" data-property=\"GLB_RECOMMEND_THIS_ITEM\">\n            <b class=\"recommendation-value\">"
    + alias2(alias1((depth0 != null ? depth0.recommendedPercentage : depth0), depth0))
    + "% </b>"
    + alias2(alias1(((stack1 = ((stack1 = (depth0 != null ? depth0.content : depth0)) != null ? stack1.fitRec : stack1)) != null ? stack1.recPercentageText : stack1), depth0))
    + "\n        </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.showFitRecommendation : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.showPercentage : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/sizeGuide/pdp_sizeGuideCharts',['handlebars','wcsHelper/sizeGuide_tableCellClassNames','wcsHelper/sizeGuide_formatMeasurementUnit','wcsHelper/sizeGuide_zipRowData'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("sizeGuide/pdp_sizeGuideCharts", this["ANF"]["templates"]["sizeGuide/pdp_sizeGuideCharts"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : (container.nullContext || {});

  return "  <h3 class=\"size-guide__title h2\">"
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "</h3>\n  <p class=\"size-guide__description\">"
    + alias2(alias1((depth0 != null ? depth0.description : depth0), depth0))
    + "</p>\n\n  <div class=\"size-guide__table-scroll-wrapper\">\n    <div class=\"size-guide__table-scroll\">\n\n      <table class=\"size-guide__guide "
    + alias2(alias1(((stack1 = (data && data.root)) && stack1.defaultUnitClass), depth0))
    + "\">\n        <caption class=\"visually-hidden\">\n          "
    + ((stack1 = alias1(((stack1 = (depth0 != null ? depth0.header : depth0)) != null ? stack1.name : stack1), depth0)) != null ? stack1 : "")
    + "\n          "
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "\n          "
    + alias2(alias1(((stack1 = (data && data.root)) && stack1.sizeChartHeader), depth0))
    + "\n        </caption>\n\n        <span class=\"size-guide__table-shadow size-guide__table-shadow-left size-guide__table-shadow--hide\"></span>\n\n        <thead>\n          <tr>\n            <th scope=\"col \"class=\"size-guide__primary-column\">\n                "
    + ((stack1 = alias1(((stack1 = (depth0 != null ? depth0.header : depth0)) != null ? stack1.name : stack1), depth0)) != null ? stack1 : "")
    + "\n            </th>\n\n"
    + ((stack1 = helpers.each.call(alias3,((stack1 = ((stack1 = (depth0 != null ? depth0.sizes : depth0)) != null ? stack1["0"] : stack1)) != null ? stack1.types : stack1),{"name":"each","hash":{},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "")
    + "          </tr>\n        </thead>\n\n        <tbody>\n"
    + ((stack1 = helpers.each.call(alias3,(depth0 != null ? depth0.sizes : depth0),{"name":"each","hash":{},"fn":container.program(7, data, 1, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "")
    + "        </tbody>\n\n        <span class=\"size-guide__table-shadow size-guide__table-shadow-right size-guide__table-shadow--hide\"></span>\n      </table>\n\n    </div>\n  </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "              <th scope=\"col\" class=\""
    + container.escapeExpression(helpers.sizeGuide_tableCellClassNames.call(alias1,(depth0 != null ? depth0.unit : depth0),(depth0 != null ? depth0.country : depth0),((stack1 = (data && data.root)) && stack1.defaultRegion),{"name":"sizeGuide_tableCellClassNames","hash":{},"data":data}))
    + "\">"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.country : depth0),{"name":"if","hash":{},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.measurement : depth0),{"name":"if","hash":{},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</th>\n";
},"3":function(container,depth0,helpers,partials,data) {
    return container.escapeExpression(container.lambda((depth0 != null ? depth0.country : depth0), depth0));
},"5":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.lambda((depth0 != null ? depth0.measurement : depth0), depth0)) != null ? stack1 : "")
    + " "
    + container.escapeExpression(helpers.sizeGuide_formatMeasurementUnit.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.unit : depth0),{"name":"sizeGuide_formatMeasurementUnit","hash":{},"data":data}));
},"7":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers.each.call(alias1,helpers.sizeGuide_zipRowData.call(alias1,((stack1 = blockParams[0][0]) != null ? stack1.types : stack1),{"name":"sizeGuide_zipRowData","hash":{},"data":data,"blockParams":blockParams}),{"name":"each","hash":{},"fn":container.program(8, data, 2, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "              <tr "
    + ((stack1 = helpers["if"].call(alias1,(depths[1] != null ? depths[1].hasAltBackground : depths[1]),{"name":"if","hash":{},"fn":container.program(9, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "")
    + ">\n"
    + ((stack1 = helpers.unless.call(alias1,blockParams[0][1],{"name":"unless","hash":{},"fn":container.program(11, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers.each.call(alias1,blockParams[0][0],{"name":"each","hash":{},"fn":container.program(13, data, 1, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "")
    + "              </tr>\n";
},"9":function(container,depth0,helpers,partials,data) {
    return "class=\"alt-background-color\"";
},"11":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "                  <th class=\"size-guide__primary-column\" scope=\"row\" rowspan=\""
    + alias2(alias1(((stack1 = ((stack1 = ((stack1 = ((stack1 = blockParams[2][0]) != null ? stack1.types : stack1)) != null ? stack1["0"] : stack1)) != null ? stack1.values : stack1)) != null ? stack1.length : stack1), depth0))
    + "\">\n                      "
    + alias2(alias1(((stack1 = blockParams[2][0]) != null ? stack1.size : stack1), depth0))
    + "\n                  </th>\n";
},"13":function(container,depth0,helpers,partials,data,blockParams) {
    var stack1, alias1=container.escapeExpression;

  return "                  <td class=\""
    + alias1(helpers.sizeGuide_tableCellClassNames.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.unit : depth0),(depth0 != null ? depth0.country : depth0),((stack1 = (data && data.root)) && stack1.defaultRegion),{"name":"sizeGuide_tableCellClassNames","hash":{},"data":data}))
    + "\">\n                      "
    + alias1(container.lambda(((stack1 = blockParams[0][0]) != null ? stack1.value : stack1), depth0))
    + "\n                  </td>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.sizeCharts : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"blockParams":blockParams})) != null ? stack1 : "");
},"useData":true,"useDepths":true,"useBlockParams":true}));

return this["ANF"];

});
redesign.define('productPartial/sizeGuide/pdp_sizeGuideImages',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("sizeGuide/pdp_sizeGuideImages", this["ANF"]["templates"]["sizeGuide/pdp_sizeGuideImages"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "    <div class='size-guide-image'>\n        <img src='"
    + alias2(alias1((depth0 != null ? depth0.src : depth0), depth0))
    + "' data-image-id='"
    + alias2(alias1((depth0 != null ? depth0.imageId : depth0), depth0))
    + "' alt='"
    + alias2(alias1((depth0 != null ? depth0.altText : depth0), depth0))
    + "' itemprop='image'/>\n    </div>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.blockHelperMissing.call(depth0,container.lambda((depth0 != null ? depth0.images : depth0), depth0),{"name":"images","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/sizeGuide/pdp_sizeGuideRegionSelector',['handlebars','dsPartial/drop-down'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("sizeGuide/pdp_sizeGuideRegionSelector", this["ANF"]["templates"]["sizeGuide/pdp_sizeGuideRegionSelector"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class='size-guide__region-selector'>\n"
    + ((stack1 = container.invokePartial(partials["drop-down"],depth0,{"name":"drop-down","hash":{"brand":(depth0 != null ? depth0.productBrand : depth0),"options":(depth0 != null ? depth0.options : depth0),"data-property":(depth0 != null ? depth0.dataProperty : depth0),"value":(depth0 != null ? depth0.value : depth0),"label":(depth0 != null ? depth0.label : depth0),"id":(depth0 != null ? depth0.id : depth0),"class-list":(depth0 != null ? depth0.classList : depth0)},"data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "</div>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/sizeGuide/pdp_sizeGuideUnitToggle',['handlebars','dsPartial/toggle'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("sizeGuide/pdp_sizeGuideUnitToggle", this["ANF"]["templates"]["sizeGuide/pdp_sizeGuideUnitToggle"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<div class='size-guide__unit-toggle-wrapper'>\n\n  <div class=\"visually-hidden\" id=\"size-guide-legend\" data-property=\"SIZE_GUIDE_UNIT_TOGGLE_LABEL\">\n    "
    + container.escapeExpression(container.lambda(((stack1 = (data && data.root)) && stack1.toggleLabel), depth0))
    + "\n  </div>\n\n"
    + ((stack1 = container.invokePartial(partials.toggle,depth0,{"name":"toggle","hash":{"brand":(depth0 != null ? depth0.productBrand : depth0),"labelled-by":"size-guide-legend","class-list":(depth0 != null ? depth0.classList : depth0),"toggle-block":(depth0 != null ? depth0.toggleBlock : depth0)},"data":data,"indent":"  ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "</div>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_productSizeMessaging',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_productSizeMessaging", this["ANF"]["templates"]["pdp_productSizeMessaging"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda;

  return "<h3 class=\"size-messaging__header\">"
    + ((stack1 = alias1((depth0 != null ? depth0.header : depth0), depth0)) != null ? stack1 : "")
    + "</h3>\n<div class=\"size-messaging__subtitle\">"
    + ((stack1 = alias1((depth0 != null ? depth0.subtitle : depth0), depth0)) != null ? stack1 : "")
    + "</div>\n<div class=\"size-messaging__message-body\">"
    + ((stack1 = alias1((depth0 != null ? depth0.messaging : depth0), depth0)) != null ? stack1 : "")
    + "</div>";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/stylitics/pdp_styliticsWidget',['handlebars','wcsHelper/i18n'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("stylitics/pdp_styliticsWidget", this["ANF"]["templates"]["stylitics/pdp_styliticsWidget"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.escapeExpression;

  return "<h2 class=\"stylitics-title h1\" data-property=\"PDP_STYLITICS-WIDGET-TITLE\">\n  "
    + alias2(helpers.i18n.call(alias1,"product.PDP_STYLITICS_WIDGET_TITLE",{"name":"i18n","hash":{},"data":data}))
    + "\n</h2>\n<span class=\"stylitics-subtitle\">\n  "
    + alias2(helpers.i18n.call(alias1,"product.PDP_STYLITICS_WIDGET_SUBTITLE",{"name":"i18n","hash":{},"data":data}))
    + "\n</span>\n<span class=\"stylitics-mobile-tip\">\n  "
    + alias2(helpers.i18n.call(alias1,"product.PDP_STYLITICS_WIDGET_MOBILE_TIP",{"name":"i18n","hash":{},"data":data}))
    + "\n</span>\n<div id=\"stylitics-widget\" data-aui=\"stylitics\"></div>";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/stylitics/pdp_styliticsWidgetIcons',['handlebars','dsPartial/icon-block'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("stylitics/pdp_styliticsWidgetIcons", this["ANF"]["templates"]["stylitics/pdp_styliticsWidgetIcons"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    return "";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["icon-block"],depth0,{"name":"icon-block","hash":{"data-icon":(depth0 != null ? depth0.iconKey : depth0)},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_measurements',['handlebars','dsPartial/tooltip'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_measurements", this["ANF"]["templates"]["pdp_measurements"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <div class=\"measurements\">\n        <ul>\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.measurements : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </ul>\n    </div>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "                <li>\n                    <div class=\"measurement-wrapper\">\n                        <span class=\"measurement-label\">"
    + alias2(alias1((depth0 != null ? depth0.lensMeasurementsLabel : depth0), depth0))
    + ":</span>\n                        <div class=\"measurement-tooltip__wrapper\">\n"
    + ((stack1 = container.invokePartial(partials.tooltip,depth0,{"name":"tooltip","hash":{"variant":"small","reference-point":"parent","position":"top-right","id":(depth0 != null ? depth0.tooltipId : depth0)},"fn":container.program(3, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "                        </div>\n                    </div>\n                    <span class=\"measurement-value\">"
    + alias2(alias1((depth0 != null ? depth0.lensMeasurementsValue : depth0), depth0))
    + " mm</span>\n                </li>\n";
},"3":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "                                <h3 class=\"h3\">"
    + alias2(alias1((depth0 != null ? depth0.tooltipHeader : depth0), depth0))
    + "</h3>\n                                <span>"
    + alias2(alias1((depth0 != null ? depth0.tooltipBody : depth0), depth0))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["if"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.measurements : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productServices/product/template',[
  'productPartial/pdp_addToBagNotification',
  'productPartial/pdp_detailsAccordionContent',
  'productPartial/pdp_garmentMeasurements',
  'productPartial/reviews/pdp_noReviewsData',
  'productPartial/quickview/pdp_quickviewPreload',
  'productPartial/reviews/pdp_reviewFitSection',
  'productPartial/sizeGuide/pdp_sizeGuideCharts',
  'productPartial/sizeGuide/pdp_sizeGuideImages',
  'productPartial/sizeGuide/pdp_sizeGuideRegionSelector',
  'productPartial/sizeGuide/pdp_sizeGuideUnitToggle',
  'productPartial/pdp_productSizeMessaging',
  'dsPartial/error-message',
  'productPartial/stylitics/pdp_styliticsWidget',
  'productPartial/stylitics/pdp_styliticsWidgetIcons',
  'productPartial/pdp_measurements'
], function TemplateService(
  productPartialPdpAddToBagNotification,
  productPartialPdpDetailsAccordionContent,
  productPartialPdpGarmentMeasurements,
  productPartialReviewsPdpNoReviewsData,
  productPartialQuickviewPdpQuickviewPreload,
  productPartialReviewsPdpReviewFitSection,
  productPartialSizeGuidePdpSizeGuideCharts,
  productPartialSizeGuidePdpSizeGuideImages,
  productPartialSizeGuidePdpSizeGuideRegionSelector,
  productPartialSizeGuidePdpSizeGuideUnitToggle,
  productPartialPdpProductSizeMessaging,
  dsPartialErrorMessage,
  productPartialPdpStyliticsWidget,
  productPartialPdpStyliticsWidgetIcons,
  productPartialPdpMeasurements
) {
  'use strict';

  /*
   * Keep this alphabetized
   */
  var templateMap = {
    addToBagNotification: productPartialPdpAddToBagNotification.templates.pdp_addToBagNotification,
    detailsAccordion: productPartialPdpDetailsAccordionContent.templates.pdp_detailsAccordionContent,
    errorMessage: dsPartialErrorMessage.templates['error-message'],
    garmentMeasurements: productPartialPdpGarmentMeasurements.templates.pdp_garmentMeasurements,
    measurements: productPartialPdpMeasurements.templates.pdp_measurements,
    noReviewsData: productPartialReviewsPdpNoReviewsData.templates['reviews/pdp_noReviewsData'],
    productSizeMessaging: productPartialPdpProductSizeMessaging.templates.pdp_productSizeMessaging,
    quickviewPreload: productPartialQuickviewPdpQuickviewPreload.templates['quickview/pdp_quickviewPreload'],
    reviewFitSection: productPartialReviewsPdpReviewFitSection.templates['reviews/pdp_reviewFitSection'],
    sizeGuideCharts: productPartialSizeGuidePdpSizeGuideCharts.templates['sizeGuide/pdp_sizeGuideCharts'],
    sizeGuideImages: productPartialSizeGuidePdpSizeGuideImages.templates['sizeGuide/pdp_sizeGuideImages'],
    sizeGuideRegionSelector: productPartialSizeGuidePdpSizeGuideRegionSelector.templates['sizeGuide/pdp_sizeGuideRegionSelector'],
    sizeGuideUnitToggle: productPartialSizeGuidePdpSizeGuideUnitToggle.templates['sizeGuide/pdp_sizeGuideUnitToggle'],
    styliticsWidget: productPartialPdpStyliticsWidget.templates['stylitics/pdp_styliticsWidget'],
    styliticsWidgetIcon: productPartialPdpStyliticsWidgetIcons.templates['stylitics/pdp_styliticsWidgetIcons']
  };

  function renderTemplate(name, data) {
    return templateMap[name](data);
  }

  return {
    renderTemplate: renderTemplate
  };
});

redesign.define('productIntegrations/stylitics',[
  'productServices/product/headerHeightCalculator',
  'anfUtil/constants',
  'productModules/helpers/Utils',
  'productServices/product/template'
],
function Stylitics(headerHeightCalculator, coreConstants, Utils, templateService) {
  'use strict';

  var messageBus = $(ANF);
  var quickviewButtonClass = 'product-quickview__button';
  var styliticsItemPanel = '.stylitics-widget-item-container';
  var jumpLinkButtonSelectorClass = '.stylitics-jumplink';
  var widgetWrapperSelectorClass = '.stylitics-widget-wrapper';
  var containerSelector = '.stylitics-container-js';
  var widgetTargetIdSelector = '#stylitics-widget';

  var styliticsBrandToThemeBrand = {
    'ANF': 'anf',
    'HCo.': 'hol',
    'ANF-Kids': 'kids',
    'Glh': 'gh',
    'st': 'st'
  };

  function loadStylitics() {
    var $productSection = $('.product-page-v2-modules');
    var $styliticsWidgetWrapper = $(widgetWrapperSelectorClass);

    $styliticsWidgetWrapper.prepend($(templateService.renderTemplate('styliticsWidget')));
    var styliticsWidgetJSUrl = '//widget.stylitics.com/v2/widget.js';

    window.$LAB.script(styliticsWidgetJSUrl).wait(function styliticsRetrieved() {
      initStylitics($productSection);
    });

    messageBus.on('productPageInfo:swatchSelected mfe:SwatchSelected', handleWidgetRefresh);
  }

  function initStylitics($productSection) {
    var productId = $productSection.data('productid');
    var productData = Utils.getProductData(productId);

    var options = {
      api: {
        total: 3,
        item_number: productData.kicId
      },
      display: {
        cols: 3,
        ctaText: coreConstants.anf('messaging.catalogV2.STYLITICS.widgetCTAText') || '',
        outfitBg: 'transparent',
        clickToReveal: true
      }
    };
    var brandMap = {
      'anf': 'abercrombie',
      'kids': 'abercrombie',
      'hol': 'hollister',
      'gh': 'hollister',
      'st': 'hollister'
    };
    var brand = $('header').data('brand');
    var styliticsBrand = brandMap[brand];

    if (brand === 'gh') {
      options.api.tags = 'gillyhicks_outfit';
    }

    // The StyliticsWidget comes from a script loaded for a 3rd party post page load.
    /* eslint-disable-next-line no-undef */
    var styliticsWidget = new StyliticsWidget(styliticsBrand, 'stylitics-widget', options);

    $(widgetTargetIdSelector).data('widget-instance', styliticsWidget);
    styliticsWidget.load(onLoadCustom);
  }

  function onLoadCustom(outfits) {
    toggleCustomComponents(outfits);
    setupQuickviewButtons(outfits);
    $(ANF).trigger('stylitics:initIntersectObserver');
    $(ANF).trigger('stylitics:wireAnalyticTriggers');
    return outfits;
  }

  function toggleCustomComponents(outfits) {
    var $jumpLinkButton = $(jumpLinkButtonSelectorClass);
    var $widgetContainer = $(containerSelector);

    if (outfits.length > 2) {
      $jumpLinkButton.removeClass('hide');
      $widgetContainer.removeClass('hide');
    } else {
      $jumpLinkButton.addClass('hide');
      $widgetContainer.addClass('hide');
    }
  }

  function setupQuickviewButtons(outfits) {
    $.each(outfits, function quickviewLinkOutfitLoop(i, outfit) {
      $.each(outfit.items, function outfitItemLoop(idx, item) {
        var $itemCTAPanel = $(styliticsItemPanel + '[data-item-id="' + item.item_id + '"]');
        if (item.hasOwnProperty('other_client_item_ids')) {
          var itemIdObject = item.other_client_item_ids;
          $itemCTAPanel.addClass(quickviewButtonClass);
          $itemCTAPanel.attr({
            'data-collectionid': itemIdObject.hasOwnProperty('collection_ids') ? itemIdObject.collection_ids[0] : 0,
            'data-seq': itemIdObject.hasOwnProperty('csequence_ids') ? itemIdObject.csequence_ids[0] : 0,
            'data-productid': itemIdObject.hasOwnProperty('product_ids') ? itemIdObject.product_ids[0] : 0,
            'data-product-brand': styliticsBrandToThemeBrand[item.brand]
          });
        }
      });
    });
  }

  function handleWidgetRefresh(_e, $selectedSwatch, $productSection, productId) {
    if (!Utils.isQuickviewOpened) {
      var selectedKIC = Utils.getProductData(productId).kicId;
      var $widgetTarget = $(widgetTargetIdSelector);
      var styliticsWidget = $widgetTarget.data('widget-instance');

      var currentHeight = $widgetTarget.height();
      $widgetTarget.height(currentHeight);

      styliticsWidget.refresh(selectedKIC, function styliticsSwatchRefresh(outfits) {
        $widgetTarget.height('auto');
        onLoadCustom(outfits);
      });
    }
  }

  var publicMembers = {
    'listen': function listen() {
      messageBus.on('styliticsClassic:init', loadStylitics);
    }
  };

  return publicMembers;
});

redesign.define('productIntegrations/styliticsAnalytics',[],
  function StyliticsAnalytics() {
    'use strict';

    var jumplinkSelectorClass = '.stylitics-jumplink';
    var widgetIdSelector = '#stylitics-widget';
    var outfitInnerWrapperSelectorClass = '.stylitics-widget-outfit-inner';

    return function StytlicsAnalyticsClosure(productIntersectionObserver) {
      function wireIntersectionObserver() {
        var $styliticsWidget = $(widgetIdSelector);
        var styliticsWidgetObserver = new productIntersectionObserver.IntersectionObserver(
          function productIntersectionObserverCallback(entries) {
            for (var i = 0, len = entries.length; i < len; i++) {
              var styliticsWidget = entries[i];

              if (styliticsWidget.isIntersecting) {
                styliticsWidgetObserver.unobserve(styliticsWidget.target);
                $(window).trigger('analytics.scrollReachIndicator', {'name': 'Scrolled to Stylitics Module'});
              }
            }
          },
          {
            threshold: 1
          }
        );
        styliticsWidgetObserver.observe($styliticsWidget[0]);
      }

      function viewMoreOutfitsClickTrigger() {
        $(window).trigger('analytics.miscFeatureSessionCap', {'type': 'Stylitics', 'action': 'click', 'message': 'shop this link'});
      }

      function jumplinkClickAnalyticTrigger() {
        $(window).trigger('analytics.miscFeature', {type: 'Stylitics', action: 'click', message: 'how to style this'});
      }

      function wireUserInteractionTriggers() {
        $(widgetIdSelector).on('click', outfitInnerWrapperSelectorClass, viewMoreOutfitsClickTrigger);
      }

      var publicMembers = {
        'listen': function listen() {
          $(ANF).on('stylitics:wireAnalyticTriggers', wireUserInteractionTriggers);
          $(ANF).on('stylitics:initIntersectObserver', wireIntersectionObserver);
        },
        'bindEvents': function bindEvents() {
          $(jumplinkSelectorClass).on('click select', jumplinkClickAnalyticTrigger);
        }
      };

      return publicMembers;
    };
  }
);

redesign.define('productModules/helpers/productIntersectionObserver',[], function productIntersectionObserver() {
  'use strict';

  var helpers = {
    create: function create(getName, getValue, isConfigurable) {
      if (Object.hasOwnProperty(this, getName) && Object.getOwnPropertyDescriptor(this, getName).configurable) {
        delete this[getName];
      }

      Object.defineProperty(this, getName, {
        get: getValue,
        configurable: isConfigurable || false
      });
    }
  };

  return helpers;
});

redesign.define('productIntegrations/styliticsV3',[
  'productModules/helpers/Utils',
  'productServices/product/template'
],
function StyliticsV3(Utils, templateService) {
  'use strict';

  var messageBus = $(ANF);
  var widgetWrapperSelector = '.stylitics-widget-wrapper';
  var containerSelector = '.stylitics-container-js';
  var widgetCtaEyeIconContainerSelector = '.stylitics-view-items-cta-icon';
  var productSectionSelector = '.product-page-v2-modules';
  var styliticsModalBadgeContainerSelector = '.stylitics-bundle-badge-modal';
  var styliticsModalBadgeContentClass = 'stylitics-modal-badge-js';
  var styliticsBadgeContainerSelector = '.stylitics-bundle-badge';
  var styliticsBadgeContentClass = 'stylitics-bundle-badge-js';
  var widgetTargetIdSelector = '#stylitics-widget';
  var viewItemsButton = '.stylitics-view-items-button';
  var brandMap = {
    'anf': 'abercrombie',
    'kids': 'abercrombie',
    'hol': 'hollister',
    'gh': 'hollister',
    'st': 'hollister'
  };

  var styliticsBrandToThemeBrand = {
    'ANF': 'anf',
    'HCo.': 'hol',
    'ANF-Kids': 'kids',
    'Glh': 'gh',
    'st': 'st'
  };

  function listen() {
    messageBus.on('styliticsV3:init', loadStylitics);
  }

  function loadStylitics() {
    if (Utils.isExternalUser()) {
      return;
    }

    var $productSection = $(productSectionSelector);
    var $styliticsWidgetWrapper = $(widgetWrapperSelector);
    var $widgetContainer = $(containerSelector);

    if ($styliticsWidgetWrapper.length === 0 || $widgetContainer.length === 0) {
      return;
    }
    if (Utils.getANFObject().params.env.region === 'EU') {
      $styliticsWidgetWrapper.addClass('hide-price');
    }

    var styliticsWidgetJSUrl = '//web-assets.stylitics.com/v3-hotspots/latest/hotspots.release.js';
    $styliticsWidgetWrapper.prepend($(templateService.renderTemplate('styliticsWidget')));
    window.$LAB.script(styliticsWidgetJSUrl).wait(function styliticsRetrieved() {
      initStylitics($productSection);
    });

    messageBus.on('productPageInfo:swatchSelected mfe:SwatchSelected', handleWidgetRefresh);
  }

  function initStylitics($productSection) {
    var productId = $productSection.data('productid');
    var params = buildParameters(productId);
    var productData = Utils.getProductData(productId);

    var showStylitics = shouldShowStylitics(productData.kicId);

    if ($(widgetTargetIdSelector).length === 0) {
      return;
    }

    /* eslint-disable-next-line no-undef */
    var styliticsWidget = new StyliticsHotspotsWidget(params.styliticsBrand, 'stylitics-widget', params.options);

    $(widgetTargetIdSelector).data('widget-instance-v3', styliticsWidget);

    styliticsWidget.on('mount', 'bundle', onLoadSingleBundle);
    styliticsWidget.on('mount', 'bundles', sendBundlesMfe);
    styliticsWidget.on('mount', 'item', replaceImages);
    styliticsWidget.override('click', 'item', handleStyliticsItemClick);
    if (showStylitics) {
      styliticsWidget.start();
    }
  }

  function shouldShowStylitics(selectedKIC) {
    var departmentId = selectedKIC.split(/[_-]/)[1];
    var dressOrRomperDepartment = '359';
    var hideStyliticsHcoDressesAndRompers = window.digitalData.get('test.hideStyliticsHcoDressesAndRompers') === true;

    return !(hideStyliticsHcoDressesAndRompers && departmentId === dressOrRomperDepartment);
  }

  function buildParameters(productId) {
    var productData = Utils.getProductData(productId);
    var options = {
      api: {
        min: 3,
        max: 3,
        item_number: productData.kicId
      },
      display: {
        clickableCarouselDots: true,
        swipeableCarouselDots: true,
        disableMnM: true,
        bundleBackgroundColor: 'transparent'
      },
      price: {
        hideDoubleZeroCents: true
      },
      customer: {
        locale: Utils.getANFObject().params.storeAttributes.STYLITICS_LOCALE
      },
      text: {
        viewDetailsCTA: Utils.getANFObject().messaging.product.PDP_STYLITICS_WIDGET_CTA
      }
    };
    var brand = $('header').data('brand');
    var styliticsBrand = brandMap[brand];
    if (brand === 'gh') {
      options.api.tags = 'gillyhicks_outfit';
    }

    if (Utils.getANFObject().params.env.region === 'UK') {
      styliticsBrand += '_uk';
    }

    if (Utils.getANFObject().params.env.region === 'EU') {
      styliticsBrand += '_eu';
    }

    return {
      styliticsBrand: styliticsBrand,
      options: options
    };
  }

  function onLoadSingleBundle(outfit) {
    var hasModelBadge = outfit.bundle['on-model-image'];

    setupCtaButton(outfit.element);

    if (hasModelBadge) {
      var text = Utils.getANFObject().messaging.product.PDP_STYLITICS_WIDGET_BADGE_TEXT;
      var $element = $(outfit.element);

      cardBadgeSetup($element, text);
      modalBadgeSetup($element, text);
    }
  }

  function sendBundlesMfe(outfits) {
    var $widgetContainer = $(containerSelector);

    if ($widgetContainer.length === 0) {
      return;
    }

    var canPost = typeof window !== 'undefined' && window.postMessage && window.addEventListener;

    if (canPost) {
      window.digitalData.set('bundles', outfits.bundles);
    }

    if (outfits.bundles.length > 2) {
      $widgetContainer.removeClass('hide');
    } else {
      $widgetContainer.addClass('hide');
    }
  }

  function replaceImages(data) {
    var originalUrl = data.item.client_original_image_url; // "https://img.abercrombie.com/is/image/anf/KIC_154-2052-0663-900_prod1"

    var $img = $(data.element).find('.stylitics-item-image');
    var imageURL = originalUrl + '?policy=product-small';

    $img.attr('data-src', imageURL);
  }

  function handleStyliticsItemClick(data) {
    var itemClicked = data.item.other_client_item_ids;
    var quickviewData = {
      productId: itemClicked.product_ids[0],
      collectionId: itemClicked.collection_ids[0],
      seq: itemClicked.csequence_ids[0],
      imageId: data.item.remote_id + '_prod1',
      productName: data.item.name,
      productBrand: styliticsBrandToThemeBrand[data.item.brand],
      returnFocus: getReturnFocus(data.element),
      faceout: 'prod',
      isStylitics: true
    };

    window.dispatchEvent(new CustomEvent('quickview:openModal', {detail: quickviewData}));
  }

  function getReturnFocus(element) {
    var $returnFocus = $(element);

    if ($returnFocus.hasClass('stylitics-overlay-container')) {
      $returnFocus = $returnFocus.closest('.stylitics-bundle-container').find('.stylitics-cta');
    } else if ($returnFocus.hasClass('stylitics-item-container')) {
      $returnFocus = $returnFocus.find('.stylitics-cta-link');
    }

    return $returnFocus;
  }

  function triggerViewLook() {
    $(window).trigger('styliticsV3Item:viewLook');
  }

  function setupCtaButton(element) {
    var $viewItemsButton = $(viewItemsButton);
    $viewItemsButton.unbind().on('click', triggerViewLook);

    var $ctaEyeIconContainer = $(element).find(widgetCtaEyeIconContainerSelector);
    var brand = $('header').data('brand');
    var iconKey = brandMap[brand] === 'abercrombie' ? 'eye-anf' : 'eye-hco';
    var $eyeIcon = $(templateService.renderTemplate('styliticsWidgetIcon', { iconKey: iconKey }));

    $ctaEyeIconContainer.find('svg').remove();
    $ctaEyeIconContainer.append($eyeIcon);
  }

  function modalBadgeSetup($element, text) {
    var $badgeContainer = $element.find(styliticsModalBadgeContainerSelector);
    var $badgeContent = $('<span></span>');

    $badgeContent.text(text);
    $badgeContent.addClass(styliticsModalBadgeContentClass);
    $badgeContainer.empty();
    $badgeContainer.append($badgeContent);
  }

  function cardBadgeSetup($element, text) {
    var $badgeContainer = $element.find(styliticsBadgeContainerSelector);
    var $badgeContent = $('<span></span>');

    $badgeContent.text(text);
    $badgeContent.addClass(styliticsBadgeContentClass);
    $badgeContainer.empty();
    $badgeContainer.append($badgeContent);
  }

  function handleWidgetRefresh(_e, $selectedSwatch, $productSection, productId) {
    if (!Utils.isQuickviewOpened) {
      var selectedKIC = Utils.getProductData(productId).kicId;
      var $widgetTarget = $(widgetTargetIdSelector);
      var styliticsWidget = $widgetTarget.data('widget-instance-v3');

      var showStylitics = shouldShowStylitics(selectedKIC);

      if (styliticsWidget && showStylitics) {
        styliticsWidget.refresh({ api: { item_number: selectedKIC }});
      }

      if (!styliticsWidget && showStylitics) {
        restartModule();
      }
    }
  }

  function restartModule() {
    var $productSection = $(productSectionSelector);
    $(widgetTargetIdSelector).empty();
    initStylitics($productSection);
  }

  var publicMembers = {
    'listen': listen
  };

  return publicMembers;
});

redesign.define('productIntegrations/styliticsV3Analytics',[],
  function StyliticsV3Analytics() {
    'use strict';

    var widgetTargetIdSelector = '#stylitics-widget';

    function trackItemAddToBag(e, itemData) {
      var styliticsWidget = $(widgetTargetIdSelector).data('widget-instance-v3');
      if (styliticsWidget && typeof styliticsWidget.trackAddItemToCart === 'function') {
        styliticsWidget.trackAddItemToCart(itemData.kicId);
      }
    }

    var publicMembers = {
      'listen': function listen() {
        $(ANF).on('styliticsV3Item:addToBag', trackItemAddToBag);
      }
    };

    return publicMembers;
  });

redesign.define('productSections/product/productPageImages',[
  'coreSectionHelpers',
  'productModules/product/productThumbnails',
  'productModules/product/productMainImage',
  'productModules/product/productZoom',
  'productModules/product/productModelSelector',
  'productModules/product/productImageLoader',
  'coreServices/window',
  'productModules/helpers/featureSwitchHelper',
  'productIntegrations/stylitics',
  'productIntegrations/styliticsAnalytics',
  'productModules/helpers/productIntersectionObserver',
  'productIntegrations/styliticsV3',
  'productIntegrations/styliticsV3Analytics'
], function ProductPageImages(
  coreSectionHelpers,
  thumbnails,
  mainImage,
  zoom,
  productModelSelector,
  imageLoader,
  windowService,
  featureSwitchHelper,
  stylitics,
  styliticsAnalytics,
  productIntersectionObserver,
  styliticsV3,
  styliticsV3Analytics
) {
  'use strict';

  var messageBus = $(ANF);

  var privateMembers = {
    'DEFAULT_MODULES': {
      '.product-thumbnails': thumbnails,
      '.product-main-images': mainImage,
      'productZoom': zoom,
      '.model-selector': productModelSelector,
      'productImages': imageLoader,
      'stylitics': stylitics,
      'styltitcsAnalytics': styliticsAnalytics(productIntersectionObserver),
      'styliticsV3': styliticsV3,
      'styliticsV3Analytics': styliticsV3Analytics
    },
    'GLOBAL_SCOPE': '',
    'parentPage': '',
    'MODULES': {}
  };

  return function productImages(settings) {
    privateMembers.GLOBAL_SCOPE = settings.scope;
    privateMembers.parentPage = settings.parentPage;
    privateMembers.MODULES = privateMembers.DEFAULT_MODULES;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    return {
      init: function productPageImagesInit() {
        coreSectionHelpers.init({
          'modules': privateMembers.MODULES,
          'scope': privateMembers.GLOBAL_SCOPE
        });
      },
      subscribe: function productPageImagesSubscribe(settingsObject) {
        var options = $.extend({}, privateMembers, settingsObject);
        messageBus.on('productPageMain:init', options.parentPage.productPageImages.productPageImagesLoad);
      },
      productPageImagesLoad: function productPageImagesLoad() {
        messageBus.trigger('productPageImages:load', { URL: windowService.location.get(), isQuickview: false });
        featureSwitchHelper.stylitics();
      }
    };
  };
});

redesign.define('productSections/product/productPageReviews',[
  'coreSectionHelpers'
], function ProductPageReviews(coreSectionHelpers) {
  'use strict';

  var privateMembers = {
    'GLOBAL_SCOPE': '',
    'MODULES': {},
    'parentPage': ''
  };

  return function scope(settings) {
    privateMembers.GLOBAL_SCOPE = settings.scope;
    privateMembers.parentPage = settings.parentPage;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    var messageBus = $(ANF);

    return {
      'init': function init() {
        coreSectionHelpers.init({
          'scope': privateMembers.GLOBAL_SCOPE
        });
      },
      'subscribe': function subscribe() {
        messageBus.on('productPageMain:init', privateMembers.parentPage.productPageReviews.productPageReviewsLoad);
        messageBus.on('productPageMain:init', privateMembers.parentPage.productPageReviews.productPageReviewsSummaryLoad);
      },
      'productPageReviewsLoad': function productPageReviewsLoad() {
        messageBus.trigger('productPageReviews:load');
      }
    };
  };
});

redesign.define('productModules/product/productSizes',[
  'productModules/helpers/Utils',
  'coreServices/window',
  'coreServices/url',
  'dsPartial/icon-block'
], function ProductSizes(
  Utils,
  windowService,
  urlService,
  dsPartialIconBlock
) {
  'use strict';

  var messageBus = $(ANF);
  var productSectionSelectorClass = '.product-page-v2-modules';
  var productAttrClass = '.product-attrs__attr';
  var productSizeAttrClass = '.js-product-attributes-inline .product-sizes .product-attrs__attr input';
  var productUrgencyMsgClass = '.product-urgency-message';
  var skus = '.product-page__skus';
  var inventoryBackorderableStatus = 'Backorderable';
  var inventoryAvailableStatus = 'Available';
  var productWrap = '.product-page__swatches-attributes';
  var selectedSkuParameterName = 'sizeValue';
  var errorContainerSelectorClass = '.validator-container';
  var ajaxErrorClass = 'atb-ajax-error';
  var quickviewPrimaryActionContainerClass = '.quick-view__primary-action-wrapper';
  var quickviewProductInfoContainerSelectorClass = '.product-quickview__modal[data-open="true"] .product-page__info-container';
  var partNumberSelector = 'input[name="partNumber"]';
  var productPageFormSelectorClass = '.product-page-add-to-bag__container';
  var quickviewErrorClass = 'qv-error';
  var inputSelector = 'input';
  var fadeSpeed = 100;
  var fadeEasing = 'linear';
  var checked = 'checked';
  var pageUrl = windowService.location.getHref();
  var productPagePrimarySizeList = '.product-page__swatches-attributes .product-sizes-primary ul li';
  var productPageATBButtonSelectorClass = '.product-page-add-to-bag__button';
  var showUrgencyMessageClass = 'product-urgency-message__show';
  var productSizesSelectorClass = '.product-sizes';
  var productSizesCurrentSelectedClass = '.product-sizes__name__current-selected';
  var selectedClass = 'selected';

  function sizeOnLoad() {
    var selectedSku = urlService.deconstruct(pageUrl)
      .search
      .reduce(function selectedSkuParameterReducer(acum, queryStringValueInstance) {
        return queryStringValueInstance.name === selectedSkuParameterName ?
          queryStringValueInstance.value :
          acum;
      }, '');

    // if there is a selected sku in the url,
    if (selectedSku && selectedSku.length > 0) {
      var $skus = $(skus);
      var $selectedSkuOption  = $skus.children('option[value="' + selectedSku + '"]');

      if ($selectedSkuOption.length) {
        var $product = $selectedSkuOption.closest(productWrap);
        var sizePrimary = $selectedSkuOption.data('size-primary');
        var $sizePrimaryTile = $product.find(productAttrClass + ' [name^="size-primary"][value="' + sizePrimary + '"]');
        var sizeSecondary = $selectedSkuOption.data('size-secondary');
        var $sizeSecondaryTile = $product.find(productAttrClass + ' [name^="size-secondary"][value="' + sizeSecondary + '"]');

        if ($sizePrimaryTile.length) {
          $sizePrimaryTile.prop(checked, true).closest(productAttrClass).addClass('selected');
        }

        if ($sizeSecondaryTile.length) {
          $sizeSecondaryTile.prop(checked, true).closest(productAttrClass).addClass('selected');
        }

        messageBus.trigger('productMultipleAttributeFilter.attributeUpdate');
      }
    }

    // if single size
    var $sizeList = Utils.isQuickviewOpened ? $('.product-quickview__modal[data-open="true"]').find(productPagePrimarySizeList) : $(productPagePrimarySizeList);
    if ($sizeList.length === 1) {
      var $input = $sizeList.find('input');
      $input.attr('checked', '');
      displaySelected($input, true);
    }
  }

  function skuChangeHandler(e, data) {
    var sku = data.sku || '';
    var $skuContainer = data.skuContainer;
    var $targetSku;
    var inventory;
    var inventoryStatus;

    $targetSku = $skuContainer.find(skus).children('option[value="' + sku + '"]');
    inventory = $targetSku.data('inventory');
    inventoryStatus = $targetSku.data('inventory-status');

    updateUrgencyMessage(inventory, inventoryStatus, $skuContainer, $targetSku);
  }

  function updateUrgencyMessage(inventory, inventoryStatus, $skuContainer, $targetSku) {
    var urgencyMessageCount = ANF.params.storeAttributes.catalogV2.UrgencyMessageCount;
    var $productUrgencyMsg = $skuContainer.find(productUrgencyMsgClass);
    var $urgencyScreenReaderMsg = $productUrgencyMsg.find('.urgency-message__sku_screen-reader-text');
    var message;
    if (inventoryStatus === inventoryBackorderableStatus) {
      $productUrgencyMsg.addClass(showUrgencyMessageClass);
      message = ANF.messaging.catalog.BACKORDER_URGENCY_MESSAGE;
    } else if (inventory < urgencyMessageCount && inventory > 0 && inventoryStatus === inventoryAvailableStatus) {
      // If there are less then 5 of a product in stock, display urgent message.

      if (!$productUrgencyMsg.hasClass('show')) {
        $productUrgencyMsg.addClass('fadein').removeClass('fadeout hide default-hidden');
        setTimeout(function timeoutBump() {
          $productUrgencyMsg.removeClass('fadein').addClass('bump');

          setTimeout(function timeoutShow() {
            $productUrgencyMsg.removeClass('bump').addClass('show');
            $urgencyScreenReaderMsg.html(message);
          }, 500);
        }, 500);
      } else {
        $productUrgencyMsg.removeClass('show hide').addClass('bump');

        if ($skuContainer.closest('.product-page__info-container').hasClass('is_stuck')) {
          setTimeout(function timeoutShow() {
            $productUrgencyMsg.removeClass('bump').addClass('show');
          }, 650);
        } else {
          setTimeout(function timeoutShow() {
            $productUrgencyMsg.removeClass('bump').addClass('show');
            $urgencyScreenReaderMsg.html(message);
          }, 500);
        }
      }

      message = addSizeToUrgencyMessage($skuContainer, $targetSku);
    } else {
      if (!$productUrgencyMsg.hasClass('hide')) {
        $productUrgencyMsg.removeClass('show').addClass('fadeout');
        setTimeout(function timeoutHide() {
          $productUrgencyMsg.removeClass('fadeout').addClass('hide');
          $urgencyScreenReaderMsg.html('');
        }, 450);
      }

      message = $productUrgencyMsg.find('.icon-block-heading').text();
    }

    var iconBlockSettings = {
      'data-icon': 'clock',
      'icon-block-optional-content': {
        'icon-block-heading': message
      }
    };

    var template = dsPartialIconBlock.templates['icon-block'](iconBlockSettings);
    $productUrgencyMsg.find('.urgency-message-content').html(template);
  }

  function addSizeToUrgencyMessage($skuContainer, $targetSku) {
    var message = ANF.messaging.catalog.STOCK_URGENCY_MESSAGE;
    var skuData = $targetSku.data();
    var size = skuData.urgencyPrimary;

    if (skuData.urgencySecondary && $skuContainer.find('.product-sizes-secondary').length > 0) {
      size += ' X ' + skuData.urgencySecondary;
    }

    if ($skuContainer.closest('.product-page-sticky-size-tile__container').length === 0) {
      $(window).trigger('analytics.miscProductFeature', {'type': 'low inventory message', 'action': 'SKU level', 'message': size});
    }

    return message.replace(/\{(.*)\}/, size);
  }

  function sizeTileClickHandler(e) {
    var $selectedSizeTile = $(e.currentTarget).parents('.product-attrs__attr');
    if (!$selectedSizeTile.hasClass('unavailable')) {
      selectProductAttrHandler($selectedSizeTile);
      displaySelected($selectedSizeTile);
    }
  }

  function stickySizeTileSelectedHandler(e, data) {
    selectProductAttrHandler(data.$selectedTile);
  }

  function selectProductAttrHandler($selectedSizeTile) {
    // get the size tile in the pdp, and the tile in the sticky tray
    var sizeValue = $selectedSizeTile.find(inputSelector).data('size');
    var $sizes = $selectedSizeTile
      .parents(productSectionSelectorClass)
      .find('input[data-size="' + sizeValue + '"]')
      .closest(productAttrClass);

    // resolve product section and active form
    var $productSection = $selectedSizeTile.closest(productSectionSelectorClass);
    var $atbForm = $productSection.find(productPageFormSelectorClass).add(quickviewPrimaryActionContainerClass);

    handleSizeTileSelection($sizes);

    // clear the error message when a size tile is selected.
    $atbForm.find(errorContainerSelectorClass).fadeOut(fadeSpeed, fadeEasing);
    $atbForm.removeClass(ajaxErrorClass);
    $atbForm.find(productPageATBButtonSelectorClass).removeAttr('disabled');

    $(quickviewProductInfoContainerSelectorClass).removeClass(quickviewErrorClass);

    triggerAttributeClicked($selectedSizeTile, $productSection);
    dataBridgeSkuUpdateHandler($productSection);
  }

  function handleSizeTileSelection($selectedSizes) {
    var sizeTiles = $selectedSizes.closest(productSizesSelectorClass).find(productAttrClass);

    // remove all selectedClass and set all prop "checked" to false
    sizeTiles.removeClass(selectedClass);
    sizeTiles.find('input').prop('checked', false);

    // add selectedClass and set prop "checked" to true for selectedSize tile
    $selectedSizes.addClass(selectedClass);
    $selectedSizes.find('input').prop('checked', true);
  }

  function displaySelected($el) {
    var $input = $el;

    if ($el.prop('tagName') !== 'INPUT') $input = $el.find('input');

    var selectedText = $input.parent().find('.tile-text').html();
    var sizeSizeCurrentSelectedSelector = productSizesCurrentSelectedClass;

    var $productSizesName = $input.closest(productSizesSelectorClass).prev();
    var $sizeCurrentSelected = $($productSizesName.find(sizeSizeCurrentSelectedSelector)[0]);

    $sizeCurrentSelected.text(selectedText);
  }

  function triggerAttributeClicked($selectedSizeTile, $productSection) {
    var attributeData = {
      selectedAttribute: $selectedSizeTile,
      $productSection: $productSection
    };
    messageBus.trigger('productMultipleAttributeFilter:attributeClicked', attributeData);
  }

  function dataBridgeSkuUpdateHandler($productSection) {
    var shortSku = $productSection.find(partNumberSelector).val() || null;
    var productId = $productSection.attr('data-productid');
    var kic = Utils.getProductData(productId).kicId;

    try {
      var productData = {
        kic: kic,
        shortSku: shortSku,
        productId: productId
      };
      window.digitalData.trigger('productInfo.sizeSelected', productData);
    } catch (error) {
      // DataBridge Error while doing "productInfo.sizeSelected:"
    }
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productSize:updateUrgencyMessage', skuChangeHandler);
      messageBus.on('productPageInfo:load', sizeOnLoad);
      messageBus.on('stickySizeTileSelected', stickySizeTileSelectedHandler);
    },
    bindEvents: function bindEvents() {
      $(document).on('click', productSizeAttrClass, sizeTileClickHandler);
    }
  };

  return publicMembers;
});

redesign.define('productModules/helpers/ProductMFEAdapter',[
  'productModules/helpers/Utils',
  'globalServices/startGuestSession'
],
function ProductMFEAdapter(Utils, guestSession) {
  'use strict';

  function callGuestSession() {
    guestSession.deferredInit().done(function guestSessionSuccess() {
      var guestSessionSuccessEvent = new CustomEvent('crs:guestSessionSuccess');
      window.dispatchEvent(guestSessionSuccessEvent);
    }).fail(function guestSessionFail() {
      var guestSessionFailEvent = new CustomEvent('crs:guestSessionFail');
      window.dispatchEvent( guestSessionFailEvent);
    });
  }

  var publicMembers = {
    attributeUpdate: function attributeUpdate(data) {
      var attributeUpdateEvent = new CustomEvent('crs:attributeUpdate', { detail: data });
      !Utils.isQuickviewOpened && window.dispatchEvent(attributeUpdateEvent);
    },
    swatchUpdate: function swatchUpdate(data) {
      var swatchUpdateEvent = new CustomEvent('crs:swatchUpdate', { detail: data });
      !Utils.isQuickviewOpened && window.dispatchEvent(swatchUpdateEvent);
    },

    listen: function listen() {
      window.addEventListener('mfe:callGuestSession', callGuestSession);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/productMultipleAttributeFilter',[
  'coreServices/ariaLiveSetterService',
  'productModules/helpers/Utils',
  'productModules/helpers/ProductMFEAdapter'
], function productMultipleAttributeFilter(ariaLiveSetterService, Utils, ProductMFEAdapter) {
  'use strict';

  var skuContainer = '.product-page__skus';
  var swatchesSizesContainerSelectorClass = '.product-page__swatches-attributes';
  var tileContainerClass = '.product-attrs__attr';
  var selectedTileInputSelectorClass = 'input:checked';
  var productParentPageContainerSelectorClass = '.product-page-v2-modules';
  var stickySizeTileContainerSelectorClass = '.product-page-sticky-size-tile__container';
  var productFormSectionSelector = '.product-page-add-to-bag__container';

  var messageBus = $(ANF);

  // This will hold all combinations of skuDefiningProperties and whether that sku has inventory
  var skuAvailabilityByCollection = {};

  // This will hold all combinations of skuDefiningProperties and what shortSku has those properties
  var definedSkusByCollection = {};

  // This is used to generate permutations. The algorithm is using it is O(n!), so
  // don't let this list get any longer than a few properties
  var skuDefiningProperties = ['kic', 'sizePrimary', 'sizeSecondary'];

  function setupSkuData(_e, productSection) {
    var $skuParentContainer = $(productSection).find(swatchesSizesContainerSelectorClass);
    var collection = $(productSection).find(productFormSectionSelector).children('input[name=collection]').val();

    var skus = $skuParentContainer
      .find(skuContainer + ' option')
      .get() // converts jquery object to plain array
      .map(skuElementToData);

    skuAvailabilityByCollection[collection] = skus.reduce(createSkuAvailabilityObject, {});
    definedSkusByCollection[collection] = skus.reduce(createDefinedSkuObject, {});
  }

  function skuElementToData(sku) {
    return $.extend({}, sku.dataset, {'shortSku': sku.value});
  }

  function permutationsForDefiningProperties(sku) {
    // Remove unused properties, usually secondary size
    var skuProperties = skuDefiningProperties
      .filter(function removeUndefined(property) { return !!sku[property]; })
      .map(function getValue(property) { return sku[property]; });

    var permuted = [];
    permute(skuProperties, skuProperties.length, function permuteAnon(arr) {
      permuted.push(arr.slice());
    });

    return permuted;
  }

  function createSkuAvailabilityObject(acc, sku) {
    var permuted = permutationsForDefiningProperties(sku);

    permuted.forEach( function permuteForLoop(permutation) {
      setNested(permutation, acc, sku.inventory > 0);
    });

    return acc;
  }

  function createDefinedSkuObject(acc, sku) {
    var permuted = permutationsForDefiningProperties(sku);

    permuted.forEach( function permuteForLoop(permutation) {
      setNested(permutation, acc, sku.shortSku);
    });

    return acc;
  }

  // Takes an array and generates all permutations of the items in it
  function permute(arr, len, cb) {
    if (len === 1) {
      cb(arr);
    } else {
      for (var i = 0; i < len; i++) {
        permute(arr, len - 1, cb);

        if (len % 2 === 0) {
          swap(arr, i, len - 1);
        } else {
          swap(arr, 0, len - 1);
        }
      }
    }

    // http://jira/browse/EPIC-9604 Jira to revisit this to adhere to "no-param-reassign" ESLint rule
    function swap(paramArr, a, b) {
      var tmp = paramArr[a];
      paramArr[a] = paramArr[b];
      paramArr[b] = tmp;
    }
  }

  // Allows setting a value on an object with an array of property names
  // Example:
  // setNested(['a', 'b', 'c'], {}, true)
  //  => { a: { b: { c: true } } }
  function setNested(path, object, value) {
    var lastIndex = path.length - 1;
    var nested = object;

    for (var i = 0; i < path.length; i++) {
      var key = path[i];
      var newValue = value;
      var existing = nested[key];

      if (i !== lastIndex) {
        newValue = existing || {};
      }

      nested[key] = newValue;
      nested = nested[key];
    }

    return object;
  }

  // Gets a value out of an object with an array of property names
  function getNested(path, object) {
    if (!object || path.length === 0) {
      return object;
    } else if (path.length === 1) {
      return object[path[0]];
    }
    return getNested(path.slice(1), object[path[0]]);
  }

  // Searches recursively through an object tree to find if any key/value pair is true
  // Returns as soon as it finds one.
  function findNestedTrue(node) {
    if (typeof node === 'boolean') {
      return node;
    }

    if (typeof node === 'object') {
      var children = Object.keys(node);

      for (var i = 0; i < children.length; i++) {
        var foundTrue = findNestedTrue(node[children[i]]);
        if (foundTrue) {
          return true;
        }
      }

      return false;
    }

    return false;
  }

  function findIsSkuAvailable(skuAvailability, criteria, singleSearch) {
    var path = Object.keys(criteria).map(function getFilters(key) {
      return criteria[key];
    });

    var state = getNested(path, skuAvailability);

    if (typeof state === 'boolean') {
      return state;
    } else if (singleSearch || !state) {
      return false;
    }
    return findNestedTrue(state);
  }

  var publicMembers = {
    initFilter: function initFilter() {
      // set up skus data for each product on the page
      var isQuickview = Utils.isQuickviewOpened;

      if (!isQuickview && Utils.hasProductMFEEnabled()) {
        return;
      }

      $(productParentPageContainerSelectorClass).each(setupSkuData);
    },

    renderBuyGridTiles: function renderBuyGridTiles($skuParentContainer, skuAvailability, selectedTileData) {
      // Focus gets moved around when setting elements' disabled attribute, so we need to reset it
      var savedFocusedElement = document.activeElement;

      // If a selected combo is actually unavailable, we need to determine availability just by KIC
      var verifiedSelection = findIsSkuAvailable(skuAvailability, selectedTileData) ?
        selectedTileData : { 'kic': selectedTileData.kic };

      var tiles = $skuParentContainer.find(tileContainerClass);
      tiles.each(function renderTile(_idx, tile) {
        var input = $(tile).find('input')[0];
        var tileType = input.name.split('_')[0]; // handles tray tiles
        var tileOptions = $.extend({}, verifiedSelection);
        tileOptions[tileType] = input.value;

        var skuHasInventory = findIsSkuAvailable(skuAvailability, tileOptions);

        if (!skuHasInventory) {
          if (tileType === 'kic') {
            tile.setAttribute('data-state', 'disabled');
          } else {
            $(tile).removeClass('selected');
            input.checked = false;
            input.setAttribute('disabled', 'disabled');
          }
        } else if (tileType === 'kic') {
          tile.setAttribute('data-state', 'default');
        } else {
          input.removeAttribute('disabled');
        }
      });

      savedFocusedElement.focus();
    },

    attributeUpdate: function attributeUpdate(_e, data) {
      var $selectedAttr = data.selectedAttribute || $();
      var $productSection = data.$productSection;
      var $skuParentContainer = $productSection.find(swatchesSizesContainerSelectorClass);
      var $skuContainer = $skuParentContainer.find(skuContainer);
      var $selectedSkuArray = $skuParentContainer.find(selectedTileInputSelectorClass);

      var productId = $selectedAttr.find('input').attr('data-productid') || $productSection.attr('data-productid');
      var collection = $productSection.find(productFormSectionSelector).children('input[name=collection]').val();

      var skuAvailability = skuAvailabilityByCollection[collection];
      var filterOptions = {};

      var $skuOption;
      var skuSelected = null;

      $.each($selectedSkuArray,  function selectedSkuArrayLoop(_idx, input) {
        // Exclude the duplicates in sticky tray, if they exist
        if (!$(input).closest(stickySizeTileContainerSelectorClass).length) {
          var tileType = input.name.split('_')[0]; // handles qv tiles
          filterOptions[tileType] = input.value;
        }
      });

      publicMembers.renderBuyGridTiles($skuParentContainer, skuAvailability, filterOptions);

      var selectedIsQualifiedSku = findIsSkuAvailable(skuAvailability, filterOptions, true);
      $productSection.attr('data-qualified-sku', selectedIsQualifiedSku);

      if (selectedIsQualifiedSku) {
        var definedSkuAttributes = Object.keys(filterOptions).map(function getFilters(key) {
          return filterOptions[key];
        });

        var sku = getNested(definedSkuAttributes, definedSkusByCollection[collection]);
        skuSelected = sku;
        $skuOption = $skuContainer.find('option[value="' + skuSelected + '"]');

        publicMembers.handlePartNumberCondition($skuContainer);

        messageBus.trigger('productPrice:skuSelected', {
          'productId': productId,
          'skuId': skuSelected,
          'skuContainer': $skuParentContainer,
          'productPrices': productPrices,
          'productSection': $productSection
        });

        // for analytics
        setTimeout(function analyticsTimeout() {
          $(window).trigger('productSize:skuSelected', {
            'sku': skuSelected,
            'skuContainer': $skuParentContainer,
            'productId': productId,
            'selectedAttribute': $selectedAttr
          });
        }, 0);
      } else {
        var currentKIC = Utils.getProductData(productId).kicId;
        $skuOption = $skuContainer.find('option[data-kic="' + currentKIC + '"]').first();

        // If we can't find the product via KIC this grabs the first option after the blank option instead.
        if (!$skuOption.val()) {
          $skuOption = $skuContainer.find('option:eq(2)');
        }

        messageBus.trigger('productPrice:swatchSelected', {
          'productId': productId,
          'kic': currentKIC,
          'skuContainer': $skuParentContainer,
          'productPrices': productPrices,
          'productSection': $productSection
        });
      }
      $skuContainer.val(skuSelected);
      $productSection.attr('data-inventory', $skuOption.attr('data-inventory'));

      var $productQuantityDropdown = $productSection.find('.product-quantity-dropdown select');
      var isStickyTileSelection = $selectedAttr.parents(stickySizeTileContainerSelectorClass).length === 1;

      messageBus.trigger('productSize:updateUrgencyMessage', {
        'sku': skuSelected,
        'skuContainer': $skuParentContainer,
        'productId': productId,
        'selectedAttribute': $selectedAttr,
        'isStickyTileSelection': isStickyTileSelection
      });

      messageBus.trigger('productSize:skuSelected', {
        'sku': skuSelected,
        'skuContainer': $skuParentContainer,
        'productId': productId,
        'selectedAttribute': $selectedAttr,
        'isStickyTileSelection': isStickyTileSelection,
        'quantity': $productQuantityDropdown ? $productQuantityDropdown.val() : 1
      });

      messageBus.trigger('PDP:skuSelected', {
        'sku': skuSelected,
        '$parentContainer': $productSection
      });

      ProductMFEAdapter.attributeUpdate({
        sku: skuSelected,
        productId: productId,
        kic: filterOptions.kic,
        seq: productCatalog[productId].swatchSequence
      });

      ariaLiveSetterService.assertive(ANF.messaging.product.productListUpdated);
    },

    handlePartNumberCondition: function handlePartNumberCondition($skuContainer) {
      var needsPartNumber = ($('body').hasClass('checkout') || $('body').is('#checkout-cart'));

      if (needsPartNumber) {
        var $addToBagForm = $skuContainer.closest('form');
        publicMembers.addPartNumberToForm($addToBagForm);
      }
    },

    addPartNumberToForm: function addPartNumberToForm(form) {
      var $sku = form.find('[name="sku"]');
      var $partNumber;
      var dataSelector = '.product-add-to-bag .data';
      var partNumberName = 'partNumber_2';

      // if new size tiles are used, the sku is on the form as 'sku' input instead of 'partnumber' as expected.
      if ($sku.length) {
        $partNumber = form.find('[name="' + partNumberName + '"]');

        if ($partNumber.length) {
          $partNumber.val($sku.val());
        } else {
          $('<input>').attr({
            type: 'hidden',
            id: partNumberName,
            name: partNumberName,
            value: $sku.val()
          }).appendTo(dataSelector);
        }
      }
    }
  };

  publicMembers.listen = {
    'productPageInfo:load': publicMembers.initFilter,
    'productMultipleAttributeFilter:attributeUpdate': publicMembers.attributeUpdate,
    'productMultipleAttributeFilter:attributeClicked': publicMembers.attributeUpdate
  };

  return publicMembers;
});

redesign.define('productModules/product/productSwatches',[
  'productModules/helpers/Utils',
  'dsPartial/icon-block',
  'util/analytics/enum/dataPoint',
  'util/analytics/enum/subscriptionName',
  'productModules/helpers/ProductMFEAdapter'
], function ProductSwatches(
  Utils,
  dsPartialIconBlock,
  analyticsDataPoint,
  analyticsSubscriptionName,
  ProductMFEAdapter
) {
  'use strict';

  // Constants
  var activeProductClass = 'active-product';
  var activeProductParentContainerSelectorClass = '.product-page-v2-modules.active-product';
  var ajaxErrorClass = 'atb-ajax-error';
  var defaultSwatchClass = '.default-swatch';
  var errorContainerSelectorClass = '.validator-container';
  var fadeEasing = 'linear';
  var fadeSpeed = 100;
  var messageBus = $(ANF);
  var partNumberSelector = 'input[name="partNumber"]';
  var productPageATBButtonSelectorClass = '.product-page-add-to-bag__button';
  var productSection = '.product-page-v2-modules';
  var productSkuSelectorClass = '.product-page__skus';
  var productSwatchesSelectorClass = '.product-swatches';
  var productWrap = '.product-page__swatches-attributes';
  var quickviewModalIsActiveSelectorClass = '.product-quickview__modal[data-open="true"]';
  var quickviewModalProductSection = '.product-quickview__modal[data-open="true"] .product-quickview__content .product-page-v2-modules';
  var selectedClass = 'selected';
  var swatchLabel = '.selected-swatch__label';
  var swatchLoadingClass = 'loading';
  var swatchTile = '.product-swatch__attr';
  var urgencyMessageSelectorClass = '.product-urgency-size-availability';

  function handleMfeSwatchChange(event) {
    var productDetails = event.detail;
    var $productSection = Utils.getProductSection();
    messageBus.trigger('mfe:SwatchSelected', [{}, $productSection, productDetails.productId, ANF]);
  }

  function swatchOnLoad() {
    var isQuickview = Utils.isQuickviewOpened;
    var $productSection = isQuickview ? $(quickviewModalProductSection) : $(productSection);
    var $selectedSwatch = $productSection.find(defaultSwatchClass);
    var productId = getProductId($productSection);

    if (!isQuickview && Utils.hasProductMFEEnabled()) {
      return;
    }


    if ($selectedSwatch.length > 0) {
      $productSection.addClass(activeProductClass); // set active product
      swatchSelectedUpdate($selectedSwatch, $productSection, productId);
    } else {
      updateSwatchUrgencyMessage($productSection, productId);
      messageBus.trigger('productMultipleAttributeFilter:attributeUpdate', {$productSection: $productSection});
    }
    messageBus.trigger('productPageInfo:swatchOnLoad', [$selectedSwatch, $productSection, productId, ANF]);

    if (isQuickview) {
      setTimeout(function quickviewSwatchLoadedTrigger() {
        messageBus.trigger('productQuickview:swatchesLoaded', $productSection);
      }, 0);
    }
  }

  function swatchClickEvent(e) {
    var $selectedSwatch = $(e.currentTarget);
    var $selectedInput = $selectedSwatch.find('input');
    var newProductId = $selectedInput.data('productid');
    var newKIC = $selectedInput.val();
    var $productSection = $selectedSwatch.closest(productSection);
    var $addToBagForm = $productSection.find('form');
    if (newProductId !== parseInt(getProductId($productSection), 10)) {
      $(activeProductParentContainerSelectorClass).removeClass(activeProductClass);
      $productSection.addClass(activeProductClass);

      $addToBagForm
        .find(errorContainerSelectorClass)
        .fadeOut(fadeSpeed, fadeEasing)
        .removeClass(ajaxErrorClass);

      // update product ids across page
      $addToBagForm.find('input[name=productId]').val(newProductId);

      $productSection
        .attr('data-productid', newProductId)
        .data('productid', newProductId);

      $productSection.find('.details__write-review-modal').attr('data-productid', newProductId);

      var $currentProductSkus = $productSection.find(productSkuSelectorClass);
      var longSku = $currentProductSkus.find('option[data-kic="' + newKIC + '"]').first().attr('data-long-sku');
      $productSection.attr('data-long-sku', $.trim(longSku));

      var $fitPredictorContainer = $productSection.find('.fp-root');
      if ($fitPredictorContainer.length > 0) {
        $fitPredictorContainer.attr('data-product-id', longSku);
      }

      // trigger image load after all the product data is saved on the <section>
      messageBus.trigger('productPageImages:reload', {
        $selectedSwatch: $selectedSwatch,
        $productSection: $productSection
      });

      swatchSelectedUpdate($selectedSwatch, $productSection, newProductId);
      ProductMFEAdapter.swatchUpdate({
        productId: newProductId
      });
      messageBus.trigger('productPageInfo:swatchSelected', [$selectedSwatch, $productSection, newProductId]);
      $addToBagForm.find(productPageATBButtonSelectorClass).removeAttr('disabled');

      triggerAnalyticsEvent(newProductId, longSku);
    }

    // push call to end of stack to avoid race conditions
    window.setTimeout(function timeout() {
      dataBridgeSwatchSelectHandler($productSection, newProductId);
    }, 0);

    // This is to prevent the event to alter the pdp when in the quickview of the same product
    e.preventDefault();
  }

  function swatchSelectedUpdate($selectedSwatch, $productSection, productId) {
    var $input = $selectedSwatch.find('input');
    var $productAttributeWrapper = $input.closest(productWrap);

    // handle product urgency message display
    updateSwatchUrgencyMessage($productSection, productId);

    // EPIC-7708: adding this each back so that both the pdp swatch and tray swatch is updated to have selected class on swatch click
    // TODO: remove this when we improve productMultipleAttributeFilter.attributeUpdate's function to use only pdp swatch to filter
    var swatchSeq = $input.attr('data-seq');
    var swatches = $productSection.find('input[data-seq=' + swatchSeq + ']').closest(swatchTile);

    $.each(swatches, function updateSwatches(index, swatch) {
      var $swatch = $(swatch);

      updateSwatchLabel($input, $productAttributeWrapper);
      updateSelectedSeq($input, $productAttributeWrapper);
      updateSwatchSelectedProperty($swatch, $input);

      if (index === 0) {
        setTimeout(function timeout() {
          triggerPostSwatchSelectionProcesses($swatch, $productSection);

          if ($(quickviewModalIsActiveSelectorClass).length > 0) {
            messageBus.trigger('quickview:updateFullProductLink', $swatch.children('input').attr('data-producturl'));
          }
        }, 0);
      }
    });
  }

  function updateSwatchUrgencyMessage($productSection, productId) {
    if ($productSection.find('.product-sizes-primary .tiles').first().children().length > 1) {
      var $urgencyMsg = $productSection.find(urgencyMessageSelectorClass);
      var $urgencyScreenReaderMsg = $urgencyMsg.find('.urgency-message__kic_screen-reader');

      var finalThreshold = ANF.params.storeAttributes.catalogV2.lowestInventoryThreshold;
      var currentProductInventory = Utils.getProductData(productId).lowestInventoryCount;
      var isLowInventory = currentProductInventory > 0 && currentProductInventory < finalThreshold;

      if (isLowInventory) {
        if (!$urgencyMsg.hasClass('show')) {
          $urgencyMsg.addClass('fadein').removeClass('hide default-hidden');
          setTimeout(function timeoutBump() {
            $urgencyMsg.removeClass('fadein').addClass('bump');

            setTimeout(function timeoutShow() {
              $urgencyMsg.removeClass('bump').addClass('show');
              $urgencyScreenReaderMsg.html(ANF.messaging.catalog.NEW_KIC_URGENCY_MESSAGE);
            }, 500);
          }, 500);
        } else {
          $urgencyMsg.removeClass('show hide').addClass('bump');

          setTimeout(function timeoutShow() {
            $urgencyMsg.removeClass('bump').addClass('show');
            $urgencyScreenReaderMsg.html(ANF.messaging.catalog.NEW_KIC_URGENCY_MESSAGE);
          }, 500);
        }

        $(window).trigger('analytics.miscProductFeature', {
          'type': 'low inventory message',
          'action': 'KIC level'
        });
      } else if (!$urgencyMsg.hasClass('hide')) {
        $urgencyMsg.removeClass('show').addClass('fadeout');
        setTimeout(function timeoutHide() {
          $urgencyMsg.removeClass('fadeout').addClass('hide');
          $urgencyScreenReaderMsg.html('');
        }, 450);
      }

      // unfortunately the best way to gaurantee animation running again is by replacing the content of the urgency message.
      var iconBlockSettings = {
        'data-icon': 'clock',
        'icon-block-optional-content': {
          'icon-block-heading': ANF.messaging.catalog.NEW_KIC_URGENCY_MESSAGE
        }
      };

      var template = dsPartialIconBlock.templates['icon-block'](iconBlockSettings);
      $urgencyMsg.find('.urgency-message__content').html(template);
    }
  }

  function triggerPostSwatchSelectionProcesses($selectedSwatch, $productSection) {
    var $productWrap = $productSection.find(productWrap);

    var attributeData = {
      selectedAttribute: $selectedSwatch,
      $productSection: $productSection
    };

    messageBus.trigger('productMultipleAttributeFilter:attributeClicked', attributeData);

    if ($productWrap.hasClass(swatchLoadingClass)) {
      $productWrap.removeClass(swatchLoadingClass);
    }
  }

  function updateSwatchLabel($input, $productAttributeWrapper) {
    // multi-pdp pages can have multiple selected swatch tiles, one for each product.
    // get the product wrapper for this swatch so we are only setting the label for the correct product.
    var $swatchLabel = $productAttributeWrapper.find(swatchLabel);
    var swatchData = $input.attr('data-swatch').toLowerCase();

    if ($input.length > 0) {
      $swatchLabel.html(swatchData);
      $input.closest(productSection).attr('data-swatch', $input.attr('data-swatch').toLowerCase());
    }
  }

  function updateSelectedSeq($input, $productAttributeWrapper) {
    // multi-pdp pages can have multiple selected swatch tiles, one for each product.
    // get the product wrapper for this swatch so we are only setting selected sequence for the correct product.
    var $skus = $productAttributeWrapper.find(productSkuSelectorClass);
    var newSeq = $input.attr('data-seq');

    $skus.attr('data-selected-seq', newSeq);
    window.digitalData.set('product.data.sequence', newSeq);
  }

  function updateSwatchSelectedProperty($selectedSwatch, $input) {
    $selectedSwatch
      .parents(productSwatchesSelectorClass)
      .find(swatchTile)
      .removeClass(selectedClass);

    $selectedSwatch.addClass(selectedClass);
    $input.prop('checked', true);
  }

  function getProductId($productSection) {
    return $productSection.attr('data-productid');
  }

  function dataBridgeSwatchSelectHandler($productSection, productId) {
    var shortSku = $productSection.find(partNumberSelector).val() || null;
    var kic = Utils.getProductData(productId).kicId;

    try {
      var productData = {
        kic: kic,
        shortSku: shortSku,
        productId: productId
      };
      window.digitalData.trigger('productInfo.swatchSelected', productData);
      window.dispatchEvent('crs:swatchSelected', { detail: productData });
    } catch (error) {
      // do nothing
    }
  }

  function getFromFirstProduct(productId, key) {
    var items;
    try {
      items = productPrices[productId].items;
    } catch (error) {
      // do nothing
    }
    var firstItem = items && Object.values(items)[0];
    return firstItem ? firstItem[key] : 'null';
  }

  function getBadgeDataFromProduct(productId, key) {
    var productData = Utils.getProductData(productId);
    if (!productData) {
      return null;
    }
    var keys = key.split('.');
    return keys.reduce(function _reduce(acc, currKey) {
      return (acc && acc.hasOwnProperty(currKey)) ? acc[currKey] : null;
    }, productData);
  }

  function getProductBadge(productId) {
    var isNewArrival = getBadgeDataFromProduct(productId, 'newArrival');
    var earlyAccessFlag = getBadgeDataFromProduct(productId, 'productAttrs.EarlyAccessIndicator');
    var isEarlyAccess = earlyAccessFlag ? earlyAccessFlag.toString().toLowerCase() === 'true' : false;
    var isTopRated = getBadgeDataFromProduct(productId, 'productAttrs.topRated');
    var isBestSeller = getBadgeDataFromProduct(productId, 'productAttrs.bestSeller');
    return [isNewArrival ? 'new' : '', isEarlyAccess ? 'early access' : '', isTopRated ? 'top rated' : '', isBestSeller ? 'top seller' : ''].filter(Boolean).join(', ');
  }

  function triggerAnalyticsEvent(productId, longSku) {
    var clickedSwatches = window.digitalData.get('productSwatches.clicked') ? window.digitalData.get('productSwatches.clicked') : [];
    var hadBeenClickedCurrentSwatch = clickedSwatches.includes(productId);

    if (hadBeenClickedCurrentSwatch) return;

    clickedSwatches.push(productId);
    window.digitalData.set('productSwatches.clicked', clickedSwatches);

    var productInfo = Utils.getProductData(productId);
    var dataPointEmptyValue = 'null';

    var eventData = {};
    eventData[analyticsDataPoint.KEY_ITEM_COLOR] = productInfo.kicId;
    eventData[analyticsDataPoint.PRICE_LIST_LOCAL] = getFromFirstProduct(productId, 'listPrice') || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRICE_LIST_USD] = getFromFirstProduct(productId, 'listPriceUSD') || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRICE_OFFER_LOCAL] = getFromFirstProduct(productId, 'offerPrice') || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRICE_OFFER_USD] = getFromFirstProduct(productId, 'offerPriceUSD') || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRICE_FLAG] = getFromFirstProduct(productId, 'priceFlag') || dataPointEmptyValue;
    eventData[analyticsDataPoint.LONG_SKU] = longSku || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRODUCT_ID] = productId || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRODUCT_NAME] = productInfo.name || dataPointEmptyValue;
    eventData[analyticsDataPoint.COLLECTION_ID] = productInfo.collection || dataPointEmptyValue;
    eventData[analyticsDataPoint.BRAND] = productInfo.productAttrs.brand || dataPointEmptyValue;
    eventData[analyticsDataPoint.PRODUCT_BADGE] = getProductBadge(productId) || dataPointEmptyValue;
    window.digitalData.trigger(analyticsSubscriptionName.ACTION.SWATCH_CLICK, eventData);
  }

  var publicMembers = {
    bindEvents: function bindEvents() {
      $(document).on('change', swatchTile, swatchClickEvent);
    },
    listen: function listen() {
      $(ANF).on('productPageInfo:load', swatchOnLoad);
      window.addEventListener('mfe:SwatchSelected', handleMfeSwatchChange);
    }
  };

  return publicMembers;
});

/*!
 * currency.js - v1.2.2
 * http://scurker.github.io/currency.js
 *
 * Copyright (c) 2019 Jason Wilson
 * Released under MIT license
 */

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof redesign.define === 'function' && redesign.define.amd ? redesign.define('currency',factory) :
  (global = global || self, global.currency = factory());
}(this, function () { 'use strict';

  var defaults = {
    symbol: '$',
    separator: ',',
    decimal: '.',
    formatWithSymbol: false,
    errorOnInvalid: false,
    precision: 2,
    pattern: '!#',
    negativePattern: '-!#'
  };

  var round = function round(v) {
    return Math.round(v);
  };

  var pow = function pow(p) {
    return Math.pow(10, p);
  };

  var rounding = function rounding(value, increment) {
    return round(value / increment) * increment;
  };

  var groupRegex = /(\d)(?=(\d{3})+\b)/g;
  var vedicRegex = /(\d)(?=(\d\d)+\d\b)/g;
  /**
   * Create a new instance of currency.js
   * @param {number|string|currency} value
   * @param {object} [opts]
   */

  function currency(value, opts) {
    var that = this;

    if (!(that instanceof currency)) {
      return new currency(value, opts);
    }

    var settings = Object.assign({}, defaults, opts),
        precision = pow(settings.precision),
        v = parse(value, settings);
    that.intValue = v;
    that.value = v / precision; // Set default incremental value

    settings.increment = settings.increment || 1 / precision; // Support vedic numbering systems
    // see: https://en.wikipedia.org/wiki/Indian_numbering_system

    if (settings.useVedic) {
      settings.groups = vedicRegex;
    } else {
      settings.groups = groupRegex;
    } // Intended for internal usage only - subject to change


    this.s = settings;
    this.p = precision;
  }

  function parse(value, opts) {
    var useRounding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var v = 0,
        decimal = opts.decimal,
        errorOnInvalid = opts.errorOnInvalid,
        decimals = opts.precision,
        precision = pow(decimals),
        isNumber = typeof value === 'number';

    if (isNumber || value instanceof currency) {
      v = (isNumber ? value : value.value) * precision;
    } else if (typeof value === 'string') {
      var regex = new RegExp('[^-\\d' + decimal + ']', 'g'),
          decimalString = new RegExp('\\' + decimal, 'g');
      v = value.replace(/\((.*)\)/, '-$1') // allow negative e.g. (1.99)
      .replace(regex, '') // replace any non numeric values
      .replace(decimalString, '.') // convert any decimal values
      * precision; // scale number to integer value

      v = v || 0;
    } else {
      if (errorOnInvalid) {
        throw Error('Invalid Input');
      }

      v = 0;
    } // Handle additional decimal for proper rounding.


    v = v.toFixed(4);
    return useRounding ? round(v) : v;
  }

  currency.prototype = {
    /**
     * Adds values together.
     * @param {number} number
     * @returns {currency}
     */
    add: function add(number) {
      var intValue = this.intValue,
          _settings = this.s,
          _precision = this.p;
      return currency((intValue += parse(number, _settings)) / _precision, _settings);
    },

    /**
     * Subtracts value.
     * @param {number} number
     * @returns {currency}
     */
    subtract: function subtract(number) {
      var intValue = this.intValue,
          _settings = this.s,
          _precision = this.p;
      return currency((intValue -= parse(number, _settings)) / _precision, _settings);
    },

    /**
     * Multiplies values.
     * @param {number} number
     * @returns {currency}
     */
    multiply: function multiply(number) {
      var intValue = this.intValue,
          _settings = this.s;
      return currency((intValue *= number) / pow(_settings.precision), _settings);
    },

    /**
     * Divides value.
     * @param {number} number
     * @returns {currency}
     */
    divide: function divide(number) {
      var intValue = this.intValue,
          _settings = this.s;
      return currency(intValue /= parse(number, _settings, false), _settings);
    },

    /**
     * Takes the currency amount and distributes the values evenly. Any extra pennies
     * left over from the distribution will be stacked onto the first set of entries.
     * @param {number} count
     * @returns {array}
     */
    distribute: function distribute(count) {
      var intValue = this.intValue,
          _precision = this.p,
          _settings = this.s,
          distribution = [],
          split = Math[intValue >= 0 ? 'floor' : 'ceil'](intValue / count),
          pennies = Math.abs(intValue - split * count);

      for (; count !== 0; count--) {
        var item = currency(split / _precision, _settings); // Add any left over pennies

        pennies-- > 0 && (item = intValue >= 0 ? item.add(1 / _precision) : item.subtract(1 / _precision));
        distribution.push(item);
      }

      return distribution;
    },

    /**
     * Returns the dollar value.
     * @returns {number}
     */
    dollars: function dollars() {
      return ~~this.value;
    },

    /**
     * Returns the cent value.
     * @returns {number}
     */
    cents: function cents() {
      var intValue = this.intValue,
          _precision = this.p;
      return ~~(intValue % _precision);
    },

    /**
     * Formats the value as a string according to the formatting settings.
     * @param {boolean} useSymbol - format with currency symbol
     * @returns {string}
     */
    format: function format(useSymbol) {
      var _this$_settings = this.s,
          pattern = _this$_settings.pattern,
          negativePattern = _this$_settings.negativePattern,
          formatWithSymbol = _this$_settings.formatWithSymbol,
          symbol = _this$_settings.symbol,
          separator = _this$_settings.separator,
          decimal = _this$_settings.decimal,
          groups = _this$_settings.groups,
          values = (this + '').replace(/^-/, '').split('.'),
          dollars = values[0],
          cents = values[1]; // set symbol formatting

      typeof useSymbol === 'undefined' && (useSymbol = formatWithSymbol);
      return (this.value >= 0 ? pattern : negativePattern).replace('!', useSymbol ? symbol : '').replace('#', "".concat(dollars.replace(groups, '$1' + separator)).concat(cents ? decimal + cents : ''));
    },

    /**
     * Formats the value as a string according to the formatting settings.
     * @returns {string}
     */
    toString: function toString() {
      var intValue = this.intValue,
          _precision = this.p,
          _settings = this.s;
      return rounding(intValue / _precision, _settings.increment).toFixed(_settings.precision);
    },

    /**
     * Value for JSON serialization.
     * @returns {float}
     */
    toJSON: function toJSON() {
      return this.value;
    }
  };

  return currency;

}));

redesign.define('coreServices/klarna/messagePlacement',[
  'anfUtil/testFramework',
  'currency'
], function klarnaMessagePlacement(test, currency) {
  'use strict';

  /**
   * @desc Reponsible for managing the Klarna Onsite Mesaging Script
   * @todo Refactor KlarnaMessaginScript and BaiduScript into a Script class responsible for loading the script
   * @private
   * @final
   */

  var KlarnaMessagePlacementScript = {
    /**
     * @desc the deferred instance that will get resolved when Klarna Onsite Messaging Script is loaded
     * @property {Promise} deferred
     * @protected
     */
    deferred: null
  };

  /**
   * @desc load the Klarna Onsite Messaging Script onto the DOM
   * @protected
   * @static
   * @return {Promise} Promise represents when the script has loaded
   */

  KlarnaMessagePlacementScript.load = function load() {
    if (!this.deferred) {
      window.$LAB.script(this.getUrl()).wait(function wait() {
        this.getDeferred().resolve(this.find().get(0));
      }.bind(this));
    }
    return this.getDeferred().promise();
  };

  /**
   * @desc get the URL to the Baidu Script
   * @protected
   * @static
   * @return {string}
   */

  KlarnaMessagePlacementScript.getUrl = function getUrl() {
    return ANF.params.storeAttributes.klarnaOnsiteMessagingScriptURL;
  };

  /**
   * @desc attempts to find the klarna script tag on the DOM
   * @protected
   * @static
   * @return {HTMLElement} A jQuery wrapped HTMLElement
   */

  KlarnaMessagePlacementScript.find = function find() {
    var url = this.getUrl();
    return $('script').filter(function filter() {
      return String($(this).attr('src')).indexOf(url) >= 0 ? true : false;
    });
  };

  /**
   * @desc get the Deferred() instance used to resolve when Klarna Onsite Messaging Script has been loaded
   * @protected
   * @static
   * @return {$.Deferred}
   */

  KlarnaMessagePlacementScript.getDeferred = function getDeferred() {
    if (!this.deferred) {
      this.deferred = new $.Deferred();
    }
    return this.deferred;
  };

  /**
   * @desc Responsible for controlling Klarna's Onsite Messaging
   * @public
   * @class
   * @final
   * @param {HTMLElement} [element] - The HTMLElement that reprsents the <klarna-placement /> tag wrapped in jQuery
   * @param {Object} [options] - Contains options for this KlarnaMessagePlacement
   * @param {Object} [options.threshold] - The treshold for determining if we can display the Klarna Onsite Messaging
   * @param {Number} [options.threshold.min] - The minimum threshold in the smallest unit of account
   * @param {Number} [options.threshold.max] - The maximum threshold in the smallest unit of account
   * @param {Function} [options.isWithinOtherConstraints] - A function that will return a boolean if conditions match other constraints. This method will replace this instance's isWithinOtherConstraints() function.
   * @exports KlarnaMessagePlacement
   */

  function KlarnaMessagePlacement(options) {
    if (test.type.object(options)) {
      if (test.type.object(options.element)) {
        this.setElement(options.element);
      }

      if (test.type.object(options.threshold)) {
        this.setThreshold(options.threshold);
      }

      if (test.type.function(options.isWithinOtherConstraints)) {
        this.isWithinOtherConstraints = options.isWithinOtherConstraints;
      }
    }
    this.hide();
  }

  /**
   * @desc The HTML element tag name for Klarna Message Placement
   * @public
   * @property {String}
   */

  KlarnaMessagePlacement.TagName = 'klarna-placement';

  /**
   * @desc The HTML element attribute name for setting / geting the purchase amount
   * @public
   * @property {String}
   */

  KlarnaMessagePlacement.DataPurchaseAmountAttributeName = 'data-purchase_amount';

  /**
   * @desc The event name for trigger Klarna Message Placement updates
   * @public
   * @property {String}
   */

  KlarnaMessagePlacement.RefreshPlacementsEventName = 'refresh-placements';

  /**
   * @desc Parse a threshold that comes from a store attribute field 3
   * @public
   * @static
   * @param {String} value - comma separated string e.g. "35,1000"
   * @return {Object} containing a min and max field e.g. { min: 3500, max: 100000 }
   */

  KlarnaMessagePlacement.parseThreshold = function parseThreshold(value) {
    var threshold = {};

    if (!test.type.string(value)) {
      return threshold;
    }

    var parts = value.split(',');

    var min = parseNumber(parts.shift());
    if (test.type.number(min)) {
      threshold.min = min * 100; // use smallest unit of account
    }

    var max = parseNumber(parts.shift());
    if (test.type.number(max)) {
      threshold.max = max * 100; // use smallest unit of account
    }

    return threshold;
  };

  /**
   * @desc Initializes the Klarna Onsite Messaging Script
   * @public
   * @instance
   * @return {Promise} Promise represents an HTMLElement <script />
   */

  KlarnaMessagePlacement.prototype.getScriptTag = function getScriptTag() {
    var script = KlarnaMessagePlacementScript.find();
    if (script && script.length) {
      return new $.Deferred().resolve(script.get(0)).promise();
    }
    return KlarnaMessagePlacementScript.load();
  };

  /**
   * @desc set the element that we are controlling
   * @public
   * @instance
   * @param {jQuery} element - Represents the <klarna-placement /> tag wrapped in jQuery
   * @return {KlarnaMessagePlacement} Represents the current instance for chaining
   */

  KlarnaMessagePlacement.prototype.setElement = function setElement(element) {
    if (element) {
      this.element = $(element);
    }
    return this;
  };

  /**
   * @desc get the element that we are controlling
   * @public
   * @instance
   * @return {jQuery} Represents the <klarna-placement /> tag wrapped in jQuery
   * @throws {Error} When there are no <klarna-placement /> tags on the DOM
   */

  KlarnaMessagePlacement.prototype.getElement = function getElement() {
    if (!this.element) {
      this.setElement($(this.constructor.TagName));
    }
    return this.element;
  };

  /**
   * @desc reset the message placement
   * @public
   * @instance
   * @return {KlarnaMessagePlacement}
   */

  KlarnaMessagePlacement.prototype.reset = function reset() {
    this.element = null;
    return this;
  };

  /**
   * @desc set the threshold for determining if we can display the Klarna Onsite Messaging
   * @public
   * @instance
   * @param {Object} threshold - The treshold for determining if we can display the Klarna Onsite Messaging
   * @param {Number} threshold.min - The minimum threshold in the smallest unit of account
   * @param {Number} threshold.max - The maximum threshold in the smallest unit of account
   * @return {KlarnaMessagePlacement} Represents the current instance for chaining
   */

  KlarnaMessagePlacement.prototype.setThreshold = function setThreshold(threshold) {
    this.threshold = threshold;
    return this;
  };

  /**
   * @desc get the threshold for determing if we can display the Klarna Onsite Messaging
   * @public
   * @instance
   * @return {Object} Represents the min and max threshold
   */

  KlarnaMessagePlacement.prototype.getThreshold = function getThreshold() {
    if (!this.threshold) {
      this.setThreshold({});
    }
    return this.threshold;
  };

  /**
   * @desc determine if the value is within the threshold
   * @public
   * @instance
   * @param {Number} value - Represents the value we are checking
   * @return {Boolean}
   */

  KlarnaMessagePlacement.prototype.isWithinThreshold = function isWithinThreshold(value) {
    var threshold = this.getThreshold();

    if (test.type.number(threshold.min)) {
      if (value < threshold.min) {
        return false;
      }
    }

    if (test.type.number(threshold.max)) {
      if (value > threshold.max) {
        return false;
      }
    }

    return true;
  };

  /**
   * @desc Allows for an instance to supply additional constraints by overriding this method
   * @public
   * @instance
   * @override
   * @return {Boolean}
   */

  KlarnaMessagePlacement.prototype.isWithinOtherConstraints = function isWithinOtherConstraints() {
    return true;
  };

  /**
   * @desc Determine if the Klarna Onsite Messaging should be visible to the user based on the Klarna Card Brands
   * @public
   * @instance
   * @param {Number} value - The value used to determine if we can display or not
   * @return {Boolean}
   */

  KlarnaMessagePlacement.prototype.canDisplay = function canDisplay(value) {
    return this.isWithinThreshold(value) && this.isWithinOtherConstraints();
  };

  /**
   * @desc Updates the Klarna Onsite Messaging by setting the value on the element and pushing an event to Klarna
   * @public
   * @instance
   * @param {number} value - The value used to determine if we can display or not
   * @return {KlarnaMessagePlacement} Represents the current instance for chaining
   */

  KlarnaMessagePlacement.prototype.update = function update(value) {
    try {
      var purchaseAmount = currency(value).intValue;
      this.getElement().attr(this.constructor.DataPurchaseAmountAttributeName, purchaseAmount);
      if (this.canDisplay(purchaseAmount)) {
        this.show();
      } else {
        this.hide();
      }
      window.KlarnaOnsiteService = window.KlarnaOnsiteService || [];
      window.KlarnaOnsiteService.push({
        eventName: this.constructor.RefreshPlacementsEventName
      });
    } finally {
      return this;
    }
  };

  /**
   * @desc hide the placement
   * @public
   * @instance
   * @return {KlarnaMessagePlacement}
   */

  KlarnaMessagePlacement.prototype.hide = function hide() {
    this.getElement().parent().hide();
    return this;
  };

  /**
   * @desc show the placement
   * @public
   * @instance
   * @return {KlarnaMessagePlacement}
   */

  KlarnaMessagePlacement.prototype.show = function show() {
    this.getElement().parent().show();
    return this;
  };

  return KlarnaMessagePlacement;

  /**
   * @desc parse a number
   * @private
   * @param {Number} value
   * @return {Number|undefined}
   */

  function parseNumber(value) {
    var num = parseInt(value, 10);
    if (isNaN(num)) {
      return void 0;
    }
    return num;
  }
});

redesign.define('productPartial/pdp_productPrice',['handlebars','dsPartial/product-price','dsPartial/product-price-text','wcsHelper/i18n'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_productPrice", this["ANF"]["templates"]["pdp_productPrice"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"brand":(depth0 != null ? depth0.productBrand : depth0),"clearance-text":(depth0 != null ? depth0.clearanceText : depth0),"description":(depth0 != null ? depth0.description : depth0),"type":"clearance","class-list":"js-main-price"},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.price : depth0),"type":"original","size":"large"},"data":data,"indent":"\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.discountPrice : depth0),"type":"discount","size":"large"},"data":data,"indent":"\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"brand":(depth0 != null ? depth0.productBrand : depth0),"description":(depth0 != null ? depth0.description : depth0),"class-list":"js-main-price"},"fn":container.program(5, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"5":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.price : depth0),"size":"large"},"data":data,"indent":"\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"7":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"brand":(depth0 != null ? depth0.productBrand : depth0),"clearance-text":helpers.i18n.call(depth0 != null ? depth0 : (container.nullContext || {}),"loyalty.MEMBER_CLEARANCE",{"name":"i18n","hash":{},"data":data}),"description":(depth0 != null ? depth0.memberPriceDescription : depth0),"type":"member","class-list":"js-member-price"},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"8":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.memberPrice : depth0),"type":"member","size":"large"},"data":data,"indent":"\t\t","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.isClearance : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.program(4, data, 0),"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasMemberPrice : depth0),{"name":"if","hash":{},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/productPrice',[
  'anfUtil/testFramework',
  'coreServices/klarna/messagePlacement',
  'anfUtil/constants',
  'productPartial/pdp_productPrice',
  'productModules/helpers/Utils'
], function productPrice(
  test,
  KlarnaMessagePlacement,
  coreConstants,
  productPartialPdpProductPrice,
  Utils
) {
  'use strict';

  // Aliasing this as variable since we can't use const yet

  // Constants
  var priceContainerSelector = '.js-product-price';
  var priceTextSelector = '.product-price-text';
  var skuSelect = '.product-page__skus';

  var memberPricing = {
    contractPrice: 0,
    contractPriceFmt: ''
  };

  var klarna = {
    messagePlacement: null,
    threshold: KlarnaMessagePlacement.parseThreshold(ANF.params.storeAttributes.klarnaOnsiteMessagingProductThreshold),
    hasKlarnaOnsiteMessaging: function hasKlarnaOnsiteMessaging() {
      return ANF.params.storeAttributes.hasKlarnaOnsiteMessagingProduct;
    },
    isWithinOtherConstraints: function isWithinOtherConstraints() {
      return this.hasKlarnaOnsiteMessaging();
    },
    getMessagePlacement: function getMessagePlacement() {
      var deferred = new $.Deferred();

      if (!this.messagePlacement) {
        this.messagePlacement = new KlarnaMessagePlacement({
          threshold: this.threshold,
          isWithinOtherConstraints: this.isWithinOtherConstraints.bind(this)
        });
      }

      if (!this.hasKlarnaOnsiteMessaging()) {
        return deferred.resolve(this.messagePlacement).promise();
      }

      this.messagePlacement.getScriptTag().done(function done() {
        deferred.resolve(this.messagePlacement);
      }.bind(this));

      return deferred.promise();
    }
  };

  function updatePricetag(sku, productContainer) {
    var priceModel = {
      isClearance: false,
      price: '',
      hasMemberPrice: false,
      productBrand: Utils.getProductData(productContainer.data('productid')).productAttrs.brand
    };
    var $priceContainer = productContainer.find(priceContainerSelector);
    var contractPrice = memberPricing.contractPrice;
    var contractPriceFmt = memberPricing.contractPriceFmt;

    /* Handle main price */
    priceModel.price = sku.listPriceFmt;
    priceModel.description = sku.listPriceFmt;
    if (sku.listPrice !== sku.offerPrice) { // Discount price
      priceModel.discountPrice = sku.offerPriceFmt;
      priceModel.isClearance = true;
      if (sku.priceFlag === '2' || sku.priceFlag === '7') {
        priceModel.clearanceText = ANF.messaging.catalogV2.TMNT.cardClearance.value;
      }
      priceModel.description = ANF.messaging.product.GLB_PRICE_DESC_IND_IND.replace('{0}', sku.listPriceFmt)
        .replace('{1}', sku.offerPriceFmt);
    }

    var klarnaPrice = priceModel.discountPrice || priceModel.price;

    if (hasMemberPrice(contractPrice, sku)) {
      klarnaPrice = contractPrice;
      priceModel.hasMemberPrice = true;
      priceModel.memberPriceDescription = contractPriceFmt;
      priceModel.memberPrice = contractPriceFmt;
    }

    $priceContainer.empty().html(productPartialPdpProductPrice.templates.pdp_productPrice(priceModel));
    $priceContainer.find(priceTextSelector).addClass('ds-override');
    if (klarna.hasKlarnaOnsiteMessaging()) {
      klarna.getMessagePlacement().done(function done(messagePlacement) {
        messagePlacement.reset().update(klarnaPrice);
      });
    }

    if (ANF.params.storeAttributes.checkout.hasPayOverTimeMessagingProduct) {
      window.dispatchEvent(new CustomEvent('payOverTime:refresh', {
        detail: {
          purchaseAmount: parseFloat(String(klarnaPrice).replace(/[^0-9\.]/, '')),
          page: 'product'
        }
      }));
    }
  }

  function hasMemberPrice(contractPrice, sku) {
    return coreConstants.anf('params.storeAttributes.loyalty.memberPricingEnabled') &&
    (contractPrice && contractPrice > 0) &&
    (contractPrice < sku.listPrice && contractPrice < sku.offerPrice);
  }

  function updateSwatchPrice(e, data) {
    if (typeof data === 'object' && typeof data.productId !== 'undefined') {
      var kicSkus = $(data.skuContainer).find(skuSelect).find('option[data-kic=' + data.kic + ']');

      if (kicSkus.length > 0) {
        var sku = data.productPrices[data.productId].items[kicSkus[0].value];

        setContractPricing(data.productPrices[data.productId]);

        if (sku) {
          updatePricetag(sku, $(data.productSection));
          reRenderGermanVAT(sku);
        }
      }
    }
  }

  function updateSkuPrice(e, data) {
    if ( typeof data === 'object' && typeof data.productId !== 'undefined' && typeof data.skuId !== 'undefined' ) {
      var sku = data.productPrices[data.productId].items[data.skuId];

      setContractPricing(data.productPrices[data.productId]);
      updatePricetag(sku, $(data.productSection));
      reRenderGermanVAT(sku);
    }
  }

  function setContractPricing(product) {
    if (product !== null && test.type.object(product)) {
      memberPricing.contractPrice = product.lowContractPrice ? product.lowContractPrice : 0;
      memberPricing.contractPriceFmt = product.lowContractPriceFmt ? product.lowContractPriceFmt : '';
    }
  }

  function isPromotionalPricing(sku) {
    if (!sku) {
      return false;
    }
    var contractPrice = memberPricing.contractPrice || 0;
    var priceFlag = sku.priceFlag;
    var hasDiscountPricing = (sku.listPrice !== sku.offerPrice);
    var hasMemberPricing = (contractPrice > 0 && contractPrice < sku.listPrice && contractPrice < sku.offerPrice);
    var hasPriceFlag = (priceFlag === '2' || priceFlag === '7');
    var hasPromoMessage = (sku.merchPromoMsgType && sku.merchPromoMsg);
    var result = (hasMemberPricing || hasDiscountPricing || hasPriceFlag || hasPromoMessage);
    return result;
  }

  function reRenderGermanVAT(sku) {
    var $vatContainer = $('.js-german-vat-container');
    if (!$vatContainer.length) return;

    var germanVatText = $vatContainer.data('vat-text') || '';
    $vatContainer.empty();

    var className = isPromotionalPricing(sku)
      ? 'product-price-german-tax-discounted'
      : 'product-price-german-tax';

    $vatContainer.html(
      '<div class="' + className + '" data-property="GERMAN_INCLUDE_TAX">' +
        germanVatText +
      '</div>'
    );
  }

  var publicMembers = {
    listen: function listen() {
      $(ANF).on('productPrice:swatchSelected', updateSwatchPrice);
      $(ANF).on('productPrice:skuSelected', updateSkuPrice);
    }
  };

  return publicMembers;
}
);

!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():'function' === typeof redesign.define && redesign.define.amd?redesign.define('anfDataBridge',[],e):"object"==typeof exports?exports.DataBridge=e():t.DataBridge=e()}(self,()=>(()=>{"use strict";var t={d:(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var e={};function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}t.d(e,{default:()=>St});var n=function(){return"undefined"!=typeof window?window:void 0!==t.g?t.g:Object.create(null)};function o(t){var e,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new WeakMap;if(null===t||"object"!==r(t))return t;if(i.has(t))return i.get(t);if(t instanceof Date)return e=new Date(t.getTime()),i.set(t,e),e;if(t instanceof RegExp)return e=new RegExp(t.source,t.flags),i.set(t,e),e;if(t instanceof Error)return e=new t.constructor(t.message),i.set(t,e),t.stack&&Object.defineProperty(e,"stack",{value:t.stack,writable:!0,configurable:!0}),void 0!==t.cause&&(e.cause=o(t.cause,i)),Object.getOwnPropertyNames(t).forEach(function(r){if("stack"!==r&&"message"!==r&&"cause"!==r)try{e[r]=o(t[r],i)}catch(t){}}),e;if(Array.isArray(t)){e=new Array(t.length),i.set(t,e);for(var u=0;u<t.length;u++)e[u]=o(t[u],i);return e}if(t instanceof Map)return e=new Map,i.set(t,e),t.forEach(function(t,r){e.set(o(r,i),o(t,i))}),e;if(t instanceof Set)return e=new Set,i.set(t,e),t.forEach(function(t){e.add(o(t,i))}),e;if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer)return e=t.slice(0),i.set(t,e),e;if("undefined"!=typeof ArrayBuffer&&t&&t.buffer instanceof ArrayBuffer){var a=t.constructor.name,s=n();if(/^(Int8Array|Uint8Array|Uint8ClampedArray|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array|BigInt64Array|BigUint64Array)$/.test(a)){var c=o(t.buffer,i);return"function"==typeof s[a]?(e=new s[a](c,t.byteOffset,t.length),i.set(t,e),e):(e=new Uint8Array(c,t.byteOffset,t.byteLength),i.set(t,e),e)}}if("undefined"!=typeof DataView&&t instanceof DataView){var f=o(t.buffer,i);return e=new DataView(f,t.byteOffset,t.byteLength),i.set(t,e),e}if("undefined"!=typeof CustomEvent&&t instanceof CustomEvent){var l=t.type,p=t.detail,y=t.bubbles,b=void 0!==y&&y,v=t.cancelable,h=void 0!==v&&v,d=t.composed,m={bubbles:b,cancelable:h,composed:void 0!==d&&d,detail:void 0!==p?o(p,i):void 0};try{return e=new CustomEvent(l,m),i.set(t,e),e}catch(e){var g=document.createEvent("CustomEvent");return g.initCustomEvent(l,b,h,m.detail),i.set(t,g),g}}if("undefined"!=typeof Event&&t instanceof Event&&!(t instanceof CustomEvent)){var w=t.type,S=t.bubbles,O=void 0!==S&&S,_=t.cancelable,A=void 0!==_&&_,j=t.composed,E=void 0!==j&&j;try{return e=new Event(w,{bubbles:O,cancelable:A,composed:E}),i.set(t,e),e}catch(e){var x=document.createEvent("Event");return x.initEvent(w,O,A),i.set(t,x),x}}if("undefined"!=typeof Blob&&t instanceof Blob)return e=t.slice(0,t.size,t.type),i.set(t,e),e;if("undefined"!=typeof File&&t instanceof File)try{return e=new File([t],t.name,{type:t.type,lastModified:t.lastModified}),i.set(t,e),e}catch(r){return(e=t.slice(0,t.size,t.type)).name=t.name,e.lastModified=t.lastModified,i.set(t,e),e}if("undefined"!=typeof URL&&t instanceof URL)return e=new URL(t.href),i.set(t,e),e;if("undefined"!=typeof URLSearchParams&&t instanceof URLSearchParams)return e=new URLSearchParams(t.toString()),i.set(t,e),e;if("undefined"!=typeof FormData&&t instanceof FormData)return e=new FormData,i.set(t,e),t.forEach(function(t,r){e.append(r,t)}),e;e=Object.create(Object.getPrototypeOf(t)),i.set(t,e);for(var P=Object.getOwnPropertyDescriptors(t),T=Object.keys(P),k={},C=0;C<T.length;C++){var I=T[C],M=P[I];void 0!==M.value&&(M.value=o(M.value,i)),k[I]=M}if(Object.defineProperties(e,k),"undefined"!=typeof Symbol)for(var U=Object.getOwnPropertySymbols(t),z=0;z<U.length;z++){var F=U[z],D=Object.getOwnPropertyDescriptor(t,F);void 0!==D.value&&(D.value=o(D.value,i)),Object.defineProperty(e,F,D)}return e}var i=n();function u(t){var e=new WeakMap,n=function t(n){if(null===n||"object"!==r(n))return n;if(e.has(n))return e.get(n);if("undefined"!=typeof CustomEvent&&n instanceof CustomEvent){var o={__isCustomEvent:!0,type:n.type,detail:n.detail?t(n.detail):void 0,bubbles:n.bubbles,cancelable:n.cancelable,composed:n.composed};return e.set(n,o),o}if(Array.isArray(n)){var i=[];e.set(n,i);for(var u=0;u<n.length;u++)i[u]=t(n[u]);return i}if(n instanceof Map){var a=new Map;return e.set(n,a),n.forEach(function(e,r){a.set(t(r),t(e))}),a}if(n instanceof Set){var s=new Set;return e.set(n,s),n.forEach(function(e){s.add(t(e))}),s}var c=Array.isArray(n)?[]:Object.create(Object.getPrototypeOf(n));return e.set(n,c),Object.getOwnPropertyNames(n).forEach(function(e){Object.prototype.hasOwnProperty.call(n,e)&&(c[e]=t(n[e]))}),c}(t);return structuredClone(n)}"function"!=typeof i.structuredClone&&(i.structuredClone=o);var a=function(t,e){return a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},a(t,e)};function s(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}function c(t){var e="function"==typeof Symbol&&Symbol.iterator,r=e&&t[e],n=0;if(r)return r.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function f(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),u=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)u.push(n.value)}catch(t){o={error:t}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return u}function l(t,e,r){if(r||2===arguments.length)for(var n,o=0,i=e.length;o<i;o++)!n&&o in e||(n||(n=Array.prototype.slice.call(e,0,o)),n[o]=e[o]);return t.concat(n||Array.prototype.slice.call(e))}function p(t){return"function"==typeof t}function y(t){var e=t(function(t){Error.call(t),t.stack=(new Error).stack});return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var b=y(function(t){return function(e){t(this),this.message=e?e.length+" errors occurred during unsubscription:\n"+e.map(function(t,e){return e+1+") "+t.toString()}).join("\n  "):"",this.name="UnsubscriptionError",this.errors=e}});function v(t,e){if(t){var r=t.indexOf(e);0<=r&&t.splice(r,1)}}var h=function(){function t(t){this.initialTeardown=t,this.closed=!1,this._parentage=null,this._finalizers=null}var e;return t.prototype.unsubscribe=function(){var t,e,r,n,o;if(!this.closed){this.closed=!0;var i=this._parentage;if(i)if(this._parentage=null,Array.isArray(i))try{for(var u=c(i),a=u.next();!a.done;a=u.next())a.value.remove(this)}catch(e){t={error:e}}finally{try{a&&!a.done&&(e=u.return)&&e.call(u)}finally{if(t)throw t.error}}else i.remove(this);var s=this.initialTeardown;if(p(s))try{s()}catch(t){o=t instanceof b?t.errors:[t]}var y=this._finalizers;if(y){this._finalizers=null;try{for(var v=c(y),h=v.next();!h.done;h=v.next()){var d=h.value;try{g(d)}catch(t){o=null!=o?o:[],t instanceof b?o=l(l([],f(o)),f(t.errors)):o.push(t)}}}catch(t){r={error:t}}finally{try{h&&!h.done&&(n=v.return)&&n.call(v)}finally{if(r)throw r.error}}}if(o)throw new b(o)}},t.prototype.add=function(e){var r;if(e&&e!==this)if(this.closed)g(e);else{if(e instanceof t){if(e.closed||e._hasParent(this))return;e._addParent(this)}(this._finalizers=null!==(r=this._finalizers)&&void 0!==r?r:[]).push(e)}},t.prototype._hasParent=function(t){var e=this._parentage;return e===t||Array.isArray(e)&&e.includes(t)},t.prototype._addParent=function(t){var e=this._parentage;this._parentage=Array.isArray(e)?(e.push(t),e):e?[e,t]:t},t.prototype._removeParent=function(t){var e=this._parentage;e===t?this._parentage=null:Array.isArray(e)&&v(e,t)},t.prototype.remove=function(e){var r=this._finalizers;r&&v(r,e),e instanceof t&&e._removeParent(this)},t.EMPTY=((e=new t).closed=!0,e),t}(),d=h.EMPTY;function m(t){return t instanceof h||t&&"closed"in t&&p(t.remove)&&p(t.add)&&p(t.unsubscribe)}function g(t){p(t)?t():t.unsubscribe()}var w=null,S=null,O=void 0,_=!1,A=!1,j={setTimeout:function(t,e){for(var r=[],n=2;n<arguments.length;n++)r[n-2]=arguments[n];var o=j.delegate;return(null==o?void 0:o.setTimeout)?o.setTimeout.apply(o,l([t,e],f(r))):setTimeout.apply(void 0,l([t,e],f(r)))},clearTimeout:function(t){var e=j.delegate;return((null==e?void 0:e.clearTimeout)||clearTimeout)(t)},delegate:void 0};function E(){}var x=P("C",void 0,void 0);function P(t,e,r){return{kind:t,value:e,error:r}}var T=null;function k(t){if(_){var e=!T;if(e&&(T={errorThrown:!1,error:null}),t(),e){var r=T,n=r.errorThrown,o=r.error;if(T=null,n)throw o}}else t()}var C=function(t){function e(e){var r=t.call(this)||this;return r.isStopped=!1,e?(r.destination=e,m(e)&&e.add(r)):r.destination=N,r}return s(e,t),e.create=function(t,e,r){return new z(t,e,r)},e.prototype.next=function(t){this.isStopped?D(function(t){return P("N",t,void 0)}(t),this):this._next(t)},e.prototype.error=function(t){this.isStopped?D(P("E",void 0,t),this):(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped?D(x,this):(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null)},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){try{this.destination.error(t)}finally{this.unsubscribe()}},e.prototype._complete=function(){try{this.destination.complete()}finally{this.unsubscribe()}},e}(h),I=Function.prototype.bind;function M(t,e){return I.call(t,e)}var U=function(){function t(t){this.partialObserver=t}return t.prototype.next=function(t){var e=this.partialObserver;if(e.next)try{e.next(t)}catch(t){F(t)}},t.prototype.error=function(t){var e=this.partialObserver;if(e.error)try{e.error(t)}catch(t){F(t)}else F(t)},t.prototype.complete=function(){var t=this.partialObserver;if(t.complete)try{t.complete()}catch(t){F(t)}},t}(),z=function(t){function e(e,r,n){var o,i,u=t.call(this)||this;return p(e)||!e?o={next:null!=e?e:void 0,error:null!=r?r:void 0,complete:null!=n?n:void 0}:u&&A?((i=Object.create(e)).unsubscribe=function(){return u.unsubscribe()},o={next:e.next&&M(e.next,i),error:e.error&&M(e.error,i),complete:e.complete&&M(e.complete,i)}):o=e,u.destination=new U(o),u}return s(e,t),e}(C);function F(t){var e;_?(e=t,_&&T&&(T.errorThrown=!0,T.error=e)):function(t){j.setTimeout(function(){if(!w)throw t;w(t)})}(t)}function D(t,e){var r=S;r&&j.setTimeout(function(){return r(t,e)})}var N={closed:!0,next:E,error:function(t){throw t},complete:E},B="function"==typeof Symbol&&Symbol.observable||"@@observable";function R(t){return t}var W=function(){function t(t){t&&(this._subscribe=t)}return t.prototype.lift=function(e){var r=new t;return r.source=this,r.operator=e,r},t.prototype.subscribe=function(t,e,r){var n,o=this,i=(n=t)&&n instanceof C||function(t){return t&&p(t.next)&&p(t.error)&&p(t.complete)}(n)&&m(n)?t:new z(t,e,r);return k(function(){var t=o,e=t.operator,r=t.source;i.add(e?e.call(i,r):r?o._subscribe(i):o._trySubscribe(i))}),i},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){t.error(e)}},t.prototype.forEach=function(t,e){var r=this;return new(e=L(e))(function(e,n){var o=new z({next:function(e){try{t(e)}catch(t){n(t),o.unsubscribe()}},error:n,complete:e});r.subscribe(o)})},t.prototype._subscribe=function(t){var e;return null===(e=this.source)||void 0===e?void 0:e.subscribe(t)},t.prototype[B]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return(0===(r=t).length?R:1===r.length?r[0]:function(t){return r.reduce(function(t,e){return e(t)},t)})(this);var r},t.prototype.toPromise=function(t){var e=this;return new(t=L(t))(function(t,r){var n;e.subscribe(function(t){return n=t},function(t){return r(t)},function(){return t(n)})})},t.create=function(e){return new t(e)},t}();function L(t){var e;return null!==(e=null!=t?t:O)&&void 0!==e?e:Promise}var V=y(function(t){return function(){t(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed"}}),$=function(t){function e(){var e=t.call(this)||this;return e.closed=!1,e.currentObservers=null,e.observers=[],e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return s(e,t),e.prototype.lift=function(t){var e=new Y(this,this);return e.operator=t,e},e.prototype._throwIfClosed=function(){if(this.closed)throw new V},e.prototype.next=function(t){var e=this;k(function(){var r,n;if(e._throwIfClosed(),!e.isStopped){e.currentObservers||(e.currentObservers=Array.from(e.observers));try{for(var o=c(e.currentObservers),i=o.next();!i.done;i=o.next())i.value.next(t)}catch(t){r={error:t}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}}})},e.prototype.error=function(t){var e=this;k(function(){if(e._throwIfClosed(),!e.isStopped){e.hasError=e.isStopped=!0,e.thrownError=t;for(var r=e.observers;r.length;)r.shift().error(t)}})},e.prototype.complete=function(){var t=this;k(function(){if(t._throwIfClosed(),!t.isStopped){t.isStopped=!0;for(var e=t.observers;e.length;)e.shift().complete()}})},e.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null},Object.defineProperty(e.prototype,"observed",{get:function(){var t;return(null===(t=this.observers)||void 0===t?void 0:t.length)>0},enumerable:!1,configurable:!0}),e.prototype._trySubscribe=function(e){return this._throwIfClosed(),t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){return this._throwIfClosed(),this._checkFinalizedStatuses(t),this._innerSubscribe(t)},e.prototype._innerSubscribe=function(t){var e=this,r=this,n=r.hasError,o=r.isStopped,i=r.observers;return n||o?d:(this.currentObservers=null,i.push(t),new h(function(){e.currentObservers=null,v(i,t)}))},e.prototype._checkFinalizedStatuses=function(t){var e=this,r=e.hasError,n=e.thrownError,o=e.isStopped;r?t.error(n):o&&t.complete()},e.prototype.asObservable=function(){var t=new W;return t.source=this,t},e.create=function(t,e){return new Y(t,e)},e}(W),Y=function(t){function e(e,r){var n=t.call(this)||this;return n.destination=e,n.source=r,n}return s(e,t),e.prototype.next=function(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.next)||void 0===r||r.call(e,t)},e.prototype.error=function(t){var e,r;null===(r=null===(e=this.destination)||void 0===e?void 0:e.error)||void 0===r||r.call(e,t)},e.prototype.complete=function(){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.complete)||void 0===e||e.call(t)},e.prototype._subscribe=function(t){var e,r;return null!==(r=null===(e=this.source)||void 0===e?void 0:e.subscribe(t))&&void 0!==r?r:d},e}($),G=function(t){function e(e){var r=t.call(this)||this;return r._value=e,r}return s(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(e){var r=t.prototype._subscribe.call(this,e);return!r.closed&&e.next(this._value),r},e.prototype.getValue=function(){var t=this,e=t.hasError,r=t.thrownError,n=t._value;if(e)throw r;return this._throwIfClosed(),n},e.prototype.next=function(e){t.prototype.next.call(this,this._value=e)},e}($),K={now:function(){return(K.delegate||Date).now()},delegate:void 0},X=function(t){function e(e,r,n){void 0===e&&(e=1/0),void 0===r&&(r=1/0),void 0===n&&(n=K);var o=t.call(this)||this;return o._bufferSize=e,o._windowTime=r,o._timestampProvider=n,o._buffer=[],o._infiniteTimeWindow=!0,o._infiniteTimeWindow=r===1/0,o._bufferSize=Math.max(1,e),o._windowTime=Math.max(1,r),o}return s(e,t),e.prototype.next=function(e){var r=this,n=r.isStopped,o=r._buffer,i=r._infiniteTimeWindow,u=r._timestampProvider,a=r._windowTime;n||(o.push(e),!i&&o.push(u.now()+a)),this._trimBuffer(),t.prototype.next.call(this,e)},e.prototype._subscribe=function(t){this._throwIfClosed(),this._trimBuffer();for(var e=this._innerSubscribe(t),r=this._infiniteTimeWindow,n=this._buffer.slice(),o=0;o<n.length&&!t.closed;o+=r?1:2)t.next(n[o]);return this._checkFinalizedStatuses(t),e},e.prototype._trimBuffer=function(){var t=this,e=t._bufferSize,r=t._timestampProvider,n=t._buffer,o=t._infiniteTimeWindow,i=(o?1:2)*e;if(e<1/0&&i<n.length&&n.splice(0,n.length-i),!o){for(var u=r.now(),a=0,s=1;s<n.length&&n[s]<=u;s+=2)a=s;a&&n.splice(0,a+1)}},e}($);function q(t){return function(e){if(function(t){return p(null==t?void 0:t.lift)}(e))return e.lift(function(e){try{return t(e,this)}catch(t){this.error(t)}});throw new TypeError("Unable to lift unknown Observable type")}}function H(t,e,r,n,o){return new J(t,e,r,n,o)}var J=function(t){function e(e,r,n,o,i,u){var a=t.call(this,e)||this;return a.onFinalize=i,a.shouldUnsubscribe=u,a._next=r?function(t){try{r(t)}catch(t){e.error(t)}}:t.prototype._next,a._error=o?function(t){try{o(t)}catch(t){e.error(t)}finally{this.unsubscribe()}}:t.prototype._error,a._complete=n?function(){try{n()}catch(t){e.error(t)}finally{this.unsubscribe()}}:t.prototype._complete,a}return s(e,t),e.prototype.unsubscribe=function(){var e;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var r=this.closed;t.prototype.unsubscribe.call(this),!r&&(null===(e=this.onFinalize)||void 0===e||e.call(this))}},e}(C);function Q(t,e){return t===e}function Z(t,e,r){if(null==t)return r;if(null==e)return r;if("string"==typeof e&&-1===e.indexOf(".")&&-1===e.indexOf("["))return void 0===t[e]?r:t[e];var n;if(Array.isArray(e))n=e;else try{n=e.toString().replace(/\[(\d+)\]/g,".$1").split(".")}catch(t){return r}for(var o=t,i=0;i<n.length;i++){var u=n[i];if(""!==u){if(null==o)return r;void 0!==(o=o[u])&&""===n[i+1]&&void 0!==o[""]&&(o=o[""],i++)}}return void 0===o?r:o}function tt(t){return tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},tt(t)}function et(t){if(null===t||"object"!==tt(t))return!1;var e=Object.getPrototypeOf(t);if(null===e)return!0;var r=Object.prototype.hasOwnProperty.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&Function.prototype.toString.call(r)===Function.prototype.toString.call(Object)}function rt(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function nt(t){return nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},nt(t)}function ot(t,e){if(t===e)return 0!==t||0!==e||1/t==1/e;if(null==t||null==e)return t===e;var r=nt(t),n=nt(e);if("number"===r&&"number"===n&&Number.isNaN(t)&&Number.isNaN(e))return!0;if("object"===r&&"object"!==n||"object"!==r&&"object"===n)return("string"===r||"number"===r||"boolean"===r)&&t==e||("string"===n||"number"===n||"boolean"===n)&&t==e;if("object"!==r||"object"!==n)return!1;if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;for(var o=0;o<t.length;o+=1){var i=o in t;if(i!==o in e)return!1;if(i&&!ot(t[o],e[o]))return!1}return!0}if(Array.isArray(t)||Array.isArray(e))return!1;if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(t instanceof RegExp&&e instanceof RegExp)return t.toString()===e.toString();if(t instanceof Map&&e instanceof Map)return t.size===e.size&&Array.from(t.entries()).every(function(t){var r,n,o=(n=2,function(t){if(Array.isArray(t))return t}(r=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,a=[],s=!0,c=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=i.call(r)).done)&&(a.push(n.value),a.length!==e);s=!0);}catch(t){c=!0,o=t}finally{try{if(!s&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(c)throw o}}return a}}(r,n)||function(t,e){if(t){if("string"==typeof t)return rt(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?rt(t,e):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],u=o[1];return e.has(i)&&ot(u,e.get(i))});if(t instanceof Set&&e instanceof Set){if(t.size!==e.size)return!1;var u=Array.from(t),a=Array.from(e);return u.every(function(t){return a.some(function(e){return ot(t,e)})})}if(t instanceof Error&&e instanceof Error)return t.name===e.name&&t.message===e.message;if("function"==typeof t.valueOf&&"function"==typeof e.valueOf){var s=t.valueOf(),c=e.valueOf();if(s!==t||c!==e)return ot(s,c)}if(et(t)&&et(e)){var f=Object.keys(t),l=Object.keys(e);return f.length===l.length&&f.every(function(r){return Object.prototype.hasOwnProperty.call(e,r)&&ot(t[r],e[r])})}if(t.constructor!==e.constructor)return!1;var p=Object.keys(t),y=Object.keys(e);return p.length===y.length&&p.every(function(r){return Object.prototype.hasOwnProperty.call(e,r)&&ot(t[r],e[r])})}function it(t){return it="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},it(t)}function ut(t){return function(t){if(Array.isArray(t))return at(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return at(t,e);var r={}.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?at(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function at(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}function st(t){return[].concat(ut(Object.keys(t)),ut(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))}function ct(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new WeakMap;if(null==t)return t;if("object"!==it(t))return t;if(r.has(t))return r.get(t);var n=Array.isArray(t)?[]:{};if(r.set(t,n),Array.isArray(t)){for(var o=0;o<t.length;o+=1)n[o]=ct(t[o],e,r);return n}return st(t).forEach(function(o){if(e){var i=e(void 0,t[o],o,n,t);if(void 0!==i)return void(n[o]=i)}n[o]=ct(t[o],e,r)}),n}function ft(t,e,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new WeakMap;return n.has(e)?n.get(e):(n.set(e,t),st(e).forEach(function(o){var i=e[o];if(void 0!==i)if(i!==e){if(r){var u=r(t[o],i,o,t,e);if(void 0!==u)return void(t[o]=u)}Array.isArray(i)?t[o]=ct(i,r,n):et(i)?et(t[o])?ft(t[o],i,r,n):t[o]=ct(i,r,n):t[o]=i}else t[o]=t}),t)}function lt(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];var o="function"==typeof r[r.length-1]?r.pop():void 0;return r.length?null==t?ct(r[0],o):(r.forEach(function(e){null!=e&&ft(t,e,o)}),t):t}function pt(t){return pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},pt(t)}function yt(t,e){Object.keys(t).forEach(function(r){e[r]=t[r]})}function bt(t,e,r){if(null==t)return t;if(null==e)return t;var n=t,o=Array.isArray(e)?e.slice():String(e);if("string"==typeof o&&(o=(o=o.replace(/\[(\w+)\]/g,".$1")).split(".")),1===o.length&&""===o[0])return n[""]=r,n;if(""===o[0]&&o.shift(),0===o.length)return n;if(1===o.length)return n[o[0]]=r,n;for(var i=n,u=o.length-1,a=0;a<u;a+=1){var s=o[a];if(""!==s){var c=o[a+1],f=!Number.isNaN(parseInt(c,10))&&Number.isFinite(Number(c))&&""!==c;if(void 0===i[s])i[s]=f?[]:{};else if(f&&!Array.isArray(i[s])){var l=i[s];i[s]=[],"object"===pt(l)&&null!==l?yt(l,i[s]):i[s][0]=l}else null!==i[s]&&"object"===pt(i[s])||(i[s]=f?[]:{});i=i[s]}else{if(a<u-1&&""===o[a+1])continue;void 0===i[""]&&(i[""]={}),i=i[""]}}return i[o[u]]=r,n}"function"!=typeof structuredClone&&(window.structuredClone=o);var vt=function(t,e,r){return function(n,o){return"function"==typeof e?e(n,o,r):function(e,r){return-1===t.findIndex(function(t){return!ot(Z(e,t),Z(r,t))})}(n,o)}};const ht=function(t,e,r,n,o){if(!(t instanceof W))throw new TypeError("Argument #1 must be an instance of Observable");var i,u,a,s,c=-1!==e.indexOf(" ")?e.split(" "):e;return Array.isArray(c)||(c=[c]),t.pipe((u=vt(structuredClone(c),null,{count:0}),void 0===a&&(a=R),u=null!=u?u:Q,q(function(t,e){var r,n=!0;t.subscribe(H(e,function(t){var o=a(t);!n&&u(r,o)||(n=!1,r=o,e.next(t))}))})),(s=structuredClone(c),i=function(t){return e=t,r={},s.forEach(function(t){var n=Z(e,t);bt(r,t,n)}),1===s.length?Z(r,s[0]):r;var e,r},q(function(t,e){var r=0;t.subscribe(H(e,function(t){e.next(i.call(undefined,t,r++))}))}))).subscribe(r,n,o)};function dt(t){return dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},dt(t)}function mt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,gt(n.key),n)}}function gt(t){var e=function(t){if("object"!=dt(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var r=e.call(t,"string");if("object"!=dt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==dt(e)?e:e+""}var wt=new WeakMap;const St=function(){return t=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.MAX_SAFE_INTEGER,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:6e4;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var o={};o.data=u(e),o.properties=new G(o.data),o.events=new X(r,n),wt.set(this,o)},e=[{key:"get",value:function(t,e){return Z(wt.get(this).data,t,e)}},{key:"set",value:function(t,e){var r=wt.get(this),n=u(r.data);return bt(n,t,e),r.data=n,r.properties.next(n),this}},{key:"merge",value:function(t,e){if(!et(e))throw new TypeError("Values must be a plain object. Use set or provide the full context for the property.");if("string"!=typeof t)throw new TypeError("Key must be a string.");var r=wt.get(this),n=u(r.data);return bt(n,t,lt({},Z(n,t),e)),r.data=n,r.properties.next(n),wt.set(this,r),this}},{key:"import",value:function(t){var e=wt.get(this),r=lt({},e.data,t);return e.data=r,e.properties.next(r),wt.set(this,e),this}},{key:"export",value:function(){return wt.get(this).data}},{key:"subscribe",value:function(t,e,r,n){var o,i=wt.get(this),u=!1,a=function(){if(!u){this.unsubscribe=function(){u||(u=!0,o&&"function"==typeof o.unsubscribe&&o.unsubscribe())};for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(this,r)}},s=(o=Array.isArray(t)&&-1!==t.findIndex(function(t){return-1!==t.indexOf("event")})||-1!==t.indexOf("event")?function(t,e,r,n,o){if(!(t instanceof W))throw new TypeError("Argument #1 must be an instance of Observable");var i=-1!==e.indexOf(" ")?e.split(" "):e;Array.isArray(i)||(i=[i]);var u,a=i.filter(function(t){return-1!==t.indexOf("event")});if(-1!==a.indexOf("event"))return t.subscribe(r,n,o);if(a.length!==i.length)throw new RangeError("All key must be welformed, one or more malformed keys was provided.");return a=a.map(function(t){return t.split(":").pop()}),t.pipe((u=function(t){return-1!==a.indexOf(t.key)},q(function(t,e){var r=0;t.subscribe(H(e,function(t){return u.call(void 0,t,r++)&&e.next(t)}))}))).subscribe(r,n,o)}(i.events,t,a,r,n):ht(i.properties,t,a,r,n)).unsubscribe;return o.unsubscribe=function(){return u=!0,s.call(this)},o}},{key:"trigger",value:function(t,e,r){var n={key:t,data:e,event:r};return wt.get(this).events.next(n),this}}],e&&mt(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();return e.default})());
//# sourceMappingURL=anf-databridge.umd.js.map;
redesign.define('coreServices/adapter/bags/items',[
  'api/Classes/Adapter',
  'api/Classes/AdapterError',
  'anfUtil/testFramework',
  'anfDataBridge'
], function items(APIAdapter, AdapterError, test, DataBridge)  {
  'use strict';

  var adapter = new APIAdapter();

  var errorMessages = {
    SHORT_SKU_REQUIRED: 'no shortSku was provided',
    ORDER_ITEM_ID_REQUIRED: 'no orderItemId was provided'
  };

  function pushBingUetqToWindow(aProductItemArr) {
    window.digitalData = window.digitalData || new DataBridge();
    window.uetq = window.uetq || [];
    var pageType = window.digitalData.get('page.pageKind');

    // TODO: clean up when tealium is incorporated on Picked For You page
    if (pageType === 'pickedForYou') {
      pageType = 'other';
    }

    window.uetq.push({
      'prodid': aProductItemArr[aProductItemArr.length - 1].shortSku,
      'pagetype': pageType === 'shopping cart' ? 'cart' : pageType
    });
  }

  /**
  * @property {object} CONSTANTS
  */
  adapter.CONSTANTS = {
  };

  /**
   * @name create
   * @description Function to sit in front of the api call so we can add some logic if we are going to make the call or not
   * @param {object} [settings] - the settings to be supplied to the function
   * @param {string} [settings.shortSku] - REQUIRED, the sku of the item to add to bag
   * @param {integer} [settings.quantity] - the quantity of provided sku user wants to add to bag, defaults to 1
   * @param {boolean} [settings.checkInventory] - should the API check if there is inventory for this sku, defaults to false
   * @return {promise} this is a jquery promise that will be resolved/rejected with an object containing reason code and a combination of ajaxData, ajaxJqXHR, ajaxTextStatus, and ajaxErrorThrown depending on the result of the ajax call
   */
  adapter.configCreate({
    endPoint: ANF.params.storeAttributes.apiURLRootBags + '/cart/items',
    method: 'POST',
    validation: function validation(data, context) {
      var hasSku = test.object.containsKey(data, 'shortSku', false);

      if (!hasSku || test.string.empty(data.shortSku, true)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.SHORT_SKU_REQUIRED);
      }
    },
    preAjax: function preAjax(data) {
      return JSON.stringify(data);
    },
    done: function done(data, textStatus, jqXHR) {
      /**
       * @this CRUD
       */
      var response;
      if (data.messages && data.messages.length > 0) {
        response = {
          data: {
            error: [
              {
                errorMessage: data.messages[0].message
              }
            ]
          }
        };

        this.deferred.reject(response);
      } else {
        pushBingUetqToWindow(data.items);
        response = this.getAjaxOkResponse(data, textStatus, jqXHR);
        this.deferred.resolve(response);
      }
    }
  });

  /**
   * @name update
   * @description Function to sit in front of the api call so we can add some logic if we are going to make the call or not
   * @param {object} [settings] - the settings to be supplied to the function
   * @param {string} [settings.shortSku] - REQUIRED, the sku of the item to add to bag
   * @param {string} [settings.orderItemId] - REQUIRED, the orderItemId that the user wants to update, will be used in the endpoint
   * @param {boolean} [settings.checkInventory] - should the API check if there is inventory for this sku
   * @return {promise} this is a jquery promise that will be resolved/rejected with an object containing reason code and a combination of ajaxData, ajaxJqXHR, ajaxTextStatus, and ajaxErrorThrown depending on the result of the ajax call
   */
  adapter.configUpdate({
    endPoint: ANF.params.storeAttributes.apiURLRootBags + '/cart/items/<orderItemId>',
    method: 'PUT',
    validation: function validation(data, context) {
      var hasSku = test.object.containsKey(data, 'shortSku', false);
      var hasOrderItemId = test.object.containsKey(data, 'orderItemId', false);

      if (!hasSku || test.string.empty(data.shortSku, true)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.SHORT_SKU_REQUIRED);
      }
      if (!hasOrderItemId || test.string.empty(data.orderItemId, true)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.ORDER_ITEM_ID_REQUIRED);
      }
    },
    preAjax: function preAjax(data) {
      return JSON.stringify(data);
    },
    done: function done(data, textStatus, jqXHR) {
      /**
       * @this CRUD
       */
      var response;
      if (data.messages && data.messages.length > 0) {
        response = {
          data: {
            error: [
              {
                errorMessage: data.messages[0].message
              }
            ]
          }
        };

        this.deferred.reject(response);
      } else {
        pushBingUetqToWindow(data.items);
        response = this.getAjaxOkResponse(data, textStatus, jqXHR);
        this.deferred.resolve(response);
      }
    }
  });

  Object.freeze(adapter.CONSTANTS);

  return adapter;
});

redesign.define('globalModulesHelpers/freeShippingProgress',[], function freeShippingProgress() {
  'use strict';

  var publicMembers = {
    'freeShippingMessageEnabled': ANF.params.storeAttributes.enableFreeShippingMessaging,
    'getFreeShippingMessageRange': function getFreeShippingMessageRange() {
      return ANF.params.storeAttributes.freeShippingMsgRange;
    },
    'getFreeShippingPreLabel': function getFreeShippingPreLabel(cartModel) {
      return cartModel.amountToFreeShipping > 0 ? this.getShippingThresholdFmtValue(cartModel.freeShippingThreshold.minShippingThresholdFmt) : '';
    },
    'getFreeShippingPostLabel': function getFreeShippingPostLabel(cartModel) {
      return cartModel.amountToFreeShipping > 0 ? this.getShippingThresholdFmtValue(cartModel.freeShippingThreshold.freeShippingThresholdFmt) : '';
    },
    'getShippingThresholdFmtValue': function getShippingThresholdFmt(value) {
      return (value !== null) ? value.slice(0, -3) : value;
    },
    'getFreeShippingProgressValue': function getFreeShippingProgressValue(amountToFreeShipping, freeShippingProgressMax) {
      return freeShippingProgressMax - amountToFreeShipping;
    },
    'shouldDisplayFreeShippingProgress': function shouldDisplayFreeShippingProgress(testGroup, amountToFreeShipping, freeShippingProgressMax) {
      var isValidAmountToFreeShipping = !isNaN(Number(amountToFreeShipping));
      if (freeShippingProgressMax !== null) {
        return this.freeShippingMessageEnabled && isValidAmountToFreeShipping && ((testGroup === 1 && amountToFreeShipping < publicMembers.getFreeShippingMessageRange()) || testGroup === 2);
      }
      return false;
    },
    'getDsModel': function getDsModel(cartModel, testGroup) {
      var freeShippingProgressMax = cartModel.freeShippingThreshold && cartModel.freeShippingThreshold.freeShippingThreshold;
      return {
        'isVisible': this.shouldDisplayFreeShippingProgress(testGroup, cartModel.amountToFreeShipping, freeShippingProgressMax),
        'amountToFreeShipping': cartModel.amountToFreeShipping,
        'amountToFreeShippingFmt': cartModel.amountToFreeShippingFmt,
        'preLabel': this.getFreeShippingPreLabel(cartModel),
        'postLabel': this.getFreeShippingPostLabel(cartModel),
        'value': this.getFreeShippingProgressValue(cartModel.amountToFreeShipping, freeShippingProgressMax),
        'max': freeShippingProgressMax
      };
    }
  };

  return publicMembers;
});


redesign.define('checkoutServices/common/redirect',[
  'coreServices/window'
], function redirect(windowService) {
  'use strict';

  var privateMembers = {
    'urlParams': {
      'storeId': ANF.params.storeAttributes.idList.storeId,
      'catalogId': ANF.params.storeAttributes.idList.catalogId,
      'langId': ANF.params.storeAttributes.idList.langId
    }
  };

  return {
    'buildRedirectURL': function buildRedirectURL(command, additionalParams) {
      var parameters = null;
      var queryString = null;
      var redirectUrl = null;
      var baseParameters = privateMembers.urlParams;
      var hasCommand = (typeof command === 'string' && command.length > 0) ? true : false;
      var hasAdditionalParameters = (typeof additionalParams === 'object' && additionalParams !== null) ? true : false;

      if (hasCommand) {
        if (hasAdditionalParameters) {
          parameters = $.extend({}, baseParameters, additionalParams);
        } else {
          parameters = baseParameters;
        }

        queryString = $.param(parameters);
        redirectUrl = command + '?' + queryString;
      } else {
        redirectUrl = '';
      }

      return redirectUrl;
    },
    'setRedirectLocation': windowService.location.set
  };
});

redesign.define('coreModules/checkout/utils',['checkoutServices/common/redirect'], function utils(redirectService) {
  'use strict';

  var publicMembers = {
    'getCheckoutURL': function getCheckoutURL() {
      var additionalParams = {
        'doInventory': 'N',
        'InvRepuCheckMode': 'checkout',
        'URL': 'OrderCheckoutDisplayView',
        'removeSoldOutIems': 'true',
        'errpage': 'OrderItemDisplayView',
        'checkoutMode': 'webCheckout'
      };
      return redirectService.buildRedirectURL('Checkout', additionalParams);
    },

    'buildCheckoutButton': function buildCheckoutButton() {
      var hasMiniBagCheckoutButton = ANF.params.storeAttributes.hasMiniBagCheckoutButton;
      var hasESWFeatureEnabled = ANF.params.storeAttributes.shoppingBagV2.hasESWFeatureEnabled;
      var showCheckoutButton = hasMiniBagCheckoutButton && !hasESWFeatureEnabled;
      var showCheckoutButtonClass = (showCheckoutButton) ? 'show' : '';
      return {
        'props': {
          'showCheckoutButton': showCheckoutButton,
          'showCheckoutButtonClass': showCheckoutButtonClass,
          'href': ANF.params.urls.checkout.checkoutUrl
        }
      };
    }
  };

  return publicMembers;
});

redesign.define('anfcore/components/progressBar', ['exports', '../helpers/makeSelector'], function (exports, _makeSelector) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _makeSelector2 = _interopRequireDefault(_makeSelector);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return Array.from(arr);
    }
  }

  // This is a wrapper around querySelectorAll
  var components = (0, _makeSelector2['default'])('.js-progress-bar');

  exports['default'] = function () {
    return {
      components: components,
      init: function () {
        function init() {
          [].concat(_toConsumableArray(components())).forEach(function (element) {
            var progressElement = element.querySelector('.js-progress-element');

            if (!progressElement) return;

            var value = progressElement.dataset.value;
            var max = progressElement.max;

            var animationInterval = setInterval(function () {
              if (progressElement.value < value) {
                progressElement.setAttribute('value', Math.ceil(progressElement.value + max / 100));
              } else {
                clearInterval(animationInterval);
              }
            }, 1);
          });
          return this;
        }

        return init;
      }()
    };
  };
});
redesign.define('coreServices/helpers/featureSwitch',[], function featureSwitch() {
  'use strict';

  var publicMembers = {

    checkFeatureSwitchAndSplitTest: function checkFeatureSwitchAndSplitTest(featureAndSplitTestKey, cb) {
      var deferredResult = new $.Deferred();
      var featureFlagKey = 'flag.' + featureAndSplitTestKey;
      var splitTestKey = 'test.' + featureAndSplitTestKey;
      if (window.digitalData.get(featureFlagKey, false ) || window.digitalData.get(splitTestKey, false)) {
        deferredResult.resolve(true);
      } else {
        var digitalDataSubscription = window.digitalData.subscribe(splitTestKey, function checkTestSegment(segment) {
          if (typeof segment !== 'undefined') {
            this.unsubscribe();
            deferredResult.resolve(segment);
          }
        });
        setTimeout(function setTimeout() {
          digitalDataSubscription.unsubscribe();
          deferredResult.resolve(false);
        }, 2000);
      }
      deferredResult.promise()
        .then(function checkSegment(isEnabled) {
          return cb(isEnabled);
        });
    },
    checkFeatureSwitchAndSplitTestValue: function checkFeatureSwitchAndSplitTestValue(featureAndSplitTestKey, cb) {
      var deferredResult = new $.Deferred();
      var featureFlagKey = 'flag.' + featureAndSplitTestKey;
      deferredResult.resolve(window.digitalData.get(featureFlagKey, null ));
      deferredResult.promise()
        .then(function checkSegment(value) {
          return cb(value);
        });
    },
    getLocationSearch: function getLocationSearch() {
      return window.location.search;
    },
    getDigitalDataFlagValue: function getDigitalDataFlagValue(key) {
      var storeAttributeFlags = window.digitalData && window.digitalData.export() && window.digitalData.export().flag;
      // The return value can be undefined if LD is not setup, so implementer needs to handle this.
      // supports comma separates like "?ldo=ful-123:1,ful-456:0,;purx-123:1"
      try {
        var locationSearch = this.getLocationSearch();
        if (locationSearch) {
          var modeField = locationSearch.match(/ldo=(([\w-0-9]+:[01],?)+)&?/);
          var modeFieldValue = (modeField && modeField[1]);
          if (modeFieldValue) {
            var modeFields = modeFieldValue.split(',');
            var overrides = modeFields.reduce(function reduceOverrides(accum, override) {
              if (!override) {
                return accum;
              }
              var parts = override.split(':');
              var data = {};
              data[parts[0]] = parseInt(parts[1], 10);
              return $.extend({}, accum, data);
            }, {});
            if (key in overrides) {
              return overrides[key];
            }
          }
        }
        if (JSON.parse(sessionStorage.getItem('debug_mode')) &&
          JSON.parse(sessionStorage.getItem(key)) !== null) {
          // returned overridden value from sessionStorage
          return JSON.parse(sessionStorage.getItem(key));
        }
      } catch (e) {
        // eslint-disable-next-line no-console
        console.error(e);
      }

      return storeAttributeFlags[key];
    }
  };
  return publicMembers;
});

redesign.define('productModules/helpers/productAddToBagHelper',[
  'coreServices/adapter/bags/items',
  'globalServices/startGuestSession',
  'anfcore/components/statefulButton',
  'coreServices/dataBridge/cart',
  'productServices/product/template',
  'productModules/helpers/Utils',
  'productServices/product/headerHeightCalculator',
  'globalModulesHelpers/freeShippingProgress',
  'coreModules/checkout/utils',
  'util/analytics/enum/dataPoint',
  'util/analytics/enum/subscriptionName',
  'anfcore/components/progressBar',
  'coreServices/helpers/featureSwitch'
], function productAddToBagHelper(
  bagsItemsApi,
  guestSession,
  statefulButtonComponent,
  cartDataBridgeService,
  templateService,
  Utils,
  headerHeightCalculator,
  freeShippingProgressHelper,
  checkoutUtils,
  analyticsDataPoints,
  analyticsSubscriptionNames,
  dsProgressBar,
  featureSwitchHelper
) {
  'use strict';
  var minATBProcessingTime = 1500;
  var atbButtonSelector = '.pdp-atb-button';
  var errorContainerSelector = '.validator-container';
  var sizePrimaryNameSelector = '.product-sizes__name__label_primary';
  var sizeSecondaryNameSelector = '.product-sizes__name__label_secondary';
  var messageBus = $(ANF);
  var hideMiniBagTimeout = ANF.params.storeAttributes.hideMiniBagTimeoutCounter;
  var testGroup = ANF.params.storeAttributes.checkout.freeShippingProgress;
  var sizePrimaryQv = 'size-primary_qv';
  var sizeSecondaryQv = 'size-secondary_qv';
  var sizePrimary = 'size-primary';
  var sizeSecondary = 'size-secondary';

  // have to bind utils here bc utils.getvalue uses 'this'
  var getInANF = Utils.getValueFromObject.bind(Utils, ANF);


  function addToBagTimeout() {
    var minProcessTimePromise = new $.Deferred();
    setTimeout(function waitMinProcessingTime() {
      minProcessTimePromise.resolve();
    }, minATBProcessingTime);
    return minProcessTimePromise;
  }

  function triggerAddToBagSuccessEvents(data) {
    var formData = data.formData;
    var cart = data.cart;
    var isEdit = data.isEdit;

    // mySaves needs this trigger to update icons on items that may have been saved that were added
    messageBus.trigger('productAddToBag:productAddedToBag', formData.productId);

    if (!isEdit) {
      var orEmptyObject = function orEmptyObjectFn(value) {
        return value || {};
      };

      var orEmptyArray = function orEmptyArrayFn(value) {
        return value || [];
      };

      var productDetail = orEmptyObject(
        orEmptyObject(
          productCatalog
        )[formData.productId]
      );

      var kicAdded = formData.kic_qv || formData.kic_tray || formData.kic;

      var matchedItem = orEmptyObject(
        orEmptyArray(orEmptyObject(cart).items)
          .filter(function filterNonMatching(item) {
            return (
              item.item
              && item.item.shortSku === formData.sku
            );
          }).pop()
      );

      var eventData = {};
      eventData[analyticsDataPoints.PRODUCT_COLLECTION] = formData.collection;
      eventData[analyticsDataPoints.QUANTITY] = formData.quantity;
      eventData[analyticsDataPoints.KEY_ITEM_COLOR] = kicAdded;
      eventData[analyticsDataPoints.PRICE_LIST_LOCAL] = matchedItem.item.listPrice;
      eventData[analyticsDataPoints.PRICE_LIST_USD] = matchedItem.item.listPriceUSD;
      eventData[analyticsDataPoints.PRICE_OFFER_LOCAL] = matchedItem.item.offerPrice;
      eventData[analyticsDataPoints.PRICE_OFFER_USD] = matchedItem.item.offerPriceUSD;
      eventData[analyticsDataPoints.PRODUCT_ID] = matchedItem.productId;
      eventData[analyticsDataPoints.SHORT_SKU] = matchedItem.item.shortSku;
      eventData[analyticsDataPoints.PRICE_FLAG] = productDetail.priceFlag;
      eventData[analyticsDataPoints.LONG_SKU] = matchedItem.item.longSku;
      eventData[analyticsDataPoints.PRODUCT_NAME] = matchedItem.productName;

      window.digitalData.trigger(analyticsSubscriptionNames.ACTION.ADD_TO_BAG, eventData);
    }

    try {
      cartDataBridgeService.add({
        kic: Utils.getProductData(formData.productId).kicId,
        shortSku: formData.sku,
        quantity: formData.quantity
      });
    } catch (err) {
      // EPIC-8729: looking at old ATB code, we apparently dont need to handle anything here on error
      // err.message
    }
  }

  function hideError($form) {
    $form.find(errorContainerSelector).fadeOut(100, 'linear');
  }

  function centerError($errorContainer) {
    var viewPortMiddle = $(window).height() / 2;
    var errorContainerTop = $errorContainer.offset().top;

    $('html,body').animate({
      scrollTop: errorContainerTop - viewPortMiddle
    });
  }

  function unselectedSizeErrorMsg(formData, $form) {
    var message = publicMembers.constants.selectSizeError;

    var primarySizeUnselected = !formData[sizePrimary] && !formData[sizePrimaryQv];
    var secondarySizeUnselected = !formData[sizeSecondary] && !formData[sizeSecondaryQv];

    var replaceParamWithText = function replaceParamWithText(text) {
      return publicMembers.constants.selectError.replace('{0}', text);
    };
    if (primarySizeUnselected && !secondarySizeUnselected) {
      message = replaceParamWithText($form.find(sizePrimaryNameSelector).text().split(':')[0]);
    } else if (!primarySizeUnselected && secondarySizeUnselected) {
      message = replaceParamWithText($form.find(sizeSecondaryNameSelector).text().split(':')[0]);
    }
    return message;
  }

  var publicMembers = {
    constants: {
      atbError: getInANF('messaging.catalogV2.PDP_ATB_ERROR', ''),
      guestSessionError: getInANF('messaging.catalogV2.GLB_GUEST_SESSION_ERROR', ''),
      selectSizeError: getInANF('messaging.catalogV2.selectSizeError', ''),
      selectError: getInANF('messaging.catalogV2.SELECT_KEY_SIZE', '')
    },

    handleMFEAddToBagSuccess: function handleMFEAddToBagSuccess(event) {
      var data = event.detail;
      var eventData = {};
      eventData[analyticsDataPoints.BRAND_VIEWING] = data.brandViewing;
      eventData[analyticsDataPoints.CART_UNITS_ADDED] = data.cartUnitsAdded;
      eventData[analyticsDataPoints.ORDER_SUBTOTAL] = data.orderSubtotal;
      eventData[analyticsDataPoints.ORDER_SUBTOTAL_USD] = data.orderSubtotal;
      eventData[analyticsDataPoints.COLLECTION_ID] = data.orderSubtotal;
      eventData[analyticsDataPoints.KEY_ITEM_COLOR] = data.orderSubtotal;
      eventData[analyticsDataPoints.LIST_PRICE] = data.orderSubtotal;
      eventData[analyticsDataPoints.LIST_PRICE_USD] = data.orderSubtotal;
      eventData[analyticsDataPoints.PAGE_TYPE] = data.orderSubtotal;
      eventData[analyticsDataPoints.PRICE_FLAG] = data.orderSubtotal;
      eventData[analyticsDataPoints.PRODUCT_LONG_SKU] = data.orderSubtotal;
      eventData[analyticsDataPoints.MERCHANDISING_CATEGORY_ID] = data.orderSubtotal;
      window.digitalData.trigger(analyticsSubscriptionNames.ACTION.ADD_TO_BAG, eventData);
    },

    addProductToBag: function addProductToBag($form, options) {
      var myOptions = options || {};

      hideError($form);
      var response = new $.Deferred();
      var formData = publicMembers.getSerializedFormData($form);
      var requestData = publicMembers.buildRequestData(formData, myOptions.orderItemId);
      var isEdit = !!myOptions.orderItemId;


      if (requestData.shortSku) {
        var $buttons = $form.find(atbButtonSelector);
        publicMembers.setATBButtonState($buttons, 'processing');
        guestSession.deferredInit().done(function guestSessionSuccess() {
          var minProcessTimePromise = addToBagTimeout();

          var cartItemsCall;
          if (!myOptions.orderItemId) {
            cartItemsCall = bagsItemsApi.create(requestData);
          } else {
            cartItemsCall = bagsItemsApi.update(requestData);
          }

          $.when(cartItemsCall, minProcessTimePromise)
            .done(function addToBagSuccess(responseData) {
              response.resolve(responseData);
              triggerAddToBagSuccessEvents({
                $form: $form,
                cart: responseData.data,
                formData: formData,
                isEdit: isEdit,
                src: myOptions.src
              });
            })
            .fail(function addToBagFail(error) {
              var errorMessage = publicMembers.constants.atbError;
              var hasAPIErrorMessage = error && error.data && error.data.error && error.data.error.length;

              if (hasAPIErrorMessage) {
                errorMessage = error.data.error[0].errorMessage;
              }

              response.reject(errorMessage);
            });
        }).fail(function guestSessionFail() {
          response.reject(publicMembers.constants.guestSessionError);
        });
      } else {
        response.reject(unselectedSizeErrorMsg(formData, $form));
      }

      return response.promise();
    },

    getSerializedFormData: function getSerializedFormData($form) {
      var formData = $form.serializeArray();
      formData = formData.reduce(function reduceFormDataArray(acc, item) {
        acc[item.name] = item.value;
        return acc;
      }, {});

      return formData;
    },

    buildRequestData: function buildRequestData(formData, orderItemId) {
      var data = {
        shortSku: formData.sku,
        checkInventory: false
      };

      if (orderItemId) {
        data.orderItemId = orderItemId;
      } else {
        data.quantity = parseInt(formData.quantity, 10);
      }

      return data;
    },

    hasQualifiedSku: function hasQualifiedSku($form) {
      return publicMembers.getSerializedFormData($form).sku;
    },

    setATBButtonState: function setATBButtonState($buttons, state) {
      $buttons.each(function setEachButtonState(index, button) {
        publicMembers.statefulButton.changeState({
          button: button,
          state: state
        });
      });
    },

    addToBagFail: function addToBagFail($form, errorMessage) {
      var $buttons = $form.find(atbButtonSelector);
      var errorHTML = templateService.renderTemplate('errorMessage', {
        'error-message-text': errorMessage
      });
      var $errorContainer = $form.find(errorContainerSelector);
      $errorContainer
        .html(errorHTML)
        .fadeIn(100, 'linear');

      if (ANF.breakpoints.screen === 'small_phone' || ANF.breakpoints.screen === 'phone') {
        centerError($errorContainer);
      }

      publicMembers.setATBButtonState($buttons, 'initial');

      $(window).trigger('analytics.errorTracking', {
        type: 'add to bag',
        message: errorMessage
      });
    },

    displayNotification: function displayNotification(cartModel) {
      var pasId = ANF.params.storeAttributes.pasId;
      var $atbNotification = $(templateService.renderTemplate('addToBagNotification', {
        cartUrl: ANF.params.urls.checkout.cartURL,
        freeShippingMessage: freeShippingProgressHelper.getDsModel(cartModel, testGroup),
        checkoutButton: checkoutUtils.buildCheckoutButton()
      }));
      var positionY = headerHeightCalculator.getCurrentHeaderHeight(pasId);

      $('body').prepend($atbNotification);
      $(window).one('dragup scroll', function hideNotification() {
        $atbNotification.remove();
      });
      $atbNotification
        .addClass('visible')
        .css('transform', 'translateY(' + positionY + 'px)');
      dsProgressBar.default().init();
      setTimeout(function successTimeout() {
        $atbNotification.remove();
      }, hideMiniBagTimeout);
    },

    handleMFEDisplayMobileNotification: function handleMFEDisplayMobileNotification(event) {
      var useMfeAddToBagNotification = featureSwitchHelper.getDigitalDataFlagValue('chk-use-mfe-add-to-bag-notification');
      if (!useMfeAddToBagNotification) {
        publicMembers.displayNotification(event.detail);
      }
    },

    statefulButton: statefulButtonComponent.default()
  };
  return publicMembers;
});

redesign.define('productModules/product/addToBag/pdpAddToBag',[
  'productModules/helpers/productAddToBagHelper',
  'util/analytics/enum/pageType'
], function pdpAddToBag(
  addToBagHelper,
  analyticsPageType
) {
  'use strict';

  var messageBus = $(ANF);
  var successStateTime = 3000;
  var pdpAddToBagButtonSelector = '.js-product-page .product-page__atb-saves-wrapper .pdp-atb-button';
  var addToBagFormSelector = '.product-page-add-to-bag__container';
  var atbButtonSelector = '.pdp-atb-button';
  var selectedSwatchSelector = '.product-swatches :checked';

  function bindEvents() {
    $(document).on('click', pdpAddToBagButtonSelector, addToBagHandler);
  }

  function listen() {
    messageBus.on('initiateAddToBag:sticky', stickyAddToBagHandler);
    window.addEventListener('mfe:addToBag:displayMobileNotification', addToBagHelper.handleMFEDisplayMobileNotification);
  }

  function addToBagHandler(e) {
    e.preventDefault();
    addToBag($(e.target).closest(addToBagFormSelector), 'analytics.addToBagInline');
  }

  function stickyAddToBagHandler(e, data) {
    addToBag(data.$form, 'analytics.addToBagSticky');
  }

  function addToBag($form, analyticsATBType) {
    addToBagHelper.addProductToBag($form, { src: analyticsPageType.PDP })
      .done(function success(data) {
        addToBagSuccess(data, $form, analyticsATBType);
      })
      .fail(function fail(errorMessage) {
        addToBagHelper.addToBagFail($form, errorMessage);
      });
  }

  function addToBagSuccess(data, $form, analyticsATBType) {
    var kicId = $form.find(selectedSwatchSelector).val();
    setButtonSuccess($form);
    if (ANF.breakpoints.screen === 'small_phone' ||
    ANF.breakpoints.screen === 'phone' ||
    ANF.breakpoints.screen === 'tablet' ||
    ANF.breakpoints.screen === 'small_desktop' ||
    ANF.breakpoints.screen === 'desktop') {
      addToBagHelper.displayNotification(data.data);
    }
    // this shows the minibag with item added
    messageBus.trigger('miniBag:productAddedToCart', data);

    $(ANF).trigger('styliticsV3Item:addToBag', {kicId: kicId});
    $(window).trigger('analytics.addToBagStandard'); // deprecated
    $(window).trigger(analyticsATBType);
  }

  function setButtonSuccess($form) {
    var $buttons = $form.find(atbButtonSelector);
    addToBagHelper.setATBButtonState($buttons, 'success');
    setTimeout(function successTimeout() {
      addToBagHelper.setATBButtonState($buttons, 'initial');
    }, successStateTime);
  }

  var publicMembers = {
    listen: listen,
    bindEvents: bindEvents
  };
  return publicMembers;
});

redesign.define('productModules/helpers/curry',[], function Curry() {
  'use strict';

  return function curry(fn, arity) {
    var ar = arity || fn.length;

    return (function nextCurried(prevArgs) {
      return function curried(nextArg) {
        var args = prevArgs.concat(nextArg);

        if (args.length >= ar) {
          return fn.apply(null, args);
        }

        return nextCurried(args);
      };
    })( [] );
  };
});

redesign.define('productModules/product/addToBag/quickviewAddToBag',[
  'productModules/helpers/Utils',
  'productModules/helpers/productAddToBagHelper',
  'productModules/helpers/curry',
  'anfcore/components/statefulButton',
  'anfcore/components/modal',
  'coreServices/window'
], function QuickviewAddToBag(
  Utils,
  addToBagHelper,
  curry,
  statefulButtonComponent,
  modalComponent,
  windowService
) {
  'use strict';

  var addToBagButtonSelector = '.pdp-atb-button';
  var qvAddToBagButtonSelector = '.js-quickview .pdp-atb-button';
  var addToBagFormSelector = '.product-page-add-to-bag__container';
  var editModalSelector = '.product-quickview__modal.edit-product';
  var checkoutCartSelector = '#checkout-cart';
  var quickviewModalId = 'product-quickview__modal';
  var quickviewProductInfoContainerSelectorClass = '.product-quickview__modal[data-open="true"] .product-page__info-container';
  var quickviewErrorClass = 'qv-error';
  var selectedSwatchSelector = '.product-swatches :checked';
  var styliticsModalClass = '.stylitics-quickview';

  var successStateTime = 1000;

  function addToBag(e) {
    e.preventDefault();
    var $form = $(e.currentTarget).closest(addToBagFormSelector);
    var isStylitics = $form.closest(styliticsModalClass).length;
    var orderItemId = $form.closest(editModalSelector).attr('data-orderitemid');
    var isEditItem = Boolean(orderItemId);
    var atbSuccess = curriedSuccess($form)(isEditItem)(isStylitics);
    var atbFail = curriedFail($form);
    addToBagHelper.addProductToBag($form, {orderItemId: orderItemId})
      .done(atbSuccess)
      .fail(atbFail);
  }

  var curriedSuccess = curry(addToBagSuccess);
  function addToBagSuccess($form, isEdit, isStylitics, data) {
    var button = $form.find(addToBagButtonSelector)[0];
    var isShoppingCart = $('body').is(checkoutCartSelector);
    var kicId = $form.find(selectedSwatchSelector).val();

    publicMembers.statefulButton.changeState({
      button: button,
      state: isEdit ? 'updateSuccess' : 'success'
    });

    setTimeout(function successTimeout() {
      publicMembers.modal.closeModal(quickviewModalId);
      if (isShoppingCart) {
        windowService.location.reload();
      }
      if (!isShoppingCart) {
        // this shows the minibag with item added
        var customEvent = new Event('miniBag:productAddedToCart');
        customEvent.detail = {
          data: data
        };
        window.dispatchEvent(customEvent);

        if (ANF.breakpoints.screen === 'small_phone' || ANF.breakpoints.screen === 'phone' || ANF.breakpoints.screen === 'tablet' || ANF.breakpoints.screen === 'small_desktop' || ANF.breakpoints.screen === 'desktop') {
          addToBagHelper.displayNotification(data.data);
        }
      }
    }, successStateTime);

    window.dispatchEvent(new CustomEvent('addToBag:perso-instrumentation', {
      detail: {
        kicId: kicId
      }
    }));

    if (isStylitics) {
      if (Utils.hasPDPMFEBelowTheFold()) {
        var QvFromStyliticsV3ATBEvent = new CustomEvent('styliticsV3Item:addToBagForMFE', {
          detail: {
            kicId: kicId
          }
        });
        window.dispatchEvent(QvFromStyliticsV3ATBEvent);
      } else {
        $(ANF).trigger('styliticsV3Item:addToBag', {kicId: kicId});
      }
    }
    $(window).trigger('analytics.addToBagStandard').trigger('analytics.addToBagInline');
  }

  var curriedFail = curry(addToBagFail);
  function addToBagFail($form, errorMessage) {
    $(quickviewProductInfoContainerSelectorClass).addClass(quickviewErrorClass);
    addToBagHelper.addToBagFail($form, errorMessage);
  }

  var publicMembers = {
    bindEvents: function bindEvents() {
      $(document).on('click', qvAddToBagButtonSelector, addToBag);
    },
    statefulButton: statefulButtonComponent.default(),
    modal: modalComponent.default()
  };

  return publicMembers;
});

redesign.define('productModules/helpers/hyperlinkShortDescriptorsSplitTest',[],
  function hyperlinkShortDescriptorsSplitTest() {
    'use strict';

    var list1 = {
      anf: {
        'Men\'s': {
          list: {
            'best dressed guest collection': '/shop/us/mens-best-dressed-guest-weddings-and-events',
            'a&f x trevor project': '/shop/us/pride',
            'gender inclusive': '/shop/us/lookbook-a-and-f-lookbook',
            'trend edit': '/shop/us/search?filtered=true&rows=90&searchTerm=Trend+Edit&start=0&departmentId=12202-ANF',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=Online+Exclusive&start=0&departmentId=12202-ANF',
            'matching set': '/shop/us/mens-coordinated-sets',
            'getaway shop': '#',
            'vol. 28': '#',
            'golf shop': '#',
            'for justice collection': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=For+Justice+Collection'
          }
        },
        'Women\'s': {
          list: {
            'best dressed guest collection': '/shop/us/womens-best-dressed-guest-weddings-and-events',
            'a&f x trevor project': '/shop/us/pride',
            'gender inclusive': '/shop/us/lookbook-a-and-f-lookbook',
            'trend edit': '/shop/us/search?filtered=true&rows=90&searchTerm=Trend+Edit&start=0&departmentId=12203-ANF',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=Online+Exclusive&start=0&departmentId=12203-ANF',
            'matching set': '/shop/us/womens-matching-sets-dresses-and-rompers',
            'getaway shop': '#',
            'vol. 28': '#',
            'premium footwear collection': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=premium+footwear+collection',
            'abercrombie x tia booth': '#',
            'for justice collection': '/shop/us/search?filtered=true&rows=90&searchTerm=For+Justice+Collection&start=0&departmentId=12203-ANF'
          }
        }
      },
      kids: {
        boys: {
          list: {
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=179205-KIDS',
            'matching set': '/shop/us/kids/boys-matching-sets',
            'the cool stuff': '/shop/us/search?filtered=true&rows=90&searchTerm=THE+COOL+STUFF&start=0&departmentId=179205-KIDS',
            'vol. 28': '#',
            'everybody collection': '/shop/us/kids/kids-everybody-collection'
          }
        },
        girls: {
          list: {
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=179206-KIDS',
            'matching set': '/shop/us/kids/girls-matching-sets',
            'the cool stuff': '/shop/us/search?filtered=true&rows=90&searchTerm=THE+COOL+STUFF&start=0&departmentId=179206-KIDS',
            'vol. 28': '#',
            'everybody collection': '/shop/us/kids/kids-everybody-collection'
          }
        }
      },
      hol: {
        'Men\'s': {
          list: {
            'pride collection': '/shop/us/pride-collection',
            'gender inclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=gender+inclusive&start=0&departmentId=12551-HOL',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=12551-HOL',
            'must-have collection': '/shop/us/mens-must-have-collection',
            'all day gameplay': '/shop/us/mens-all-day-gameplay',
            'part of a matching set': '/shop/us/search?departmentCategoryId=12551-HOL&searchTerm=part+of+a+matching+set'
          }
        },
        'Women\'s': {
          list: {
            'pride collection': '/shop/us/pride-collection',
            'gender inclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=gender+inclusive&start=0&departmentId=12552-HOL',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=12552-HOL',
            'all day gameplay': '/shop/us/mens-all-day-gameplay',
            'part of a matching set': '/shop/us/womens-matching-sets'
          }
        }
      },
      gh: {
        'Men\'s': {
          list: {
            'pride collection': '/shop/us/gilly-hicks/pride-collection',
            'gender inclusive': '/shop/us/gilly-hicks/unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014360-GH',
            'part of a matching set': '/shop/us/search?filtered=true&rows=90&searchTerm=part+of+a+matching+set&start=0&departmentId=65014360-GH'
          }
        },
        'Women\'s': {
          list: {
            'pride collection': '/shop/us/gilly-hicks/pride-collection',
            'gender inclusive': '/shop/us/gilly-hicks/unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014366-GH',
            'part of a matching set': '/shop/us/search?filtered=true&rows=90&searchTerm=part+of+a+matching+set&start=0&departmentId=65014366-GH'
          }
        }
      },
      st: {
        'men\'s': {
          list: {
            'gender inclusive': '/shop/us/social-tourist/shop-all-unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014738-ST'
          }
        },
        'women\'s': {
          list: {
            'gender inclusive': '/shop/us/social-tourist/shop-all-unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014738-ST'
          }
        }
      }
    };

    var list2 = {
      anf: {
        'Men\'s': {
          list: {
            'best dressed guest collection': '/shop/us/mens-best-dressed-guest-weddings-and-events',
            'a&f x trevor project': '/shop/us/pride',
            'gender inclusive': '/shop/us/lookbook-a-and-f-lookbook',
            'trend edit': '/shop/us/search?filtered=true&rows=90&searchTerm=Trend+Edit&start=0&departmentId=12202-ANF',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=Online+Exclusive&start=0&departmentId=12202-ANF',
            'matching set': '/shop/us/mens-coordinated-sets',
            'getaway shop': '#',
            'vol. 28': '#',
            'golf shop': '#',
            'for justice collection': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=For+Justice+Collection',
            '6 inch | 15 cm': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=6+inch',
            'a&f vintage stretch denim': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=A%26F+Vintage+Stretch+Denim',
            'a&f signature stretch denim': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=A%26F+Signature+Stretch+Denim',
            'a&f authentic rigid denim': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=Authentic+Rigid+Denim',
            'a&f basic stretch denim': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=basic+stretch+Denim',
            'a&f signature stretch twill': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=Signature+Stretch+Twill',
            '7 inch | 18 cm': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=7+inch',
            '9 inch | 23 cm': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=9+inch',
            '3 inch | 7 cm': '/shop/us/search?departmentCategoryId=12202-ANF&searchTerm=3+inch'
          }
        },
        'Women\'s': {
          list: {
            'best dressed guest collection': '/shop/us/womens-best-dressed-guest-weddings-and-events',
            'a&f x trevor project': '/shop/us/pride',
            'gender inclusive': '/shop/us/lookbook-a-and-f-lookbook',
            'trend edit': '/shop/us/search?filtered=true&rows=90&searchTerm=Trend+Edit&start=0&departmentId=12203-ANF',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=Online+Exclusive&start=0&departmentId=12203-ANF',
            'matching set': '/shop/us/womens-matching-sets-dresses-and-rompers',
            'getaway shop': '#',
            'vol. 28': '#',
            'premium footwear collection': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=premium+footwear+collection',
            'abercrombie x tia booth': '#',
            'for justice collection': '/shop/us/search?filtered=true&rows=90&searchTerm=For+Justice+Collection&start=0&departmentId=12203-ANF',
            'a&f all day comfort stretch denim': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=A%26F+All+Day+Comfort+Stretch+Denim',
            'a&f signature stretch denim': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=A%26F+Signature+Stretch+Denim',
            'a&f vintage stretch denim': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=A%26F+Vintage+Stretch+Denim',
            'authentic rigid denim': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=Authentic+Rigid+Denim',
            'hold-you-in stretch denim': '/shop/us/search?departmentCategoryId=12203-ANF&searchTerm=Hold-You-In+Stretch+Denim'
          }
        }
      },
      kids: {
        boys: {
          list: {
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=179205-KIDS',
            'matching set': '/shop/us/kids/boys-matching-sets',
            'the cool stuff': '/shop/us/search?filtered=true&rows=90&searchTerm=THE+COOL+STUFF&start=0&departmentId=179205-KIDS',
            'vol. 28': '#',
            'everybody collection': '/shop/us/kids/kids-everybody-collection'
          }
        },
        girls: {
          list: {
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=179206-KIDS',
            'matching set': '/shop/us/kids/girls-matching-sets',
            'the cool stuff': '/shop/us/search?filtered=true&rows=90&searchTerm=THE+COOL+STUFF&start=0&departmentId=179206-KIDS',
            'vol. 28': '#',
            'everybody collection': '/shop/us/kids/kids-everybody-collection'
          }
        }
      },
      hol: {
        'Men\'s': {
          list: {
            'pride collection': '/shop/us/pride-collection',
            'gender inclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=gender+inclusive&start=0&departmentId=12551-HOL',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=12551-HOL',
            'must-have collection': '/shop/us/mens-must-have-collection',
            'all day gameplay': '/shop/us/mens-all-day-gameplay',
            'part of a matching set': '/shop/us/search?departmentCategoryId=12551-HOL&searchTerm=part+of+a+matching+set'
          }
        },
        'Women\'s': {
          list: {
            'pride collection': '/shop/us/pride-collection',
            'gender inclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=gender+inclusive&start=0&departmentId=12552-HOL',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=12552-HOL',
            'all day gameplay': '/shop/us/mens-all-day-gameplay',
            'part of a matching set': '/shop/us/womens-matching-sets',
            'built in shorts': '#',
            'i have pockets': '#',
            'classic stretch': '#',
            'advanced stretch': '#',
            'soft stretch': '#'
          }
        }
      },
      gh: {
        'Men\'s': {
          list: {
            'pride collection': '/shop/us/gilly-hicks/pride-collection',
            'gender inclusive': '/shop/us/gilly-hicks/unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014360-GH',
            'part of a matching set': '/shop/us/search?filtered=true&rows=90&searchTerm=part+of+a+matching+set&start=0&departmentId=65014360-GH'
          }
        },
        'Women\'s': {
          list: {
            'pride collection': '/shop/us/gilly-hicks/pride-collection',
            'gender inclusive': '/shop/us/gilly-hicks/unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014366-GH',
            'part of a matching set': '/shop/us/search?filtered=true&rows=90&searchTerm=part+of+a+matching+set&start=0&departmentId=65014366-GH'
          }
        }
      },
      st: {
        'men\'s': {
          list: {
            'gender inclusive': '/shop/us/social-tourist/shop-all-unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014738-ST'
          }
        },
        'women\'s': {
          list: {
            'gender inclusive': '/shop/us/social-tourist/shop-all-unisex',
            'online exclusive': '/shop/us/search?filtered=true&rows=90&searchTerm=online+exclusive&start=0&departmentId=65014738-ST'
          }
        }
      }
    };

    var publicMembers = {
      computeWhiteList: function computeWhiteList(testSegment, brand, deptName) {
        var whitelist = null;
        switch (testSegment) {
          case 'B':
            whitelist = list1[brand] && list1[brand][deptName] && list1[brand][deptName].list;
            break;
          case 'C':
            whitelist = list2[brand] && list2[brand][deptName] && list2[brand][deptName].list;
            break;
          default:
            break;
        }
        return whitelist;
      }
    };

    return publicMembers;
  });



redesign.define('productModules/product/productNameAndDescription',[
  'productModules/helpers/Utils',
  'productModules/helpers/hyperlinkShortDescriptorsSplitTest'
], function ProductNameAndDescription(Utils, whitelistHelper) {
  'use strict';

  var productUniqueNameSelector = '.product-page-info__title .product-title-component';
  var productPromoSelector = '.product-price-v2__promo-info';
  var productShortDescSelector = '.short-description';

  var separator = ' | ';
  var messageBus = $(ANF);

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchSelected productPageInfo:swatchOnLoad', onSwatchSelected);
      messageBus.on('shortDescriptorTest:init', handleShortDescriptorSplitTestInit);
    }
  };

  function onSwatchSelected(e, $selectedSwatch, $productSection, productId) {
    var productData = Utils.getProductData(productId);
    var isLoyaltyRegion = ANF.params.storeAttributes.loyalty.enabled;
    var isProductBadgeEnabled = ANF.params.storeAttributes.catalogV2.hasProductBadgeEnabled;
    if (productData) {
      updateProductName($productSection, productData);
      updateMerchPromoMsg($productSection, productData);

      var isEarlyAccessProduct = Utils.productHasEarlyAccessIndicator(productId);
      if (isLoyaltyRegion && isEarlyAccessProduct && !isProductBadgeEnabled) {
        updateEarlyAccessDescription($productSection);
      } else {
        updateShortDescription($productSection, productData, window.digitalData.get('test.pdpHyperlinkDescriptor', 'A'));
      }
    }
  }

  function updateProductName($productSection, productData) {
    var newProductName = Utils.getValueFromObject(productData, 'name', '');
    var $productName = $productSection.find(productUniqueNameSelector);
    $productName.html(newProductName);
  }

  function updateMerchPromoMsg($productSection, productData) {
    var merchPromoMsg = Utils.getValueFromObject(productData, 'merchPromoMsg', '');
    // no need to further manipulate merchPromoMsg if it's blank
    var newMerchPromoMsg = merchPromoMsg === '' ? '' : '<span class="promo-badge">' + merchPromoMsg + '</span>';
    var $merchPromo = $productSection.find(productPromoSelector);
    // edge case: When there's no $merchPromo when load but there is a new merchPromoMsg on swatch click
    // we need to create and add $merchPromo on the DOM as last child of .product-price-v2
    if (!$merchPromo.length && !!newMerchPromoMsg) {
      $merchPromo = $(document.createElement('div'));
      $merchPromo.addClass('product-price-v2__promo-info product-price-v2__promo-info--bogo');
      $productSection.find('.product-price-v2').append($merchPromo);
    }

    $merchPromo.html(newMerchPromoMsg);
  }

  function updateEarlyAccessDescription($productSection) {
    var earlyAccessTMNT =  ANF.messaging.product.PDP_EARLY_ACCESS;
    var $productShortDesc = $productSection.find(productShortDescSelector);

    $productShortDesc.html(earlyAccessTMNT);
  }

  function handleShortDescriptorSplitTestInit(e, segment) {
    var $productSection = Utils.getProductSection();
    var productData = Utils.getProductData($productSection.data('productid'));
    updateShortDescription($productSection, productData, segment);
  }

  function updateShortDescription($productSection, productData, segment) {
    var shortDesc1 = Utils.getValueFromObject(productData, 'shortDesc1', '');
    var shortDesc2 = Utils.getValueFromObject(productData, 'shortDesc2', '');

    if (segment !== 'A') {
      var deptName = ANF.catalog.data.categoryHierarchyObj[1].enName;
      var productBrand = productData.productAttrs.brand;
      var descriptorWhitelist = whitelistHelper.computeWhiteList(segment, productBrand, deptName);
      var shortDesc1Link = descriptorWhitelist[shortDesc1.toLowerCase()];
      var shortDesc2Link = descriptorWhitelist[shortDesc2.toLowerCase()];
      shortDesc1 = shortDesc1Link ? '<a href=' + shortDesc1Link + '>' + shortDesc1 + '</a>' : null;
      shortDesc2 = shortDesc2Link ? '<a href=' + shortDesc2Link + '>' + shortDesc2 + '</a>' : null;
    }

    var shortDesc = $.grep([shortDesc1, shortDesc2], Boolean).join(separator);
    var $productShortDesc = $productSection.find(productShortDescSelector);
    $productShortDesc.html(shortDesc);
  }

  return publicMembers;
});

redesign.define('productModules/product/addToBag/productStickyAddToBag',[
  'productModules/helpers/productAddToBagHelper',
  'productModules/helpers/Utils',
  'globalServices/userState'
], function ProductStickyAddToBag(addToBagHelper, Utils, userStateService) {
  'use strict';

  var fadeSpeed = 100;
  var fadeEasing = 'linear';
  var addToBagButtonSelectorClass = '.product .product-page-add-to-bag__button';
  var addToBagFormContainerSelectorClass = '.product-page-add-to-bag__container';
  var stickyAddToBagContainerSelectorClass = '.product-page-sticky-add-to-bag__container';
  var quickviewActiveModalSelectorClass = '.product-quickview__modal[data-open="true"]';
  var stickySizeTileSelectorClass = '.product-page-sticky-size-tile__container';
  var stickySizeTrayOverlaySelectorClass = '.product-page-sticky-size-tile__overlay';
  var stickyOverlay = '<div class="product-page-sticky-size-tile__overlay"></div>';
  var stickyAddToBagButtonSelectorClass = '.product-page-sticky-add-to-bag__container .product-page-add-to-bag__button';
  var stickySizeTileInputsSelector = '.product-page-sticky-size-tile__container  .product-sizes .product-attrs__attr input';
  var sizeTileContainerSelectorClass = '.product-page__swatches-attributes';
  var attributeTrayWrapperSelectorClass = '.attribute-tray-wrapper';
  var attributeTrayCollapsedState = 'collapsed-state';
  var attributeTraySizeTileState = 'size-tile-state';
  var attributeTrayState = 'collapsed-state';
  var productSection = '.product-page-v2-modules';
  var memberAccessSelector = '.product .member-early-access-logged-out';
  var stickyMemberAccessSelectorClass = '.product-page-sticky-add-to-bag__container .member-early-access-logged-out';

  var messageBus = $(ANF);

  return function StickyAddToBagObserver(productIntersectionObserver) {
    function wireIntersectionObserver(productId) {
      var $addToBagButton = memberAccessFlagCheck(productId);
      var addToBagButtonObserver = new productIntersectionObserver.IntersectionObserver(
        function productIntersectionObserverCallback(entries) {
          for (var i = 0, len = entries.length; i < len; i++) {
            var atbButton = entries[i];
            // when boundingClientRect y is less than 0, it means button was scrolled off the top of the page,
            // only worry about intersect to hide/show sticky when the button is scrolled into/out of view at the bottom!
            if (ANF.breakpoints.screen === 'small_phone' || ANF.breakpoints.screen === 'phone') {
              handleIntersection(atbButton.isIntersecting);
            }
          }
        },
        {
          threshold: 1
        }
      );
      addToBagButtonObserver.observe($addToBagButton[0]);
    }

    function handleIntersection(isIntersecting) {
      var isCollapsedState = attributeTrayState === attributeTrayCollapsedState;
      if (isIntersecting) { // scrolling down, disable everything
        $(stickyAddToBagContainerSelectorClass).slideUp(200);
        publicMembers.toggleStickySizeTiles(false);
      } else if (!isIntersecting && !isCollapsedState) { // scrolling up and size tiles were active, show sticky tiles!
        publicMembers.toggleStickySizeTiles(true);
      } else { // scrolling up and size tiles weren't active, show sticky button
        $(stickyAddToBagContainerSelectorClass).slideDown(200);
      }
    }

    function memberAccessFlagCheck(productId) {
      var $addToBagButton = $(addToBagButtonSelectorClass);
      var earlyAccessFlag = Utils.productHasEarlyAccessIndicator(productId);
      if (earlyAccessFlag && !userStateService.isLoggedIn()) {
        $addToBagButton = $(memberAccessSelector);
      }
      return $addToBagButton;
    }

    var publicMembers = {
      'bindEvents': function bindEvents() {
        var $document = $(document);
        $document.on('click', stickyAddToBagButtonSelectorClass, publicMembers.handleStickyATBClick);
        $document.on('click', stickySizeTileInputsSelector, publicMembers.handleStickySizeTileSelection);
        $document.on('click', stickySizeTrayOverlaySelectorClass, publicMembers.closeAttributeTray);
      },
      listen: function listen() {
        messageBus.on('productPageInfo:load productPageInfo:swatchSelected', publicMembers.addToBagLoad);
      },
      'setupStickyAddToBagButton': function setupStickyAddToBagButton(productId) {
        var $addToBagButton = memberAccessFlagCheck(productId);
        var $stickyAddToBagButton = $addToBagButton.clone(true); // Copy the add to bag button and it's event listeners
        var $stickyAddToBagContainer = $(stickyAddToBagContainerSelectorClass); // Container that has padding

        if ($(stickyAddToBagButtonSelectorClass).length < 1 && $(stickyMemberAccessSelectorClass).length < 1 ) {
          // Inject our copied button into our container that has padding
          $stickyAddToBagContainer.append($stickyAddToBagButton);
          wireIntersectionObserver(productId);
        }
      },
      'toggleStickySizeTiles': function toggleStickySizeTiles(showStickySizeTiles) {
        var $stickySizeTileContainer = $(stickySizeTileSelectorClass);
        var $overlay = $(stickySizeTrayOverlaySelectorClass);

        if (showStickySizeTiles) {
          $stickySizeTileContainer.slideDown(200);
          $overlay.fadeIn(fadeSpeed, fadeEasing);
          publicMembers.setAttributeTrayState(attributeTrayState);
        } else {
          $stickySizeTileContainer.slideUp(200);
          $overlay.fadeOut(fadeSpeed, fadeEasing);
        }
      },
      'showSizeTileTray': function showSizeTileTray() {
        publicMembers.setAttributeTrayState(attributeTraySizeTileState);
        publicMembers.toggleStickySizeTiles(true);
      },
      'closeStickySizeTray': function closeStickySizeTray() {
        publicMembers.toggleStickySizeTiles(false);
        publicMembers.setAttributeTrayState(attributeTrayCollapsedState);
      },
      'addToBagLoad': function addToBagLoad() {
        // only setup sticky add to bag for new pdp phone view.
        if (!$(quickviewActiveModalSelectorClass).length && ANF.breakpoints && (ANF.breakpoints.screen === 'small_phone' || ANF.breakpoints.screen === 'phone') && !Utils.hasProductMFEEnabled()) {
          var $productSection = $(productSection);
          var productId = $productSection.data('productid');
          publicMembers.setupStickyAddToBagButton(productId);
          publicMembers.setupStickyAttributeTray();
        }
      },
      'setupStickyAttributeTray': function setupStickyAttributeTray() {
        // copy the html from the size group
        var $addToBagFormContainer = $(addToBagFormContainerSelectorClass);
        var $stickyAttributeTiles = $(sizeTileContainerSelectorClass).clone(true);
        var $attributeTrayWrapper = $(stickySizeTileSelectorClass).find(attributeTrayWrapperSelectorClass);

        /*
          * For a11y, input names & id's need to be completely unique.
          * After cloning the size & swatch tiles, we append `_tray` to
          * make the cloned inputs unique
          */
        function identifyTraySizes(_idx, attr) {
          return attr + '_tray';
        }

        $stickyAttributeTiles.find('input')
          .attr('id', identifyTraySizes)
          .attr('name', identifyTraySizes);

        $stickyAttributeTiles.find('label').attr('for', identifyTraySizes);

        if ($(stickySizeTileInputsSelector).length < 1) {
          $attributeTrayWrapper.append($stickyAttributeTiles);
          if (Utils.hasFinalSaleEnabled()) {
            var $finalSaleContainer = $('.final-sale-container').clone(true);
            $attributeTrayWrapper.find('.product-urgency-size-availability').after($finalSaleContainer);
          }
        }
        $addToBagFormContainer.append($(stickyOverlay));
      },
      'closeAttributeTray': function closeAttributeTray(e) {
        e.preventDefault();

        var $attributeTray = $(stickySizeTileSelectorClass);
        var $overlay = $(stickySizeTrayOverlaySelectorClass);

        $attributeTray.slideUp(200);
        publicMembers.setAttributeTrayState(attributeTrayCollapsedState);
        $(attributeTrayWrapperSelectorClass).animate({ scrollTop: 0 }, 'slow');

        $overlay.fadeOut(fadeSpeed, fadeEasing);
      },

      'setAttributeTrayState': function setAttributeTrayState(state) {
        var $attributeTray = $(stickySizeTileSelectorClass);

        $attributeTray
          .removeClass(attributeTrayCollapsedState)
          .removeClass(attributeTraySizeTileState)
          .addClass(state);

        attributeTrayState = state;
      },

      handleStickyATBClick: function handleStickyATBClick(e) {
        e.preventDefault();
        var $form = $(e.currentTarget).closest(addToBagFormContainerSelectorClass);
        if (addToBagHelper.hasQualifiedSku($form)) {
          messageBus.trigger('initiateAddToBag:sticky', {$form: $form});
        } else {
          publicMembers.showSizeTileTray();
        }
      },

      handleStickySizeTileSelection: function handleStickySizeTileSelection(e) {
        var $selectedTile = $(e.currentTarget).closest('.product-attrs__attr');
        if (!$selectedTile.hasClass('unavailable')) {
          var $form = $(e.currentTarget).closest(addToBagFormContainerSelectorClass);

          messageBus.trigger('stickySizeTileSelected', {$selectedTile: $selectedTile});

          if (addToBagHelper.hasQualifiedSku($form)) {
            messageBus.trigger('initiateAddToBag:sticky', {$form: $form});
            publicMembers.closeStickySizeTray();
          }
        }
      }
    };

    return publicMembers;
  };
});

redesign.define('productPartial/pdp_detailBadging',['handlebars','dsPartial/icon-block'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_detailBadging", this["ANF"]["templates"]["pdp_detailBadging"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    <li>\n"
    + ((stack1 = container.invokePartial(partials["icon-block"],depth0,{"name":"icon-block","hash":{"data-center-vertically":true,"data-icon-size":(depth0 != null ? depth0.size : depth0),"data-icon":(depth0 != null ? depth0.filename : depth0)},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "    </li>\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "            <span class=\"h3\">"
    + container.escapeExpression(container.lambda((depth0 != null ? depth0.text : depth0), depth0))
    + "</span>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<ul class=\"detail-badging-list split-list\">\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.badges : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "</ul>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/productDetailBadging',[
  'coreClass/ANFImage',
  'productModules/helpers/Utils',
  'productModules/helpers/imageLoadHelper',
  'productPartial/pdp_detailBadging',
  'anfUtil/testFramework'
], function ProductDetailBadging(
  ANFImage,
  Utils,
  imageLoadHelper,
  productPartialPdpDetailBadging,
  testFramework
) {
  'use strict';

  var messageBus = $(ANF);
  var BRAND = '';
  var BADGE_MAP = {};

  function addDetailBadgingBackground(productDataObject, $badgingContainer) {
    var imageUrl = ANFImage.instance()
      .setImageName(imageLoadHelper.getProd1ImageId(productDataObject.imageSets))
      .setWidth(800)
      .url;

    $badgingContainer.css('background-image', 'url(' + imageUrl + ')');
  }

  // TODO: Clean up paramter list to remove unused variables.EPIC-8683
  // using this funciton to condense the paramter list, getting us close to the EPIC-8683 Tech Debt
  function detailBadgingLoad(e, $selectedSwatch, $productSection, productId) {
    var productData = Utils.getProductData(productId);
    if (!Utils.isQuickviewOpened) {
      var badgingData = productData.productAttrsComplex.ProductBadgingCode;
      var tempDOM = '';
      var bigDetailObj = {badges: []};
      var $badgingContainer = $('.product-badging__container');

      // Current badging data for a single badge items is just a value and name without an identifier, so we must check for the values array first
      // This will be addressed in greater detail on the backend in EPIC-8685
      if (badgingData && badgingData.values) {
        badgingData.values.forEach(function createBadgeTemplateObject(badge) {
          var iconFileName = BADGE_MAP[badge.identifier];
          bigDetailObj.badges.push({
            'filename': iconFileName,
            'size': 50,
            'text': badge.value
          });
        });

        addDetailBadgingBackground(productData, $badgingContainer);
        tempDOM = productPartialPdpDetailBadging.templates.pdp_detailBadging(bigDetailObj);
        $productSection.find('.details-badge-list-wrapper').html(tempDOM);
        $badgingContainer.show();
      } else {
        $badgingContainer.hide();
        $badgingContainer.css('background-image', '');
      }
    }
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchOnLoad productPageInfo:swatchSelected mfe:SwatchSelected', detailBadgingLoad);
    },
    init: function init() {
      BRAND = testFramework.store.hol() ? 'hco' : 'anf';

      if ($('.product-page-v2-modules').hasClass('is-kids-product')) {
        BRAND = 'kids';
      }

      BADGE_MAP = {
        '100%RecycledFill': 'recycled-fill-hco',
        '2-WayZipper': 'two-way-zipper-anf',
        'TwoWayStretch': 'two-way-stretch-anf',
        '4-WayStretch': 'four-way-stretch-' + BRAND,
        'BuiltforOptimalWarmth': 'warm-hco',
        'Breathable': 'breathable-' + BRAND,
        'CozyLining': 'cozy-lining-' + BRAND,
        'CozyLinedPockets': 'cozy-lined-pockets-kids',
        'ConcealedPocket': 'concealed-pocket-anf',
        'ConcealedPhonePocket': 'concealed-phone-pocket-anf',
        'DownBlend': 'down-blend-hco',
        'DownFill': 'down-blend-hco',
        'DownInsulated': 'down-insulated-anf',
        'FleeceLinedPockets': 'fleece-lined-pockets-hco',
        'Insulated': 'insulated-anf',
        'InteriorPocket': 'interior-pocket-hco',
        'LightweightFabric': 'lightweight-fabric-anf',
        'LowImpactSupport': 'low-impact-support-gh',
        'MachineWashable': 'machine-washable-' + BRAND,
        'MediumImpactSupport': 'medium-impact-support-gh',
        'MemoryFoam': 'memory-foam-gh',
        'MoistureWicking': 'moisture-wicking-' + BRAND,
        'Packable': 'packable-anf',
        'PackableHood': 'packable-hood-hco',
        'PrimaloftInsulation': 'primaloft-insulation-anf',
        'RecycledFill': 'recycled-fill-hco',
        'RemovableFaux-FurTrim': 'removable-faux-fur-trim-' + BRAND,
        'RemovableHood': 'removable-hood-' + BRAND,
        'RemovableLiner': 'removable-liner-anf',
        'ResponsibleDownStandardCertified': 'responsible-down-standard-certified-hco',
        'Reversible': 'reversible-anf',
        'SeamSealed': 'seam-sealed-anf',
        'SoftTouchFabric': 'soft-touch-fabric-gh',
        'StretchFabric': 'stretch-fabric-' + BRAND,
        'SuperSoft': 'super-soft-anf',
        'VeganLeather': 'vegan-leather-anf',
        'WarmDownFill': 'warm-down-fill-hco',
        'WarmLikeDown': 'warm-hco',
        'WaterproofFabric': 'waterproof-fabric-anf',
        'WaterRepellent': 'water-repellent-anf',
        'WaterResistant': 'water-resistance-fabric-' + BRAND,
        'WaterResistantFabric': 'water-resistance-fabric-' + BRAND,
        'Wicking': 'wicking-anf',
        'WindproofFabric': 'windproof-fabric-anf',
        'WindResistant': 'wind-resistant-' + BRAND,
        'WindResistantFabric': 'wind-resistant-' + BRAND,
        'Wireless': 'wireless-gh',
        'WrinkleRelease': 'wrinkle-release-anf'
      };
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/buyGridAccordions/productDetailsAccordion',['productModules/helpers/Utils',
  'productServices/product/template',
  'coreServices/geo/helper'
], function ProductDetailsAccordion(Utils, templateService, GeoHelper) {
  'use strict';

  var messageBus = $(ANF);
  var hasNewLongDesc = ANF.params.storeAttributes.catalogV2.hasProductLongDescImportedCleanUP;

  function loadDetailsAccordion(e, $selectedSwatch, $productSection) {
    var productId = $productSection.data('productid');
    var $swatch = $selectedSwatch;
    var productData = Utils.getProductData(productId);
    var longDescriptionDetails = productData.longDesc.trim();

    if ($swatch.length === 0) {
      $swatch = $productSection.find('.product-swatches .selected');
    }

    var kicId = $swatch.find('input').val();
    if (/\bimported[.,!?]?$/.test(longDescriptionDetails.toLowerCase())) {
      longDescriptionDetails = longDescriptionDetails.substring(0, longDescriptionDetails.lastIndexOf(' ')); // Imported text always last word
    }
    var detailsData = {
      productName: $.parseHTML(productData.name)[0].wholeText,
      longDescription: hasNewLongDesc ? productData.longDesc : longDescriptionDetails,
      storeItemNumber: getStoreItemNumber($swatch, kicId),
      webItemNumber: getWebItemNumber(productData, kicId),
      isChinaSite: GeoHelper.isChinaSite(),
      imported: productData.imported
    };

    var accordionPanelContent = templateService.renderTemplate('detailsAccordion', detailsData);
    $productSection.find('.product-details__accordion .details-accordion__container').html(accordionPanelContent);
  }

  function getStoreItemNumber($selectedSwatch, kicId) {
    var $buyGrid = $selectedSwatch.parents('.product-page__info');
    var $firstMatchingOption = $buyGrid.find('.product-page__skus option[data-kic="' + kicId + '"]').first();
    var newLongSku = $firstMatchingOption.attr('data-long-sku');

    return newLongSku;
  }

  function getWebItemNumber(productData, kicId) {
    var newWebCollection = productData.collection;
    var newWebKIC = kicId;
    var newWebItem = newWebCollection;
    if (typeof newWebKIC !== 'undefined' && newWebKIC.indexOf('KIC_') >= 0) {
      newWebItem += '/' + newWebKIC.split('KIC_')[1];
    }

    return newWebItem;
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchOnLoad productPageInfo:swatchSelected', loadDetailsAccordion);
    }
  };

  return publicMembers;
});

redesign.define('productServices/product/productReviewService',[
], function ProductReviewService() {
  'use strict';

  var reviewsContent = ANF.messaging.catalogV2.REVIEWS;

  var publicMembers = {
    buildReviewSummaryModel: function buildReviewSummaryModel(data) {
      var bvProductId; // This is the BV product ID which correlates to our sku
      var fitPopularRecommendation = null;
      var fitTotalCount = 0;

      if (typeof data.Includes !== 'undefined' && typeof data.Includes.Products !== 'undefined') {
        for (var key in data.Includes.Products) { // Quickest way to identify the first property in the object is to start to traverse them and then jump out
          if (data.Includes.Products.hasOwnProperty(key)) {
            bvProductId = key; // This is the BV product ID which correlates to our sku
            break;
          }
        }
      }

      if (data.TotalResults > 0 && typeof data.Includes.Products !== 'undefined' && typeof data.Includes.Products[bvProductId] !== 'undefined' && typeof data.Includes.Products[bvProductId].ReviewStatistics !== 'undefined') {
        var secondaryRatingsAverages = data.Includes.Products[bvProductId].ReviewStatistics.SecondaryRatingsAverages;
        if (typeof secondaryRatingsAverages !== 'undefined' &&  (secondaryRatingsAverages.Fit_22 && typeof secondaryRatingsAverages.Fit_22.AverageRating !== 'undefined')) {
          fitPopularRecommendation = Math.round(secondaryRatingsAverages.Fit_22.AverageRating);
          fitTotalCount = data.Includes.Products[bvProductId].ReviewStatistics.TotalReviewCount;
          data.showFitRecommendation = true;
        }

        if (fitTotalCount < 4) {
          data.showFitRecommendation = false;
        }

        switch (fitPopularRecommendation) {
          case 1:
            data.fitRecommendation = reviewsContent.GLB_FIT_SMALL_TITLE_DESCRIPTION;
            break;
          case 2:
            data.fitRecommendation = reviewsContent.GLB_FIT_SOMEWHAT_SMALL_TITLE_DESCRIPTION;
            break;
          case 3:
            data.fitRecommendation = reviewsContent.GLB_FIT_TRUE_TITLE_DESCRIPTION;
            break;
          case 4:
            data.fitRecommendation = reviewsContent.GLB_FIT_SOMEWHAT_LARGE_TITLE_DESCRIPTION;
            break;
          case 5:
            data.fitRecommendation = reviewsContent.GLB_FIT_LARGE_TITLE_DESCRIPTION;
            break;
          default:
            break;
        }
      }

      return data;
    }
  };

  return publicMembers;
});

redesign.define('productModules/helpers/garmentMeasurements',['productModules/helpers/Utils'], function GarmentMeasurements(Utils) {
  'use strict';

  var savedMeasurementObj = {};

  function buildMeasurements(keys, tmnts, isEyeware, attrs, valueKey, labelKey) {
    return keys.reduce(function buildMeasurementReducer(arr, key) {
      if (attrs.hasOwnProperty(key)) {
        var tooltip = isEyeware ? tmnts.MEASUREMENTS_ACCORDION.MEASUREMENTS_TOOLTIPS : tmnts.GARMENT_MEASUREMENT_LABELS.GARMENT_TOOLTIPS;
        var label = isEyeware ? tmnts.MEASUREMENTS_ACCORDION.MEASUREMENTS_LABELS : tmnts.GARMENT_MEASUREMENT_LABELS.GARMENT_LABELS;

        var obj = {
          tooltip: false,
          tooltipId: key,
          tooltipHeader: tooltip[key].HEADER,
          tooltipBody: tooltip[key].BODY
        };
        obj[labelKey] = label[key];
        obj[valueKey] = attrs[key];
        arr.push(obj);
      }
      return arr;
    }, []);
  }

  var publicMembers = {
    getGarmentMeasurementData: function getGarmentMeasurementData(productId, anfObject, $productSection) {
      var productAttrsData = Utils.getProductData(productId).productAttrs;

      if (Utils.isKidsProduct($productSection)) {
        return { baseSize: productAttrsData.BaseMeasurementSize, measurements: [] };
      }

      if (!savedMeasurementObj[productId]) {
        var keys = [
          'BaseSleeveLengthMeasurement',
          'BaseShoulderToHemMeasurement',
          'BaseInseamX-ShortMeasurement',
          'BaseInseamShortMeasurement',
          'BaseInseamRegularMeasurement',
          'BaseInseamLongMeasurement',
          'BaseFrontRiseMeasurement',
          'BaseLegOpeningCircumferenceMeasurement',
          'BaseSkirtLengthMeasurement'
        ];

        savedMeasurementObj[productId] = {
          baseSize: productAttrsData.BaseMeasurementSize,
          measurements: buildMeasurements(
            keys,
            anfObject.messaging.product,
            false,
            productAttrsData,
            'garmentValue',
            'garmentLabel'
          )
        };
      }
      return savedMeasurementObj[productId];
    },

    getEyewearMeasurementData: function getEyewearMeasurementData(productId, anfObject) {
      var productAttrsMeasurementData = Utils.getProductData(productId).productAttrs;

      if (!savedMeasurementObj[productId]) {
        var keys = [
          'EyewearDimensionLensWidth',
          'EyewearDimensionBridgeWidth',
          'EyewearDimensionArmLength'
        ];
        savedMeasurementObj[productId] = {
          isEyeware: true,
          measurements: buildMeasurements(
            keys,
            anfObject.messaging.product,
            true,
            productAttrsMeasurementData,
            'lensMeasurementsValue',
            'lensMeasurementsLabel'
          )
        };
      }
      return savedMeasurementObj[productId];
    }
  };

  return publicMembers;
});

redesign.define('productPartial/pdp_modelSpecs',['handlebars','wcsHelper/i18n'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_modelSpecs", this["ANF"]["templates"]["pdp_modelSpecs"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=container.escapeExpression, alias3=container.lambda;

  return "<p class=\"size-guide-fit-model-specs\">\n    "
    + alias2(helpers.i18n.call(alias1,"product.PDP_TEXT_MODEL_SPECS_LABEL",{"name":"i18n","hash":{},"data":data}))
    + ": <span class=\"model-specs__height-measurement\">"
    + ((stack1 = alias3((depth0 != null ? depth0.modelHeight : depth0), depth0)) != null ? stack1 : "")
    + "</span> <span class='lowercase'>"
    + alias2(helpers.i18n.call(alias1,"product.GLB_WEARINGSIZE",{"name":"i18n","hash":{},"data":data}))
    + "</span> <span class=\"model-specs__size-measurement\">"
    + alias2(alias3((depth0 != null ? depth0.modelSize : depth0), depth0))
    + "</span>\n</p>\n";
},"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_sizeFitAccordionContent',['handlebars','wcsHelper/i18n','productPartial/pdp_modelSpecs','productPartial/pdp_garmentMeasurements'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_sizeFitAccordionContent", this["ANF"]["templates"]["pdp_sizeFitAccordionContent"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return "\n  <div class=\"hr above-fit-information\"></div>\n\n  <h4 class=\"h4\">"
    + container.escapeExpression(helpers.i18n.call(alias1,"product.FIT_INFORMATION",{"name":"i18n","hash":{},"data":data}))
    + "</h4>\n  <div class=\"fit-information\">\n    <ul>\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasFitRecommendation : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.fitType : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.style : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.bottomRiseCode : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.bottomLengthCode : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasModelSpecs : depth0),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "    </ul>\n  </div>\n\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.compareFitLinkEspot : depth0),{"name":"if","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "        <li>\n          <p class=\"size-fit-reviewer-recommendation\">\n            "
    + ((stack1 = container.lambda((depth0 != null ? depth0.contextualFitFullTMNT : depth0), depth0)) != null ? stack1 : "")
    + "\n          </p>\n        </li>\n";
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <li>"
    + alias2(alias1((depth0 != null ? depth0.fitHeaderTMNT : depth0), depth0))
    + ": "
    + alias2(alias1((depth0 != null ? depth0.fitDescription : depth0), depth0))
    + "</li>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <li>"
    + alias2(alias1((depth0 != null ? depth0.style : depth0), depth0))
    + ": "
    + alias2(alias1((depth0 != null ? depth0.styleDescription : depth0), depth0))
    + "</li>\n";
},"8":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <li>"
    + alias2(alias1((depth0 != null ? depth0.riseTMNT : depth0), depth0))
    + ": "
    + alias2(alias1((depth0 != null ? depth0.bottomRiseCode : depth0), depth0))
    + "</li>\n";
},"10":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "        <li>"
    + alias2(alias1((depth0 != null ? depth0.lengthTMNT : depth0), depth0))
    + ": "
    + alias2(alias1((depth0 != null ? depth0.bottomLengthCode : depth0), depth0))
    + "</li>\n";
},"12":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "        <li>\n"
    + ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.modelSpecs : depth0),{"name":"with","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        </li>\n";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "            <div class=\"model-specs-container\">\n              "
    + ((stack1 = container.invokePartial(partials.pdp_modelSpecs,depth0,{"name":"pdp_modelSpecs","fn":container.program(14, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n            </div>\n";
},"14":function(container,depth0,helpers,partials,data) {
    return "";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "    "
    + ((stack1 = container.lambda((depth0 != null ? depth0.compareFitLinkEspot : depth0), depth0)) != null ? stack1 : "")
    + "\n";
},"18":function(container,depth0,helpers,partials,data) {
    return "  <div class=\"hr below-fit-information\"></div>\n";
},"20":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "  <div class=\"garment-measurements\">\n"
    + ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.garmentData : depth0),{"name":"with","hash":{},"fn":container.program(21, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "  </div>\n";
},"21":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "      "
    + ((stack1 = container.invokePartial(partials.pdp_garmentMeasurements,depth0,{"name":"pdp_garmentMeasurements","fn":container.program(14, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=depth0 != null ? depth0 : (container.nullContext || {});

  return ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasFitInfo : depth0),{"name":"if","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.displayHR : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias1,(depth0 != null ? depth0.hasGarmentMeasurements : depth0),{"name":"if","hash":{},"fn":container.program(20, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productPartial/pdp_fitRecommendation',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_fitRecommendation", this["ANF"]["templates"]["pdp_fitRecommendation"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<p class=\"size-fit-reviewer-recommendation\">\n  "
    + ((stack1 = container.lambda((depth0 != null ? depth0.contextualFitFullTMNT : depth0), depth0)) != null ? stack1 : "")
    + "\n</p>\n";
},"useData":true}));

return this["ANF"];

});
redesign.define('globalServices/marketing/eSpotContentProvider',[],function () {
  'use strict';

  /**
	 * @description ESpot content API proxy service.
	 * @exports globalServices/marketing/eSpotContentProvider
	 * @see {@link https://ecom106.abercrombie.com/apidocs/#!/Marketing/getESpot}
	 */
  var publicMembers = {
    /**
		 * @description A name/value object used by jQuery to represent a query string parameter.
		 * @typedef {Object} NameValue
		 * @property {string} name - The parameter name.
		 * @property {*} value - The parameter value.
		 */

    /**
		 * @description The normalized Espot content settings object used throughout this service.
		 * @typedef {Object} NormalizedSettings
		 * @property {NameValue[]} parameters - An array of name/value objects that will be passed to the API.
		 */

    /**
		 * @description The URL for the `getESpot` API endpoint. Note: The ending forward slash ("/") is required.
		 * @type {string}
		 */
    'apiUrl': ANF.params.storeAttributes.apiURLRoot + '/content/marketing/',

    /**
		 * @description Get eSpot content.
		 * @param {string[]} eSpotNames - An array of eSpot names to retrieve.
     * @param {object[]} settings - An array of objects containing additional parameters
		 * @throws {Error} If passed an invalid argument.
		 * @return {Promise} A jQuery Promise implementation.
		 */
    'fetch': function (eSpotNames, settings) {
      if (Array.isArray(eSpotNames) && eSpotNames.length === 0) {
        return this.getEmptyArrayPromise();
      }

      var normalizedSettings = this.normalizeSettings(eSpotNames, settings);

      if (!this.validateSettings(normalizedSettings)) {
        throw new Error('An invalid argument was supplied');
      }

      var queryString = normalizedSettings.parameters.map(function (parameter) {
        return parameter.name + '=' + encodeURIComponent(parameter.value);
      }).join('&');

      // The `name[]` parameter is not being URL decoded by the server so
      // we are using a manually generating a query string instead of
      // using the built in jQuery functionality.
      return $.getJSON(this.apiUrl + '?' + queryString).promise();
    },

    /**
		 * @description Get a Promise which resolves with an empty array for use in implementing the null object pattern.
		 * @return {Promise} A jQuery Promise implementation.
		 */
    'getEmptyArrayPromise': function () {
      return $.Deferred().resolve([]).promise();
    },

    /**
		 * @description A callback function to be used with `Array.prototype.reduce` to validate an array of settings parameters.
		 * @param {*} previousValue - This argument is currently unused.
		 * @param {*} currentValue - The item to be verified as a name/value object.
		 * @return {boolean} A Boolean indicating whether the current reduction is valid.
		 */
    'isValidParametersReduction': function (previousValue, currentValue) {
      return $.isPlainObject(currentValue) &&
				currentValue.hasOwnProperty('name') &&
				typeof currentValue.name === 'string' &&
				currentValue.hasOwnProperty('value');
    },

    /**
		 * @description Normalize the settings passed into the service.
		 * @param {string[]} eSpotNames - An array of Espot names to normalize.
     * @param {object[]} settings - An array of objects containing additional parameters
		 * @return {NormalizedSettings} The normalized settings object.
		 */
    'normalizeSettings': function (eSpotNames, settings) {
      var normalizedSettings = {'parameters': []};

      if (!Array.isArray(eSpotNames)) {
        return normalizedSettings;
      }

      eSpotNames.forEach(function (name) {
        normalizedSettings.parameters.push({
          'name': 'name',
          'value': name
        });
      });

      if (Array.isArray(settings)) {
        settings.forEach(function (addlParam) {
          normalizedSettings.parameters.push({
            'name': addlParam.key,
            'value': addlParam.value
          });
        });
      }

      return normalizedSettings;
    },

    /**
		 * @description Validate a normalized settings object.
		 * @param {NormalizedSettings} settings - A normalized settings object.
		 * @return {boolean} A Boolean indicating whether the provided settings are valid or not.
		 */
    'validateSettings': function (settings) {
      if (!$.isPlainObject(settings)) {
        return false;
      }

      if (!Array.isArray(settings.parameters) || settings.parameters.length === 0) {
        return false;
      }

      if (!settings.parameters.reduce(this.isValidParametersReduction, false)) {
        return false;
      }

      return true;
    }
  };

  return publicMembers;
});

redesign.define('api/adobeExperienceManager/dataSource',[
  'api/Classes/Adapter',
  'api/Classes/AdapterError',
  'anfUtil/testFramework',
  'anfUtil/constants'
], function aemContentAPIAdapter(APIAdapter, AdapterError, test, coreConstants)  {
  'use strict';

  var adapter = new APIAdapter();

  /**
   * @property {object} CONSTANTS
   * @property {object} CONSTANTS.BRAND
   * @property {string} CONSTANTS.BRAND.ANF anf
   * @property {string} CONSTANTS.BRAND.HOL hol
   * @property {string} CONSTANTS.BRAND.KIDS kids
   * @property {object} CONSTANTS.MATCH_CRITERIA
   * @property {string} CONSTANTS.MATCH_CRITERIA.DEFAULT default_home_page
   */
  adapter.CONSTANTS = {
    SWITCH_MODES: {
      OFF: 'OFF',
      AEM: 'AEM',
      AEM_JSP: 'AEM_JSP'
    },
    ESPOT_SWITCH: {
      OFF: '0',
      ON: '1'
    },
    ESPOT_CONFIG: {
      AEM: '2',
      AEM_JSP: '3'
    }
  };

  var errorMessages = {
    INVALID_TIMEOUT: 'The timeout attribute needs to be a number',
    INVALID_URL_ROOT: 'The urlRoot is required',
    INVALID_LOCALE: 'The locale is required',
    INVALID_ESPOT: 'The espot ID(s) is required',
    INVALID_STYLES_IN_RESPONSE: 'The stylesInResponse is required'
  };

  /**
   * @property {object} REASON
   */

  /**
   * @name read
   * @description Function to sit in front of the api call so we can add some logic if we are going to make the call or not
   * @param {object} [settings] - the settings to be supplied to the function
   * @param {Number} [settings.timeout=0] - the max time to wait for the ajax call to come back
   * @return {promise} this is a jquery promise that will be resolved/rejected with an object containing reason code and a combination of ajaxData, ajaxJqXHR, ajaxTextStatus, and ajaxErrorThrown depending on the result of the ajax call
   */
  adapter.configRead({
    endPoint: '/' + coreConstants.anf('params.storeAttributes.api.aem.aemApiURLContext') + '/v3',
    method: 'GET',
    getDataType: function getDataType(data) {
      return data.dataType || 'json';
    },
    getTimeout: function getTimeout(data) {
      return data.timeout || 0;
    },
    validation: function validation(data, context) {
      // validate data goes here
      if (test.type.defined(data.timeout, false) && test.type.not.number(data.timeout, false)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.INVALID_TIMEOUT);
      }

      if (test.string.empty(data.locale, true)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.INVALID_LOCALE);
      }

      if ((!test.object.containsKey(data, 'espotId', false) || test.string.empty(data.espotId, true)) &&
        (!test.object.containsKey(data, 'pageId', false) || test.string.empty(data.pageId, true))) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.INVALID_ESPOT);
      }

      if (!test.type.boolean(data.stylesInResponse, false)) {
        throw new AdapterError(context.REASON.INVALID_PARAMS, errorMessages.INVALID_STYLES_IN_RESPONSE);
      }
    },
    preAjax: function preAjax(data) {
      var myData = $.extend(true, {}, data);
      delete myData.timeout;
      delete myData.dataType;
      delete myData.adapterSettings;
      return myData;
    },
    done: function done(data, textStatus, jqXHR) {
      /**
       * @this CRUD
       */
      var response;
      var responseData = data;
      if (typeof responseData === 'string') {
        responseData = JSON.parse(data);
      }
      if (responseData && test.array.not.empty(responseData.response, false)) {
        response = this.getAjaxOkResponse(responseData.response, textStatus, jqXHR);
      } else {
        response = responseData;
      }
      this.deferred.resolve(response);
    }
  });

  Object.freeze(adapter.CONSTANTS.SWITCH_MODES);

  return adapter;
});

redesign.define('coreServices/personalizedContent',[
  'api/adobeExperienceManager/dataSource',
  'anfUtil/testFramework'
], function personalizedContentService(
  aemContentAPI,
  test
) {
  'use strict';

  var CONSTANTS = Object.create(Object.prototype, {
    REASONS: {
      value: Object.create(Object.prototype, {
        AJAX_OK: {
          value: 1
        },
        AJAX_FAIL: {
          value: 2
        },
        INVALID_PARAMS: {
          value: 3
        },
        NO_CONTENT: {
          value: 4
        }
      })
    },
    SWITCH_MODES: {
      value: aemContentAPI.CONSTANTS.SWITCH_MODES
    },
    ESPOT_SWITCH: {
      value: aemContentAPI.CONSTANTS.ESPOT_SWITCH
    },
    ESPOT_CONFIG: {
      value: aemContentAPI.CONSTANTS.ESPOT_CONFIG
    }

  });

  var standardResponseObject = {
    node: null,
    reason: null
  };

  var adapterSettings;
  var response;

  function handleFailedContentCalls(contentUri) {
    // Create container for failed content and fill it later
    var failedFragmentElement = document.querySelector('div[data-url="' + contentUri + '"]');
    if (failedFragmentElement === null) {
      failedFragmentElement = document.createElement('div');
      failedFragmentElement.classList.add('failed-fragment');
      failedFragmentElement.setAttribute('data-url', contentUri);
    }
    return failedFragmentElement;
  }

  /**
   * @private
   * @description function to just make the call to get the aem content promise
   * @param {object} settings - the setting object
   * @param {string} settings.segment - the url of the content
   * @param {number} settings.timeout - the time wait for content to come back
   * @return {Deferred.promise} - the promise returned from the aemConentAPI.read call
   */
  function getAEMContentReadPromise(settings) {
    var myDeferred = new $.Deferred();
    if (!settings.segment) {
      return myDeferred.resolve(handleFailedContentCalls(settings.segment)).promise();
    }
    $.ajax({
      url: settings.segment,
      timeout: settings.timeout
    })
      .done(function contentDoneHandler(data) {
        var html = document.createElement('html');
        var element = document.createElement('div');
        var body;

        html.innerHTML = data;
        body = html.querySelector('body');
        element.innerHTML = body.innerHTML;

        myDeferred.resolve(element);
      })
      .fail(function contentFailHandler() {
        var failedFragmentElement = handleFailedContentCalls(settings.segment);
        myDeferred.resolve(failedFragmentElement);
      });

    return myDeferred.promise();
  }

  /*
  * @private
  * @description Creates a function to be used to stitch together one or more responses when we fetch the AEM Content
  * @param {$.Deferred} myDeferred - the Deferred object to be enacted upon
  * @return {function} A function to handle the success of making the request to get the aem content
  */
  function getAemContentReadSuccessHandler(myDeferred) {
    return function aemContentReadSuccessResponseHandler() {
      var content = Array.prototype.slice.call(arguments);
      var domNode = document.createElement('div');
      var responseObj = Object.create(standardResponseObject);

      domNode = content.reduce(function contentReductionHandler(node, currentNode) {
        node.appendChild(currentNode);
        return node;
      }, domNode);

      if (domNode.childNodes.length > 0) {
        responseObj.reason = CONSTANTS.REASONS.AJAX_OK;
        responseObj.node = domNode;
        myDeferred.resolve(responseObj);
      } else {
        // Fetch the standard function to fail with no content and execute it right away
        getFailWithNoContent(myDeferred)();
      }
    };
  }

  /*
  * @private
  * @description Creates a function to be used to handle the results of the call to get the list of content from AEM
  * @param {object} settings - the setting object
  * @param {$.Deferred} settings.myDeferred - the Deferred object to be enacted upon
  * @param {number} settings.timeout - The time to wait for the HTML content to come back
  * @return {function} A function to handle the success of making the request to get the AEM content
  */
  function getAemSegmentReadSuccessHandler(settings) {
    return function aemSegmentReadSuccessHandler(results) {
      response = results;
      if (
        results &&
        results.reason === aemContentAPI.REASON.AJAX_OK &&
        test.array.not.empty(results.data, false)
      ) {
        if (adapterSettings.isSingleResponse) {
          settings.myDeferred.resolve(results);
        }
        // Need to use apply so that the map is treated as separate
        // arguments instead on one to take advantage of the $.when
        // marshaling of promises/Deferreds
        var fragments = results.data[0].pages.map(function mapHandler(fragment) {
          return fragment.path;
        }, this);
        $.when.apply($, fragments.map(function getPromiseListItem(segment) {
          return getAEMContentReadPromise({
            segment: segment,
            timeout: settings.timeout
          });
        }))
          .done(getAemContentReadSuccessHandler(settings.myDeferred))
          .fail(getFailWithNoContent(settings.myDeferred));
      } else {
        getFailWithNoContent(settings.myDeferred)();
      }
    };
  }

  /*
  * @private
  * @description Creates a method that will reject the given Deferred with the reason of NO_CONTENT
  * @param  {$.Deferred} myDeferred - the Deferred object to be rejected
  * @return {function} a method to reject the supplied deferred with the NO_CONTENT reason
  */
  function getFailWithNoContent(myDeferred) {
    return function failWithNoContent() {
      var responseObj = Object.create(standardResponseObject);
      responseObj.reason = CONSTANTS.REASONS.NO_CONTENT;
      responseObj.node = document.createElement('div');
      myDeferred.reject(responseObj);
    };
  }


  return {
    reasons: CONSTANTS.REASONS,
    CONSTANTS: {
      SWITCH_MODES: CONSTANTS.SWITCH_MODES,
      ESPOT_SWITCH: CONSTANTS.ESPOT_SWITCH,
      ESPOT_CONFIG: CONSTANTS.ESPOT_CONFIG
    },
    /*
    * @description This acts a single point of entry to get the products that are currently saved from the server.  It will update local storage on successful call to the mysaves api
    * @param {string} brand - The brand that we are fetching content for
    * @param {string} locale - The local that should be used
    * @param {string} matchCriteria - The matching criteria
    * @param {number} aemTimeout - How long we should wait for the api call before timing out
    * @return {promise} this is a jQuery promise that will be resolved/rejected with an object containing reason code and a combination of ajaxData, ajaxJqXHR, ajaxTextStatus, and ajaxErrorThrown depending on the result of the ajax call
    */
    get: function get(data) {
      var myDeferred = new $.Deferred();
      var options = $.extend(true, {}, data);
      adapterSettings = data.adapterSettings;
      options.headers = {
        'x-source': 'CRS_WEB',
        Accept: 'application/json'
      };
      aemContentAPI.read(options)
        .done(getAemSegmentReadSuccessHandler({
          myDeferred: myDeferred,
          timeout: data.adapterSettings.aemHTMLTimeout
        })
        ).fail(getFailWithNoContent(myDeferred));

      return myDeferred.promise();
    },

    getFailedContent: function getFailedContent(settings) {
      return getAEMContentReadPromise(settings);
    },

    getAEMResponse: function getAEMResponse() {
      return (response && response.data) ? response.data : [];
    }
  };
});

redesign.define('globalPartial/productSliderTemplate',['handlebars','dsPartial/faux-button','dsPartial/product-template','dsPartial/product-name','dsPartial/product-price','dsPartial/product-price-text'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("productSliderTemplate", this["ANF"]["templates"]["productSliderTemplate"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["faux-button"],depth0,{"name":"faux-button","hash":{"data-prop":(depth0 != null ? depth0.productTemplateProps : depth0),"class-list":"js-product-card-button product-quickview__button"},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "		<div \n			class=\"js-product-card-wrapper product-card-wrapper product-card--"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.productAttrs : depth0)) != null ? stack1.brand : stack1), depth0))
    + "\"\n			data-collection=\""
    + alias2(alias1((depth0 != null ? depth0.collection : depth0), depth0))
    + "\"\n			data-images=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.productAttrs : depth0)) != null ? stack1.primaryFaceOutImage : stack1), depth0))
    + ","
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.productAttrs : depth0)) != null ? stack1.primaryHoverImage : stack1), depth0))
    + ","
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.productAttrs : depth0)) != null ? stack1.testFaceOutImage : stack1), depth0))
    + ","
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.productAttrs : depth0)) != null ? stack1.testHoverImage : stack1), depth0))
    + "\"\n			data-kic=\""
    + alias2(alias1((depth0 != null ? depth0.kicId : depth0), depth0))
    + "\"\n			data-productId=\""
    + alias2(alias1((depth0 != null ? depth0.productId : depth0), depth0))
    + "\"\n			>\n"
    + ((stack1 = container.invokePartial(partials["product-template"],depth0,{"name":"product-template","hash":{"class-list":"ds-standard-vertical-example"},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "		</div>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    return "			\n";
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "					<img\n						class=\"product-card__image\"\n						src=\""
    + alias2(alias1((depth0 != null ? depth0.imagePath : depth0), depth0))
    + "\"\n						data-fallback=\""
    + alias2(alias1((depth0 != null ? depth0.imageFallbackPath : depth0), depth0))
    + "\"\n						alt=\""
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "\"\n						data-productId=\""
    + alias2(alias1((depth0 != null ? depth0.productId : depth0), depth0))
    + "\"\n					>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return ((stack1 = container.invokePartial(partials["product-name"],depth0,{"name":"product-name","hash":{"class-list":"product-card__name-wrapper","brand":(depth0 != null ? depth0.brand : depth0)},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n					<meta itemprop=\"name\" content=\""
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "\" />\n					<meta itemprop=\"image\" content=\""
    + alias2(alias1((depth0 != null ? depth0.imagePath : depth0), depth0))
    + "\" />\n\n					<div class=\"product-card__price\">\n						<div class=\"product-price-v2--inner\" data-priceFlag=\""
    + alias2(alias1((depth0 != null ? depth0.priceFlag : depth0), depth0))
    + "\">\n"
    + ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"clearance-text":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.clearanceText : stack1),"type":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.priceType : stack1),"description":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.description : stack1)},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.memberPriceObj : depth0),{"name":"with","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "						</div>\n					</div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "						"
    + ((stack1 = container.lambda((depth0 != null ? depth0.name : depth0), depth0)) != null ? stack1 : "")
    + "\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.priceText : stack1),{"name":"each","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.formattedPriceText : depth0),"type":(depth0 != null ? depth0.priceTextType : depth0)},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"11":function(container,depth0,helpers,partials,data) {
    return "";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"clearance-text":(depth0 != null ? depth0.clearanceText : depth0),"type":(depth0 != null ? depth0.priceType : depth0),"description":(depth0 != null ? depth0.description : depth0),"class-list":"member-price"},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"14":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.priceText : depth0),{"name":"with","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),depth0,{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"3_d":  function(fn, props, container, depth0, data, blockParams, depths) {

  var decorators = container.decorators;

  fn = decorators.inline(fn,props,container,{"name":"inline","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"args":["product-image-section"],"data":data}) || fn;
  fn = decorators.inline(fn,props,container,{"name":"inline","hash":{},"fn":container.program(6, data, 0, blockParams, depths),"inverse":container.noop,"args":["product-content"],"data":data}) || fn;
  return fn;
  }

,"useDecorators":true,"usePartial":true,"useData":true,"useDepths":true}));

return this["ANF"];

});
redesign.define('globalPartial/productSliderTemplateV3',['handlebars','dsPartial/faux-button','dsPartial/product-template','dsPartial/product-name','dsPartial/product-price','dsPartial/product-price-text'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("productSliderTemplateV3", this["ANF"]["templates"]["productSliderTemplateV3"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["faux-button"],depth0,{"name":"faux-button","hash":{"data-prop":(depth0 != null ? depth0.productTemplateProps : depth0),"class-list":"js-product-card-button product-quickview__button"},"fn":container.program(2, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "        <div \n            class=\"js-product-card-wrapper product-card-wrapper product-card--"
    + alias2(alias1((depth0 != null ? depth0.brand : depth0), depth0))
    + "\"\n            data-collection=\""
    + alias2(alias1((depth0 != null ? depth0.collectionId : depth0), depth0))
    + "\"\n            data-images=\""
    + alias2(alias1((depth0 != null ? depth0.primaryFaceOut : depth0), depth0))
    + ","
    + alias2(alias1(((stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.primaryHoverImage : stack1)) != null ? stack1.value : stack1)) != null ? stack1["0"] : stack1)) != null ? stack1.value : stack1), depth0))
    + ","
    + alias2(alias1(((stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.testFaceOutImage : stack1)) != null ? stack1.value : stack1)) != null ? stack1["0"] : stack1)) != null ? stack1.value : stack1), depth0))
    + ","
    + alias2(alias1(((stack1 = ((stack1 = ((stack1 = ((stack1 = (depth0 != null ? depth0.attributes : depth0)) != null ? stack1.testHoverImage : stack1)) != null ? stack1.value : stack1)) != null ? stack1["0"] : stack1)) != null ? stack1.value : stack1), depth0))
    + "\"\n            data-kic=\""
    + alias2(alias1((depth0 != null ? depth0.kicId : depth0), depth0))
    + "\"\n            data-productId=\""
    + alias2(alias1((depth0 != null ? depth0.productId : depth0), depth0))
    + "\"\n            >\n"
    + ((stack1 = container.invokePartial(partials["product-template"],depth0,{"name":"product-template","hash":{"class-list":"ds-standard-vertical-example"},"fn":container.program(3, data, 0, blockParams, depths),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "        </div>\n";
},"3":function(container,depth0,helpers,partials,data,blockParams,depths) {
    return "            \n";
},"4":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "                    <img\n                        class=\"product-card__image\"\n                        src=\""
    + alias2(alias1((depth0 != null ? depth0.imagePath : depth0), depth0))
    + "\"	\n                        data-fallback=\""
    + alias2(alias1((depth0 != null ? depth0.imageFallbackPath : depth0), depth0))
    + "\"\n                        alt=\""
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "\"\n                        data-productId=\""
    + alias2(alias1((depth0 != null ? depth0.productId : depth0), depth0))
    + "\"\n                    >\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return ((stack1 = container.invokePartial(partials["product-name"],depth0,{"name":"product-name","hash":{"class-list":"product-card__name-wrapper","brand":(depth0 != null ? depth0.brand : depth0)},"fn":container.program(7, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n                    <meta itemprop=\"name\" content=\""
    + alias2(alias1((depth0 != null ? depth0.name : depth0), depth0))
    + "\" />\n                    <meta itemprop=\"image\" content=\""
    + alias2(alias1((depth0 != null ? depth0.imagePath : depth0), depth0))
    + "\" />\n\n                    <div class=\"product-card__price\">\n                        <div class=\"product-price-v2--inner\" data-priceFlag=\""
    + alias2(alias1((depth0 != null ? depth0.priceFlag : depth0), depth0))
    + "\">\n"
    + ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"clearance-text":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.clearanceText : stack1),"type":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.priceType : stack1),"description":((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.description : stack1)},"fn":container.program(9, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.memberPriceObj : depth0),{"name":"with","hash":{},"fn":container.program(13, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "                        </div>\n                    </div>\n";
},"7":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "                        "
    + ((stack1 = container.lambda((depth0 != null ? depth0.name : depth0), depth0)) != null ? stack1 : "")
    + "\n";
},"9":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),((stack1 = (depth0 != null ? depth0.priceObj : depth0)) != null ? stack1.priceText : stack1),{"name":"each","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"10":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price-text"],depth0,{"name":"product-price-text","hash":{"formatted-price":(depth0 != null ? depth0.formattedPriceText : depth0),"type":(depth0 != null ? depth0.priceTextType : depth0)},"fn":container.program(11, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"11":function(container,depth0,helpers,partials,data) {
    return "";
},"13":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials["product-price"],depth0,{"name":"product-price","hash":{"clearance-text":(depth0 != null ? depth0.clearanceText : depth0),"type":(depth0 != null ? depth0.priceType : depth0),"description":(depth0 != null ? depth0.description : depth0),"class-list":"member-price"},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"14":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers["with"].call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.priceText : depth0),{"name":"with","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data,blockParams,depths) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),depth0,{"name":"each","hash":{},"fn":container.program(1, data, 0, blockParams, depths),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"3_d":  function(fn, props, container, depth0, data, blockParams, depths) {

  var decorators = container.decorators;

  fn = decorators.inline(fn,props,container,{"name":"inline","hash":{},"fn":container.program(4, data, 0, blockParams, depths),"inverse":container.noop,"args":["product-image-section"],"data":data}) || fn;
  fn = decorators.inline(fn,props,container,{"name":"inline","hash":{},"fn":container.program(6, data, 0, blockParams, depths),"inverse":container.noop,"args":["product-content"],"data":data}) || fn;
  return fn;
  }

,"useDecorators":true,"usePartial":true,"useData":true,"useDepths":true}));

return this["ANF"];

});
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _wrapRegExp() { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, undefined, groups); }; var _super = RegExp.prototype; var _groups = new WeakMap(); function BabelRegExp(re, flags, groups) { var _this = new RegExp(re, flags); _groups.set(_this, groups || _groups.get(re)); return _setPrototypeOf(_this, BabelRegExp.prototype); } _inherits(BabelRegExp, RegExp); BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); if (result) result.groups = buildGroups(result, this); return result; }; BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if (typeof substitution === "string") { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) { return "$" + groups[name]; })); } else if (typeof substitution === "function") { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = arguments; if (_typeof(args[args.length - 1]) !== "object") { args = [].slice.call(args); args.push(buildGroups(args, _this)); } return substitution.apply(this, args); }); } else { return _super[Symbol.replace].call(this, str, substitution); } }; function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { groups[name] = result[g[name]]; return groups; }, Object.create(null)); } return _wrapRegExp.apply(this, arguments); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/* eslint-env amd,es6 */
redesign.define('util/cookies/wcUserActivity',['jsCookie'], function (cookieLib) {
  'use strict';

  var getUserId = function getUserId() {
    var allCookies = cookieLib.get();
    var wcUserActivity = Object.keys(allCookies).reduce(function (foundKey, key) {
      var _pop, _pop$groups;

      if (foundKey) return foundKey;
      return (_pop = _toConsumableArray(key.matchAll( /*#__PURE__*/_wrapRegExp(/WC_USERACTIVITY_(\x2D?[0-9]+)/g, {
        authId: 1
      }))).pop()) === null || _pop === void 0 ? void 0 : (_pop$groups = _pop.groups) === null || _pop$groups === void 0 ? void 0 : _pop$groups.authId;
    }, undefined);
    return wcUserActivity;
  };

  var get = function get() {
    return cookieLib.get("WC_USERACTIVITY_".concat(getUserId()));
  };

  return {
    exists: function exists() {
      return get() !== undefined;
    },
    get: get,
    getUserId: getUserId,
    remove: function remove() {
      return cookieLib.noModificationsAllowed();
    },
    set: function set() {
      return cookieLib.noModificationsAllowed();
    }
  };
});

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/* eslint-env amd,es6 */
redesign.define('util/cookies/cookie',['exports', 'jsCookie'], function (exports, cookieLib) {
  'use strict';

  var _cookieAccessors;

  var cookieTypes = {
    JSON: 'json',
    STRING: 'string',
    NUMBER: 'number'
  };
  var cookieAccessors = (_cookieAccessors = {}, _defineProperty(_cookieAccessors, cookieTypes.JSON, function (name) {
    var cookieValue = cookieLib.getJSON(name);
    return cookieValue && _typeof(cookieValue) === 'object' ? cookieValue : undefined;
  }), _defineProperty(_cookieAccessors, cookieTypes.STRING, function (name) {
    return cookieLib.get(name);
  }), _defineProperty(_cookieAccessors, cookieTypes.NUMBER, function (name) {
    return parseInt(cookieLib.get(name), 10);
  }), _cookieAccessors);

  var wrapFn = function wrapFn(fn) {
    return typeof fn === 'function' ? fn : function () {
      return fn;
    };
  };

  exports.noModificationsAllowed = function () {
    throw new Error('cookie should not be modified');
  };

  exports.TYPE = Object.freeze(cookieTypes);

  exports.factory = function (_ref) {
    var name = _ref.name,
        expires = _ref.ttl,
        type = _ref.type,
        secure = _ref.secure,
        domain = _ref.domain;
    var getExpires = wrapFn(expires);
    var getSecure = wrapFn(secure);
    var getDomain = wrapFn(domain);

    var getOptions = function getOptions() {
      var myExpires = getExpires();
      var mySecure = getSecure();
      var myDomain = getDomain();
      var options = {};
      if (Number.isFinite(myExpires)) options.expires = myExpires;
      if (typeof mySecure === 'boolean') options.secure = mySecure;
      if (myDomain) options.domain = myDomain;
      return options;
    };

    return {
      exists: function exists() {
        return typeof cookieLib.get(name) !== 'undefined';
      },
      get: function get() {
        return (cookieAccessors[type] || cookieAccessors[cookieTypes.STRING])(name);
      },
      remove: function remove() {
        return cookieLib.remove(name, getOptions());
      },
      set: function set(value) {
        return cookieLib.set(name, value, getOptions());
      }
    };
  };

  return exports;
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/* eslint-env amd,es6 */
redesign.define('util/cookies/wcPersistent',['util/cookies/cookie', 'anfUtil/constants'], function (cookie, constants) {
  'use strict';

  var factoryMethods = cookie.factory({
    name: 'WC_PERSISTENT',
    type: cookie.TYPE.STRING
  });

  var getUserId = function getUserId() {
    var _pop, _pop$groups;

    var cookieValue = factoryMethods.get();
    if (!cookieValue) return undefined;
    var matcher = new RegExp("".concat(constants.anf('params.storeAttributes.idList.storeId'), "_(?<authId>\\d+)"), 'g');
    return (_pop = _toConsumableArray(cookieValue.matchAll(matcher)).pop()) === null || _pop === void 0 ? void 0 : (_pop$groups = _pop.groups) === null || _pop$groups === void 0 ? void 0 : _pop$groups.authId;
  };

  return _objectSpread(_objectSpread({}, factoryMethods), {}, {
    getUserId: getUserId,
    remove: cookie.noModificationsAllowed,
    set: cookie.noModificationsAllowed
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-env amd,es6 */
redesign.define('util/cookies/rxVisitor',['util/cookies/cookie'], function (cookie) {
  'use strict';

  var factoryMadeRxVisitor = cookie.factory({
    name: 'rxVisitor',
    type: cookie.TYPE.STRING
  });

  var get = function get() {
    var value = factoryMadeRxVisitor.get();
    return typeof value === 'undefined' ? '' : value;
  };

  return _objectSpread(_objectSpread({}, factoryMadeRxVisitor), {}, {
    get: get,
    set: function set() {
      return cookie.noModificationsAllowed();
    },
    remove: function remove() {
      return cookie.noModificationsAllowed();
    }
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-env amd,es6 */
redesign.define('util/cookies/algonomyRCS',['exports', 'util/cookies/cookie'], function (exports, cookie) {
  'use strict'; // expiration is measured in DAYS. 730 days = 2 years

  var DEFAULT_EXPIRATION_DURATION = 730;
  var factoryMadeAlgonomyRCS = cookie.factory({
    name: 'rcs',
    ttl: DEFAULT_EXPIRATION_DURATION,
    type: cookie.TYPE.STRING
  });

  var get = function get() {
    var value = factoryMadeAlgonomyRCS.get();
    return typeof value === 'undefined' ? '' : value;
  };

  return _objectSpread(_objectSpread({}, factoryMadeAlgonomyRCS), {}, {
    get: get
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-env amd,es6 */
redesign.define('util/cookies/optanonConsent',['util/cookies/cookie'], function (cookie) {
  'use strict';

  var factoryMadeOptanonConsent = cookie.factory({
    name: 'OptanonConsent',
    type: cookie.TYPE.STRING
  });
  var CONSENT_IDENTIFIERS = Object.freeze({
    STRICTLY_NECESSARY_COOKIES: {
      ENABLED: 'C0001%3A1',
      DISABLED: 'C0001%3A0'
    },
    PERFORMANCE_COOKIES: {
      ENABLED: 'C0002%3A1',
      DISABLED: 'C0002%3A0'
    },
    FUNCTIONAL_COOKIES: {
      ENABLED: 'C0003%3A1',
      DISABLED: 'C0003%3A0'
    },
    TARGETING_COOKIES: {
      ENABLED: 'C0004%3A1',
      DISABLED: 'C0004%3A0'
    },
    PERSONAL_INFO_SHARE_COOKIES: {
      ENABLED: 'SSPD_BG%3A1',
      DISABLED: 'SSPD_BG%3A0'
    }
  });
  /**
   * @name getUserTrackingConsent
   * @description Function that check for the consent groups and return a Boolean.
   * With the CRO implementation, Cookie consent groups are set after checking the user consent profile in Cloud
   * Intermittently there is some latency in fetching the groups, to resolve that we are doing max attempts.
   * @return {Boolean} - Returns a Boolean value
   */

  var getUserTrackingConsent = function getUserTrackingConsent() {
    var _factoryMadeOptanonCo;

    var consentValues = encodeURIComponent((_factoryMadeOptanonCo = factoryMadeOptanonConsent.get()) !== null && _factoryMadeOptanonCo !== void 0 ? _factoryMadeOptanonCo : '');
    return consentValues.includes(CONSENT_IDENTIFIERS.FUNCTIONAL_COOKIES.ENABLED);
  };

  return _objectSpread(_objectSpread({}, factoryMadeOptanonConsent), {}, {
    getUserTrackingConsent: getUserTrackingConsent,
    set: function set() {
      return cookie.noModificationsAllowed();
    },
    remove: function remove() {
      return cookie.noModificationsAllowed();
    }
  });
});

/* eslint-env amd,es6 */
redesign.define('util/algonomy/config/placements',['exports'], function placements(exports) {
  'use strict';

  var placementsMap = {
    mobile: {
      'homepage': 'home_page.m_rr1|home_page.m_rr2|home_page.m_rr3|home_page.m_rr4|home_page.m_rr5|home_page.m_rr6',
      'product': 'item_page.m_rr1|item_page.m_rr2|item_page.m_rr3|item_page.m_rr4|item_page.m_rr5|item_page.m_rr6',
      'quickview': 'item_page.m_quickView_rr1|item_page.m_quickView_rr2|item_page.m_quickView_rr3|item_page.m_quickView_rr4|item_page.m_quickView_rr5|item_page.m_quickView_rr6',
      'shoppingcart': 'cart_page.m_rr1|cart_page.m_rr2|cart_page.m_rr3|cart_page.m_rr4|cart_page.m_rr5|cart_page.m_rr6',
      'emptyBag': 'cart_page.m_empty1|cart_page.m_empty2|cart_page.m_empty3|cart_page.m_empty4|cart_page.m_empty5|cart_page.m_empty6',
      'minibag': 'cart_page.m_mini_bag1|cart_page.m_mini_bag2|cart_page.m_mini_bag3|cart_page.m_mini_bag4|cart_page.m_mini_bag5|cart_page.m_mini_bag6',
      'orderconfirmation': 'purchase_complete_page.m_rr1|purchase_complete_page.m_rr2|purchase_complete_page.m_rr3|purchase_complete_page.m_rr4|purchase_complete_page.m_rr5|purchase_complete_page.m_rr6',
      'myaccount': 'generic_page.m_account_rr1|generic_page.m_account_rr2|generic_page.m_account_rr3|generic_page.m_account_rr4|generic_page.m_account_rr5|generic_page.m_account_rr6',
      'mysaves': 'generic_page.m_saves_rr1|generic_page.m_saves_rr2|generic_page.m_saves_rr3|generic_page.m_saves_rr4|generic_page.m_saves_rr5|generic_page.m_saves_rr6',
      'search': 'search_page.m_rr1|search_page.m_rr2|search_page.m_rr3|search_page.m_rr4|search_page.m_rr5|search_page.m_rr6',
      'searchNull': 'search_page.m_null1|search_page.m_null2|search_page.m_null3|search_page.m_null4|search_page.m_null5|search_page.m_null6',
      'searchtypeahead': 'search_page.m_typeAhead1|search_page.m_typeAhead2|search_page.m_typeAhead3|search_page.m_typeAhead4|search_page.m_typeAhead5|search_page.m_typeAhead6',
      'category': 'category_page.m_rr1|category_page.m_rr2|category_page.m_rr3|category_page.m_rr4|category_page.m_rr5|category_page.m_rr6',
      'orderhistory': 'generic_page.m_orderHistory1|generic_page.m_orderHistory2|generic_page.m_orderHistory3|generic_page.m_orderHistory4|generic_page.m_orderHistory5|generic_page.m_orderHistory6',
      'marketing': 'generic_page.m_mrktLP1|generic_page.m_mrktLP2|generic_page.m_mrktLP3|generic_page.m_mrktLP4|generic_page.m_mrktLP5|generic_page.m_mrktLP6',
      'sales': 'generic_page.m_saleLP1|generic_page.m_saleLP2|generic_page.m_saleLP3|generic_page.m_saleLP4|generic_page.m_saleLP5|generic_page.m_saleLP6',
      'addtobag': 'add_to_cart_page.m_rr1|add_to_cart_page.m_rr2|add_to_cart_page.m_rr3|add_to_cart_page.m_rr4|add_to_cart_page.m_rr5|add_to_cart_page.m_rr6',
      'searchFlyoutInitial': 'search_page.m_flyout_initial1',
      'searchFlyoutResults': 'search_page.m_flyout_rr1',
      'searchFlyoutNull': 'search_page.m_flyout_null1',
      'pickedForYou': 'generic_page.m_PFU1|generic_page.m_PFU2|generic_page.m_PFU3|generic_page.m_PFU4|generic_page.m_PFU5|generic_page.m_PFU6'
    },
    desktop: {
      'homepage': 'home_page.rr1|home_page.rr2|home_page.rr3|home_page.rr4|home_page.rr5|home_page.rr6',
      'product': 'item_page.rr1|item_page.rr2|item_page.rr3|item_page.rr4|item_page.rr5|item_page.rr6',
      'quickview': 'item_page.quickView_rr1|item_page.quickView_rr2|item_page.quickView_rr3|item_page.quickView_rr4|item_page.quickView_rr5|item_page.quickView_rr6',
      'shoppingcart': 'cart_page.rr1|cart_page.rr2|cart_page.rr3|cart_page.rr4|cart_page.rr5|cart_page.rr6',
      'emptyBag': 'cart_page.empty1|cart_page.empty2|cart_page.empty3|cart_page.empty4|cart_page.empty5|cart_page.empty6',
      'minibag': 'cart_page.mini_bag1|cart_page.mini_bag2|cart_page.mini_bag3|cart_page.mini_bag4|cart_page.mini_bag5|cart_page.mini_bag6',
      'orderconfirmation': 'purchase_complete_page.rr1|purchase_complete_page.rr2|purchase_complete_page.rr3|purchase_complete_page.rr4|purchase_complete_page.rr5|purchase_complete_page.rr6',
      'myaccount': 'generic_page.account_rr1|generic_page.account_rr2|generic_page.account_rr3|generic_page.account_rr4|generic_page.account_rr5|generic_page.account_rr6',
      'mysaves': 'generic_page.saves_rr1|generic_page.saves_rr2|generic_page.saves_rr3|generic_page.saves_rr4|generic_page.saves_rr5|generic_page.saves_rr6',
      'search': 'search_page.rr1|search_page.rr2|search_page.rr3|search_page.rr4|search_page.rr5|search_page.rr6',
      'searchNull': 'search_page.null1|search_page.null2|search_page.null3|search_page.null4|search_page.null5|search_page.null6',
      'searchtypeahead': 'search_page.typeAhead1|search_page.typeAhead2|search_page.typeAhead3|search_page.typeAhead4|search_page.typeAhead5|search_page.typeAhead6',
      'category': 'category_page.rr1|category_page.rr2|category_page.rr3|category_page.rr4|category_page.rr5|category_page.rr6',
      'orderhistory': 'generic_page.orderHistory1|generic_page.orderHistory2|generic_page.orderHistory3|generic_page.orderHistory4|generic_page.orderHistory5|generic_page.orderHistory6',
      'marketing': 'generic_page.mrktLP1|generic_page.mrktLP2|generic_page.mrktLP3|generic_page.mrktLP4|generic_page.mrktLP5|generic_page.mrktLP6',
      'sales': 'generic_page.saleLP1|generic_page.saleLP2|generic_page.saleLP3|generic_page.saleLP4|generic_page.saleLP5|generic_page.saleLP6',
      'addtobag': 'add_to_cart_page.rr1|add_to_cart_page.rr2|add_to_cart_page.rr3|add_to_cart_page.rr4|add_to_cart_page.rr5|add_to_cart_page.rr6',
      'searchFlyoutInitial': 'search_page.flyout_initial1',
      'searchFlyoutResults': 'search_page.flyout_rr1',
      'searchFlyoutNull': 'search_page.flyout_null1',
      'pickedForYou': 'generic_page.PFU1|generic_page.PFU2|generic_page.PFU3|generic_page.PFU4|generic_page.PFU5|generic_page.PFU6'
    }
  };
  /**
   * @name getPlacement
   * @public
   * @description Function that returns the placement value of the page/feature the user is interacting with.
   * The placement values are defined by Algonomy, and it lives as a hash map in placements.es6 file.
   * We are grabbing the pageKind from dataBridge, or defining it for a feature (such as the Quickview), then
   * using it to look up the placement value in the hashmap.
   *
   * @param {Boolean} isMobile - Flag to determine mobile or desktop WCS.
   * @param {String} pageKind - The name of the page/feature the user is interacting with.
   *
   * @return {String} - Returns a string.
   */

  exports.getPlacement = function (isMobile) {
    var pageKind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var pageName = pageKind.replace(/\s+/g, ''); // removes spaces, ex: "home page" -> "homepage"

    return placementsMap[isMobile ? 'mobile' : 'desktop'][pageName];
  };

  return exports;
});

/* eslint-env amd,es6 */
redesign.define('util/algonomy/config/cfrad',['exports'], function cfrad(exports) {
  'use strict';

  var cfradKeyMap = {
    ANF: 'HK2N4DlWcFrHfYhD',
    HCO: 'BoqlsaInquDu3Kna'
  };
  /**
   * @name getCfradKey
   * @public
   * @description Function that returns the CFRAD key from cfradKey config map in this file.
   * @param {String} brand - The current top level brand (ANF || HCO) the user is interacting with.
   *
   * @return {String} - Returns a string.
   */

  exports.getCfradKey = function (brand) {
    return cfradKeyMap[brand];
  };

  return exports;
});

/* eslint-env amd,es6 */
redesign.define('util/algonomy/config/apiKeys',['exports'], function apiKeysFn(exports) {
  'use strict';

  var apiKeysMap = {
    ANF: 'dbc88fd3561a8ee1',
    HCO: '6c8a52fcb8d0762c'
  };
  var apiClientKeysMap = {
    ANF: {
      mobile: '720d70965055b360',
      desktop: 'bece98fc549252f3'
    },
    HCO: {
      mobile: '4ad8bc924a00c934',
      desktop: '2f6839732604a694'
    }
  };
  /**
   * @name getApiKey
   * @public
   * @description Function that returns the API key from apiKeys config map in this file.
   * @param {String} brand - The current top level brand (ANF || HCO) the user is interacting with.
   *
   * @return {String} - Returns a string.
   */

  exports.getApiKey = function (brand) {
    return apiKeysMap[brand];
  };
  /**
   * @name getApiClientKey
   * @public
   * @description Function that returns the API client key from the apiClientKeys config map in this file.
   * @param {String} brand - The current top level brand (ANF || HCO) the user is interacting with.
   * @param {Boolean} isMobile - Flag to determine mobile or desktop WCS.
   *
   * @return {String} - Returns a string.
   */


  exports.getApiClientKey = function (brand, isMobile) {
    return apiClientKeysMap[brand][isMobile ? 'mobile' : 'desktop'];
  };

  return exports;
});

/* eslint-env amd,es6 */
redesign.define('util/algonomy/logger',['coreServices/storage', 'exports'], function (storage, exports) {
  'use strict';
  /**
   *
   * @type {{
   * localStorageKey: string,
   * keyPrepad: string,
   * messages: {
   *    algonomyCallNotMade: string,
   *    placementNotAvailable: string,
   *    placementAvailable: string,
   *    clickTrackingUrlFired: string,
   *    collectedDataPoints: string,
   *    analyticsLoadEventFired: string,
   *    error: string,
   *    analyticsClickEventFired: string
   * },
   * locations: {
   *    adapter: string,
   *    algonomyCall: string
   * }
   * }}
   */

  var CONSTANTS = {
    localStorageKey: 'algonomyDebug',
    keyPrepad: 'Algonomy:',
    locations: {
      adapter: 'Adapter:',
      algonomyCall: 'Instrumentation call:'
    },
    messages: {
      placementAvailable: 'Placements is available',
      placementNotAvailable: 'Placements is not available',
      analyticsLoadEventFired: 'Analytics load event was fired',
      analyticsClickEventFired: 'Analytics click event was fired',
      error: 'something is not right',
      algonomyCallMade: 'Instrumentation call was made successfully',
      algonomyCallNotMade: 'Instrumentation call was not made',
      collectedDataPoints: 'Collected data points',
      clickTrackingUrlFired: 'Click tracking URL was fired'
    }
  };
  Object.freeze(CONSTANTS);
  exports.CONSTANTS = CONSTANTS;
  /**
   * @name formatMessage
   * @private
   * @description Function that formats the message that is to be printed in the browser console.
   * It is designed to accept either a single message string, or an array of strings. In both cases, it prepends the
   * 'algonomy' string to the message and then joins the rest in a colon delimited fashion.
   *
   * @param {String|Array} message - A single string, or an array of strings to be formatted and printed.
   *
   * @returns {string} - Returns the formatted string with 'algonomy' prepnded to it.
   */

  var formatMessage = function formatMessage(message) {
    var _message;

    if (typeof message === 'string' || message instanceof String) {
      _message = "".concat(CONSTANTS.keyPrepad, ":").concat(message);
    }

    if (Array.isArray(message)) {
      _message = CONSTANTS.keyPrepad + message.join(':');
    }

    return _message;
  };
  /**
   * @name shouldPrint
   * @private
   * @description - Function that determines if the payload or message should be printed. It takes in the local storage
   * value and ONLY returns true if the local storage value is also true. For any other value (random string, false), it
   * will resolve to false.
   *
   * @param {String} localStorageValue - The local storage value.
   *
   * @returns {boolean} - Returns true/false depending on the local storage value.
   */


  var shouldPrint = function shouldPrint(localStorageValue) {
    return localStorageValue === 'true';
  };
  /**
   * @name logPayload
   * @public
   * @description - Function that takes in either a single message string or an array of strings, along with a payload,
   * then calls a function to format the message, then print the message to the console along with the payload.
   *
   * @param {String|Array} message - A single string, or an array of strings to be formatted and printed.
   * @param {Any} payload - The payload to be printed to the console. It can be ANYTHING, including an object or an array.
   *
   * @return {Undefined} - Returns nothing.
   */


  exports.logPayload = function (message, payload) {
    if (shouldPrint(storage.local.get(CONSTANTS.localStorageKey))) {
      // eslint-disable-next-line no-console
      console.info(formatMessage(message), payload); // eslint-enable-next-line no-console
    }
  };
  /**
   * @name logMessage
   * @public
   * @description - Function that takes in either a single message string or an array of strings, then calls a function
   * to format the message, then prints the message to the console.
   * Unlike the function above, this one is ONLY meant to print a message, and NOT a payload.
   *
   * @param {String|Array} message - A single string, or an array of strings to be formatted and printed.
   *
   * @return {Undefined} - Returns nothing.
   */


  exports.logMessage = function (message) {
    if (shouldPrint(storage.local.get(CONSTANTS.localStorageKey))) {
      // eslint-disable-next-line no-console
      console.info(formatMessage(message)); // eslint-enable-next-line no-console
    }
  };
});

redesign.define('util/algonomy/switches',['exports'], function switches(exports) {
  'use strict';
  /**
   * @name isRecommendationsEnabled
   * @public
   * @description Function that returns the value of top-level recommendations kill switch flag. Default is set to true.
   *
   * @return {Boolean} - Returns a Boolean value
   */

  exports.isRecommendationsEnabled = function () {
    return window.digitalData.get('flag.recommendations-kill-switch', true);
  };
  /**
   * @name isConservativeConsentEnabled
   * @public
   * @description Function that returns the default consent strategy to be adopted if the consent identifiers such as the
   * One Trust Cookie and the One Trust Data Layer are not available or accessible.
   * If the consent identifiers are not accessible, then
   *    A value of 'true' means a conservative approach is to be adopted --> NO CONSENT GIVEN
   *    A value of 'false' means an non-conservative approach is to be adopted --> CONSENT IS GIVEN
   *
   * Default is set to true.
   *
   * @return {Boolean} - Returns a Boolean value
   */


  exports.isConservativeConsentEnabled = function () {
    return window.digitalData.get('flag.has-conservative-cookie-consent-enabled', true);
  };
  /**
   * @name hasExperienceBrowserEnabled
   * @public
   * @description Function that returns whether the Algonomy Experience Browser capability is enabled or not.
   *
   * @return {Boolean} - Returns a Boolean value
   */


  exports.hasExperienceBrowserEnabled = function () {
    return window.digitalData.get('flag.has-algonomy-experience-browser-enabled', false);
  };

  return exports;
});

/* eslint-env amd,es6 */
redesign.define('util/algonomy/vendor/recsForPlacementCallbackForCfrad',['exports'], function _recsForPlacementsCallback(exports) {
  'use strict'; // See the README file for details on what this code does

  /* eslint-disable */

  exports.recsForPlacementsCallback = function () {
    var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var script; // Check if rr_annotations object was returned in the response

    if (response && response.rr_annotations) {
      // If we have rr_annotations_array push rr_annotations object there, otherwise create it with rr_annotations inside
      if (window.rr_annotations_array) {
        window.rr_annotations_array.push(response.rr_annotations);
      } else {
        window.rr_annotations_array = [response.rr_annotations];
      } // Check if Experience Browser was already loaded on the page (it creates rr_experience_browser global variable)


      if (window.rr_experience_browser) {
        rr_experience_browser.start();
      } else {
        // If Experience Browser is missing, load it from RichRelevance cdn, it will start automatically and parse rr_annotations
        script = document.createElement('script');
        script.src = '//cdn.richrelevance.com/dashboard/applications/cfrad/dist/index.min.js';
        script.async = true;
        document.getElementsByTagName('head')[0].appendChild(script);
      }
    } else {
      console.log('recsForPlacementsCallback: rr_annotations is missing');
    }
  };
  /* eslint-enable */


  return exports;
});

redesign.define('util/algonomy/config/sliderSettings',['exports'], function settings(exports) {
  'use strict';

  var sliderSettingsHashMap = new Map();
  sliderSettingsHashMap.set('defaultSettings', {
    slider: {
      rows: 2,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: false,
          dots: true,
          centerMode: false,
          rows: 2,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          arrows: false,
          dots: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 3,
          slidesToScroll: 3
        }
      }, {
        breakpoint: 825,
        settings: {
          arrows: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 5,
          slidesToScroll: 5
        }
      }]
    }
  });
  sliderSettingsHashMap.set('cart_page.rr', {
    slider: {
      slidesToShow: 2,
      slidesToScroll: 2,
      arrows: false,
      centerMode: false,
      infinite: false,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: true,
          dots: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
          centerMode: false,
          rows: 1,
          arrows: true
        }
      }]
    }
  });
  sliderSettingsHashMap.set('cart_page.empty', {
    slider: {
      slidesToShow: 2,
      slidesToScroll: 2,
      arrows: false,
      centerMode: false,
      infinite: false,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: true,
          dots: true,
          centerMode: false,
          rows: 2,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
          centerMode: false,
          rows: 1,
          arrows: true
        }
      }]
    }
  });
  sliderSettingsHashMap.set('purchase_complete_page.rr', {
    slider: {
      slidesToShow: 1,
      slidesToScroll: 1,
      initialSlide: 1,
      arrows: true,
      centerMode: false,
      infinite: true,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: false,
          dots: true,
          centerMode: false,
          rows: 2,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 2,
          rows: 1
        }
      }]
    }
  }); // disabled slider: arrows, dots, swipe, draggable

  sliderSettingsHashMap.set('search_page.flyout_initial', {
    slider: {
      rows: 2,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: false,
          dots: false,
          centerMode: false,
          rows: 2,
          slidesPerRow: 2,
          slidesToShow: 1,
          slidesToScroll: 2,
          swipe: false,
          draggable: false
        }
      }]
    }
  });
  sliderSettingsHashMap.set('generic_page.PFU', {
    slider: {
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: false,
          dots: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          arrows: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 3,
          slidesToScroll: 3
        }
      }, {
        breakpoint: 825,
        settings: {
          arrows: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 5,
          slidesToScroll: 5
        }
      }]
    }
  });
  sliderSettingsHashMap.set('generic_page.saves_rr', {
    slider: {
      slidesToShow: 2,
      slidesToScroll: 2,
      arrows: false,
      centerMode: false,
      infinite: false,
      responsive: [{
        breakpoint: 0,
        settings: {
          arrows: true,
          dots: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 540,
        settings: {
          arrows: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      }, {
        breakpoint: 825,
        settings: {
          arrows: true,
          centerMode: false,
          rows: 1,
          slidesToShow: 5,
          slidesToScroll: 5
        }
      }]
    }
  });
  exports.defaultNumberOfProductsToShow = 12;
  exports.sliderSettingsHashMap = sliderSettingsHashMap;
  return exports;
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-env amd,es6 */
redesign.define('util/algonomy/helpers',['util/cookies/wcUserActivity', 'util/cookies/wcPersistent', 'util/cookies/rxVisitor', 'util/cookies/algonomyRCS', 'util/cookies/optanonConsent', 'util/algonomy/config/placements', 'util/algonomy/config/cfrad', 'util/algonomy/config/apiKeys', 'util/algonomy/logger', 'util/algonomy/switches', 'util/algonomy/vendor/recsForPlacementCallbackForCfrad', 'anfUtil/constants', 'coreModules/brandedPage', 'exports', 'globalServices/userState', 'util/algonomy/config/sliderSettings'], function (wcUserActivity, wcPersistent, rxVisitor, rcs, optanonConsent, placements, cfrad, apiKeys, logger, switches, recsForPlacementCallbackForCfrad, constants, brandedPage, exports, userState, sliderSettings) {
  'use strict';

  var langIdMap = {
    '-1': 'en',
    '-2': 'fr',
    '-3': 'de',
    '-4': 'it',
    '-5': 'es',
    '-10': 'ja',
    '-1000': 'nl',
    '-1001': 'fr',
    '-1002': 'es',
    '-1003': 'zh'
  };

  var getLanguageFromLangId = function getLanguageFromLangId(lang) {
    return langIdMap[lang] || '';
  };

  var isPdpPage = function isPdpPage() {
    return $('body').is('.product-page-v2');
  };

  var isQuickviewOpened = function isQuickviewOpened() {
    return $('.product-quickview__modal[data-open="true"]').length > 0;
  };
  /**
   * @name getPageKind
   * @private
   * @description Function that returns grabs the page kind from the dataBridge and returns it.
   *
   * @return {String} - Returns a string.
   */


  var getPageKind = function getPageKind() {
    return window.digitalData.get('page.pageKind') || '';
  };
  /**
   * @name getIsMobile
   * @private
   * @description Function that grabs the isMobile flag from ConstantsJS, converts to boolean and returns it.
   * The value defaults to false if the flag is not set on ConstantsJS.
   *
   * @return {Boolean} - Returns a boolean.
   */


  var getIsMobile = function getIsMobile() {
    var flag = constants.anf('params.env.isMobile') || 'false';
    return flag === 'true';
  };
  /**
   * @name getUserConsent
   * @private
   * @description Function that returns the state of user consent as a boolean. It goes through a series of steps
   * to determine this
   * First, it checks if the One Trust OptAnon cookie is present.
   *    If not present, returns false.
   *    If present, continues to the next/second step.
   * Second, it checks the One Trust data layer in the browser for Active Groups. The value is set by the One Trust
   * script. We look here before looking into the cookie itself due to a weird race condition.
   *    If not preset, continues to the next/third step.
   *    If present, it returns user selection as saved in the functional cookie
   *
   * Third, it checks the state of consent in the OptAnon cookie set by One Trust.
   *
   * @return {Boolean} - Returns a Boolean value
   */


  var getUserConsent = function getUserConsent() {
    var CONSENT_IDENTIFIERS = Object.freeze({
      STRICTLY_NECESSARY_COOKIES: 'C0001',
      PERFORMANCE_COOKIES: 'C0002',
      FUNCTIONAL_COOKIES: 'C0003',
      TARGETING_COOKIES: 'C0004',
      PERSONAL_INFO_SHARE_COOKIES: 'SSPD_BG'
    });
    var hasConservativeCookieConsentEnabled = switches.isConservativeConsentEnabled();
    if (!optanonConsent.exists()) return !hasConservativeCookieConsentEnabled;
    var consentActiveGroups = window.OptanonActiveGroups;

    if (consentActiveGroups) {
      return consentActiveGroups.split(',').some(function (value) {
        return value.includes(CONSENT_IDENTIFIERS.TARGETING_COOKIES);
      });
    }

    return optanonConsent.getUserTrackingConsent();
  };
  /**
   * @name getRegionId
   * @private
   * @description Function that returns the regionId of the user. The business logic is different for US/CA vs EU.
   * The format of the value is driven and used by Algonomy only.
   *
   * @param {String} _lang - the user selected language
   * @param {String} _region - the region the user is in
   * @return {String} - Returns a string.
   */


  var getRegionId = function getRegionId(_lang, _region) {
    if (_region === 'EU' || _region === 'UK') return _region;
    var currency = window.digitalData.get('page.currency') || '';
    return "".concat(_lang, "_").concat(_region, "_").concat(currency);
  };
  /**
   * @name getLangId
   * @private
   * @description Function that returns the langId of the user. The business logic is different for US/CA vs EU.
   * The format of the value is driven and used by Algonomy only.
   *
   * @param {String} _lang - the user selected language
   * @param {String} _region - the region the user is in
   *
   * @return {String} - Returns a string.
   */


  var getLangId = function getLangId(_lang, _region) {
    if (_region !== 'EU') return _lang; // For EU region only

    return "".concat(_lang, "-").concat(_region);
  };
  /**
  * @name getSliderSettings
  * @private
  * @description Function that returns the slider settings for the recommendations slider based on the placement value.
  * The slider settings, which are defined by marketing, live as a hash map in sliderSettings.es6 file.
  * They are page specific, and are correlated with the placement value.
  *
  *
  * @param {String} placement - Placement value returned from the Algonomy API call.
  *
  * @return {String} - Returns a string.
  */


  var getSliderSettings = function getSliderSettings(placement) {
    var placementValue = placement.replace(/\d+/g, '').replace('m_', '');
    return sliderSettings.sliderSettingsHashMap.get(placementValue) || sliderSettings.sliderSettingsHashMap.get('defaultSettings');
  };
  /**
   * @name getBrandForFPB
   * @private
   * @description Function that returns the brand the user is interacting with. 'st' gets bundled into 'hol'.
   * The output of the function is strictly used to determine the unique brand value requirements for
   * the `fpb` query parameter of the recsForPlacement network call.
   * For general brand determination needs, pls use the getBranded page exported function
   *
   * @return {String} - Returns a string.
   */


  var getBrandForFPB = function getBrandForFPB() {
    var brand = window.digitalData.get('page.brand');
    return brand === 'st' ? 'hol' : brand;
  };
  /**
   * @name getTopLevelBrand
   * @private
   * @description Function that returns the top level brands the user is interacting with --> ANF || HCO.
   * The function is used for 3 different purposes.
   * CFRAD:
   * `cfrad` is set for top level brands and does not change for sub brands. The output of the function is used
   * to determine the brand value requirements for the `cfrad` query parameter of the recsForPlacement network call.
   *
   * API KEYS:
   * `apiKeys` is set for top level brands and does not change for sub brands. The output of the function is used
   * to determine the brand value requirements for the `apiKeys` query parameter of the recsForPlacement network call.
   *
   * API CLIENT KEYS:
   * `apiClientKeys` is set for top level brands and does not change for sub brands. The output of the function is used
   * to determine the brand value requirements for the `apiClientKeys` query parameter of the recsForPlacement network call.
   *
   * For general brand determination needs, pls use the getBranded page exported function
   *
   * @return {String} - Returns a string.
   */


  var getTopLevelBrand = function getTopLevelBrand() {
    return brandedPage.getBrand() === brandedPage.constants.brand.hol ? 'HCO' : 'ANF';
  };
  /**
   * @name getWcPersistentUserId
   * @private
   * @description Function that returns the user ID derived from the WC_PERSISTENT cookie.
   * The user ID gets set to
   *    guest/generic/unauthenticated user: -1002
   *    guest/generic/unauthenticated user who added a product to bag: some (guest) user ID
   *    authenticated user: some user ID
   *
   * The caveat is that Algonomy wants us to send a user ID for fully and remembered logged-in users.
   *
   * @return {String} - Returns a string.
   */


  var getWcPersistentUserId = function getWcPersistentUserId() {
    var userId = wcPersistent.getUserId();
    return typeof userId === 'undefined' || userId === '-1002' || !userState.isLoggedIn() ? null : userId;
  };
  /**
   * @name getUserId
   * @private
   * @description Function that checks for the user ID derived from the WC_PERSISTENT cookie.
   * if getWcPersistentUserId() returns '' then it checks for user ID derived from the WC_USERACTIVITY cookie
   * The user ID gets set to
   *    guest/generic/unauthenticated user: -1002
   *    guest/generic/unauthenticated user who added a product to bag: some (guest) user ID
   *    authenticated user: some user ID
   *
   * The caveat is that Algonomy wants us to send a user ID for fully and remembered logged-in users.
   *
   * @return {String} - Returns a string.
   */


  var getUserId = function getUserId() {
    var userId = getWcPersistentUserId() === null ? wcUserActivity.getUserId() : getWcPersistentUserId();
    return typeof userId === 'undefined' || userId === '-1002' || !userState.isLoggedIn() ? '' : userId;
  };
  /**
   * @name debounceAlgonomyCall
   * @public
   * @description Debounces the invocation of the function that makes the Algonomy network call with a delay of 1500ms.
   * Currently, it is used to debounce the PDP swatch clicks.
   */


  var debounceAlgonomyCall = _.debounce(function () {
    var instrumentationArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    callAlgonomy(instrumentationArray);
  }, 1500);
  /**
   * @name shouldCallAlgonomy
   * @private
   * @description Function that determines whether the Algonomy call should be made or not.
   * Currently, we should only make this call for US and Canada.
   *
   * @return {Boolean} - Returns true/false.
   */


  var shouldCallAlgonomy = function shouldCallAlgonomy() {
    return constants.anf('params.storeAttributes.siteList.isUSSite') || constants.anf('params.storeAttributes.siteList.isCASite') || constants.anf('params.storeAttributes.siteList.isUKSite') || constants.anf('params.storeAttributes.siteList.isEUSite');
  };
  /**
   * @name shouldCallExperienceBrowser
   * @private
   * @description Function that determines whether the Experience Browser vendor code should be called or not.
   * In order to make the determination, the function looks at two conditions.
   * First, it checks if the LD flag is enabled or not.
   * Second, it compares the cfrad appended to the URL and the cfrad of current brand as defined by Algonomy.
   * The Experience Browser vendor code is called ONLY if the LD flag is enabled AND if the cfrad appended to the URL
   * matches the Algonomy defined cfrad of the current brand the user is interacting with.
   * If any of the above conditions are not met, then the Experience Browser vendor code will not be called.
   *
   * @returns {Boolean} - Returns true/false for whether Experience Browser vendor code should be invoked.
   */


  var shouldCallExperienceBrowser = function shouldCallExperienceBrowser() {
    var cfradAppendedToUrl = getQueryTerm(new URL(window.location.href), 'cfrad');
    var currentBrandCfrad = cfrad.getCfradKey(getTopLevelBrand());
    var isCorrectCfrad = cfradAppendedToUrl === currentBrandCfrad;
    var isExperienceBrowserIntegrationEnabled = switches.hasExperienceBrowserEnabled();
    return isCorrectCfrad && isExperienceBrowserIntegrationEnabled;
  };
  /**
   * @name buildURL
   * @private
   * @description Function that receives an array of strings (which are the data points collected on pages/features),
   * and returns the encoded Algonomy URL.
   * The base endpoint is pulled from an LD flag. Defaults to TEST.
   * We call this URL to instrument a page or feature.
   *
   * @param {Object} instrumentationArray - An array of strings meant to form the Algonomy URL.
   *
   * @return {URL} - Returns the Algonomy instrumentation URL.
   */


  var buildURL = function buildURL() {
    var instrumentationArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var endpoint = window.digitalData.get('flag.algonomy-endpoint', 'https://integration.richrelevance.com/rrserver/api/rrPlatform/recsForPlacements?');
    endpoint += instrumentationArray.join('&');
    return new URL(encodeURI(endpoint));
  };
  /**
   * @name algonomyAdapter
   * @private
   * @description Function that receives the Algonomy response and transforms it to make match Evergage response object.
   *
   * @param {Object} response - The Algonomy response object.
   *
   * @return {Object} - Returns the transform object.
   */


  var algonomyAdapter = function algonomyAdapter() {
    var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var brand = brandedPage.getBrand() === brandedPage.constants.brand.hol ? 'HCO' : 'ANF';
    var imageNotAvailableUrl = constants.anf('params.urls.IMAGEURL') + 'Image_Not_Available_' + brand;
    return response.placements.map(function (campaign) {
      var slickSliderSettings = getSliderSettings(campaign.placement);
      var productArray = campaign.recommendedProducts.map(function (product) {
        return {
          kic: product.id || '',
          imageURL: product.imageURL || imageNotAvailableUrl,
          clickTrackingURL: product.clickTrackingURL || ''
        };
      });

      var normalizedData = _objectSpread({
        rcs: response.rcs || '',
        target: campaign.placement || '',
        strategyName: campaign.strategyName || '',
        data: [{
          title: campaign.strategyMessage || '',
          products: productArray.slice(0, sliderSettings.defaultNumberOfProductsToShow)
        }],
        options: slickSliderSettings || {},
        mvtDetailed: response.mvtDetailed || []
      }, campaign.mvtTreatments && {
        mvtTreatments: campaign.mvtTreatments
      });

      logger.logPayload(logger.CONSTANTS.locations.adapter, normalizedData);
      return normalizedData;
    });
  };
  /**
   * @name buildPipeDelimitedURLParam
   * @public
   * @description Function that takes in a key and array as args to build a pipe delimited value that later gets
   * attached to the Algonomy URL.
   *
   * @param {String} key - The key of the URL param.
   * @param {Array} arr - The values to be separated by a pipe in an array
   *
   * @return {String} - Returns a pipe delimited URL param
   * @example productId=11111|22222|3333
   */


  var buildPipeDelimitedURLParam = function buildPipeDelimitedURLParam(key) {
    var arr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    return !!arr ? "".concat(key, "=").concat(arr.join('|')) : '';
  };
  /**
   * @name isEmptyObject
   * @public
   * @description Function that determines whether an object is empty or not.
   *
   * @param {Object} obj - The object in question.
   *
   * @return {Boolean} - Returns true/false
   */


  var isEmptyObject = function isEmptyObject(obj) {
    return obj && Object.keys(obj).length === 0 && Object.getPrototypeOf(obj) === Object.prototype;
  };
  /**
   * @name collectCommonDataPoints
   * @public
   * @description Function that aggregates the common data points to be collected for Algonomy for every page/feature.
   *
   * @param {Array} arr - An array to which collected data points will be pushed to.
   * @param {Boolean} isMobile - Flag to determine mobile or desktop WCS.
   * @param {String} pageKind - The name of the page/feature the user is interacting with.
   *
   * @return {Array} - Returns an array of strings that are meant to be URL params for the Algonomy call.
   */


  var collectCommonDataPoints = function collectCommonDataPoints() {
    var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var isMobile = arguments.length > 1 ? arguments[1] : undefined;
    var pageKind = arguments.length > 2 ? arguments[2] : undefined;
    var dataPointsArr = arr;
    var langId = window.digitalData.get('page.langId') || '';
    var region = window.digitalData.get('page.region') || '';
    var brand = getTopLevelBrand(); // ANF || HCO

    var lang = getLanguageFromLangId(langId); // setup consent dependent variables

    var userId = '';
    var _rcs = '';
    var hasUserGivenConsent = getUserConsent();

    if (hasUserGivenConsent) {
      userId = getUserId();
      _rcs = rcs.get();
    }

    dataPointsArr.push("apiKey=".concat(apiKeys.getApiKey(brand)), "apiClientKey=".concat(apiKeys.getApiClientKey(brand, isMobile)), "userId=".concat(userId), "sessionId=".concat(rxVisitor.get()), "rcs=".concat(_rcs), "rid=".concat(getRegionId(lang, region)), "placements=".concat(placements.getPlacement(isMobile, pageKind)), "fpb=".concat(getBrandForFPB()), 'includeMVTDetailedData=true', 'includeStrategyData=true', "lang=".concat(getLangId(lang, region))); // pass no consent params

    if (!hasUserGivenConsent) {
      dataPointsArr.push('privm=t', 'sgs=no_consent:no_consent');
    } // conditionally call Experience Browser


    if (shouldCallExperienceBrowser()) {
      dataPointsArr.push("cfrad=".concat(cfrad.getCfradKey(brand)));
    }

    return dataPointsArr;
  };
  /**
   * @name getKicFromProductsArr
   * @public
   * @description Function that receives an array of objects with product info, extracts the KIC out of the objects,
   * and returns them in an array.
   * The array of objects is collected from either the Category or Search page ANF god object. The array can be very big,
   * but Algonomy needs us to send the first 12.
   *
   * @param {Array} productsArr - An array of objects with product info. Default set to empty array.
   * @param {Number} threshold - A number to control the number of KICs to be sent to Algnoomy. Default set to 12.
   *
   * @return {Array} - Returns an array of strings that of KIC collected from product object array.
   */


  var getKicFromProductsArr = function getKicFromProductsArr() {
    var productsArr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : sliderSettings.defaultNumberOfProductsToShow;
    var first12ProductsArr = productsArr.slice(0, threshold);
    return first12ProductsArr.map(function (item) {
      return item.kic;
    });
  };
  /**
   * @name getKICValues
   * @public
   * @description Function that receives an array of objects with product info, extracts the KIC out of the objects,
   * and returns them in an array.
   * The array of objects is collected from either the Shopping Bag or Mini Bag.
   *
   * @param {Array} shoppingBagItemsArray - An array of objects with product info. Default set to empty array.
   *
   * @return {Array} - Returns an array of strings that of KIC collected from product object array.
   */


  var getKICValues = function getKICValues() {
    var shoppingBagItemsArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var kicArr = [];
    shoppingBagItemsArray.forEach(function (product) {
      return kicArr.push(product.item.productContent.kicId);
    });
    return kicArr;
  };
  /**
   * @name getQueryTerm
   * @public
   * @description Function that returns the value of a URL query param as it appears in the browser.
   *
   * @param {URL} url - The entire URL where the term is searched for.
   * @param {String} term - The term to be searched for in the URL.
   *
   * @return {String} - Returns a string.
   */


  var getQueryTerm = function getQueryTerm(url, term) {
    return url.searchParams.get(term);
  };
  /**
   * @name getPersonalizationTestValues
   * @public
   * @description Function that does the following
   *    1. If mvtDetailed is empty returns "null"
   *    2. Gets mvtDetailed and formats it into this = testId:control:treatmentId:treatmentName
   *    3. Returns mvtDetailed with the expected format, or "null" if no values
   *
   * @param {Array} mvtDetailed - An array of objects with test cases data.
   *
   * @return {String} - Returns algonomy values in the following format, testId:control:treatmentId:treatmentName or "null" if no values'.
   */


  var getPersonalizationTestValues = function getPersonalizationTestValues(mvtDetailed) {
    if (!(mvtDetailed !== null && mvtDetailed !== void 0 && mvtDetailed.length)) return 'null';
    var personalizationTestValues = mvtDetailed.filter(function (item) {
      return item.eligible;
    }).map(function (item) {
      return "".concat(item.testId, ":").concat(item.control, ":").concat(item.treatmentId, ":").concat(item.treatmentName);
    }).join(',');
    return personalizationTestValues || 'null';
  };
  /**
   * @name callAlgonomy
   * @public
   * @description Function that does the following
   *    1. receives the instrumentation array object
   *    2. determines whether the Algonomy call should be made
   *    3. calls a private function to build the Algonomy URL if the call is supposed to be made
   *    4. if the Algonomy URL is called, passes the response through the adapter to normalize the data to match Evergage response
   *    5. triggers a dataBridge event to initialize rendering of the recommendation slider
   *
   * @param {Object} instrumentationArray - An array of strings meant to form the Algonomy URL.
   * listening for now to train Algonomy models with region ID updates.
   *
   * @return {Undefined} - Returns nothing.
   */


  var callAlgonomy = function callAlgonomy() {
    var instrumentationArray = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (shouldCallAlgonomy()) {
      var url = buildURL(instrumentationArray);
      logger.logPayload([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.collectedDataPoints], instrumentationArray);
      $.ajax({
        type: 'GET',
        url: url,
        success: function success(response) {
          rcs.set(response.rcs); // handle analytics

          var onLoadAnalyticsData = collectOnLoadAnalyticsData(response);
          window.digitalData.set('algonomy.onLoad', onLoadAnalyticsData);
          window.digitalData.trigger('analytics.recs_loaded', onLoadAnalyticsData);

          if (typeof response.placements !== 'undefined') {
            var normalizedAlgonomyData = algonomyAdapter(response); // only trigger the event to render recs if the quickview modal is not open

            if (!isQuickviewOpened()) {
              normalizedAlgonomyData.forEach(function (recs) {
                return window.digitalData.trigger('cdp-recommendations.init', recs);
              });
            } // internal debug tools


            logger.logMessage([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.algonomyCallMade]);
            logger.logPayload([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.placementAvailable], response.placements);
            logger.logPayload([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.analyticsLoadEventFired], onLoadAnalyticsData);
          } else {
            logger.logMessage([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.placementNotAvailable]);
          } // custom JS provided by Algonomy that enables Experience Browser


          if (shouldCallExperienceBrowser()) {
            recsForPlacementCallbackForCfrad.recsForPlacementsCallback(response);
          }
        },
        error: function error(_error) {
          logger.logPayload(logger.CONSTANTS.messages.error, _error);
          window.digitalData.trigger('analytics.recs_loaded');
        }
      });
    } else {
      logger.logMessage(logger.CONSTANTS.messages.algonomyCallNotMade);
    }
  };
  /**
   * @name callClickTracking
   * @public
   * @description Function that receives the click tracking URL and calls it.
   * All we have to do is simply call the URL - no need for success or error tracking/handling.
   *
   * @param {String} url - The click tracking URL that we receive from the original Algonomy call.
   *
   * @return {Undefined} - Returns nothing.
   */


  var callClickTracking = function callClickTracking() {
    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    $.ajax({
      type: 'GET',
      url: url
    }); // debug tools

    logger.logMessage(logger.CONSTANTS.messages.clickTrackingUrlFired);
  };
  /**
   * @name getOCNProductInfo
   * @public
   * @description Function receives an object with cart item details, extracts three separate arrays of
   *    1. KICs of products bought by the user
   *    2. prices of products bought by the user
   *    3. quantity of each product bought by the user
   * and returns an object with these arrays in it.
   *
   * @param {Object} cartItemDetails - The cart item details object.
   *
   * @return {Object} - Returns an object with kicArr, pricePerItemArr and quantityArr.
   */


  var getOCNProductInfo = function getOCNProductInfo() {
    var cartItemDetails = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var sortedDetailsObj = {};
    var pricePerItemArr = [];
    var quantityArr = [];
    cartItemDetails.items.forEach(function (cartItem) {
      var itemKicId = cartItem.item.kicId;

      if (!(itemKicId in sortedDetailsObj)) {
        sortedDetailsObj[itemKicId] = {};
      }

      if (sortedDetailsObj[itemKicId].quantity) {
        sortedDetailsObj[itemKicId].quantity = sortedDetailsObj[itemKicId].quantity + 1;
      } else {
        sortedDetailsObj[itemKicId].quantity = 1;
        sortedDetailsObj[itemKicId].price = cartItem.price;
      }
    });
    var kicArr = Object.keys(sortedDetailsObj);
    kicArr.forEach(function (kic) {
      var kicDetailObj = sortedDetailsObj[kic];
      pricePerItemArr.push(kicDetailObj.price);
      quantityArr.push(kicDetailObj.quantity);
    });
    return {
      kicArr: kicArr,
      pricePerItemArr: pricePerItemArr,
      quantityArr: quantityArr
    };
  };
  /**
   * @name getChi
   * @public
   * @description Function receives the breadcrumb DOM element from PDP and returns the cat-id by scraping the DOM.
   *
   * @param {HTMLElement} $breadcrumb - The breadcrumb DOM element from PDP.
   *
   * @return {String|Array} - Returns pipe delimited string of the cat-id
   */


  var getChi = function getChi($breadcrumb) {
    if (!$breadcrumb) {
      return '';
    }

    var $listElems = $breadcrumb.querySelectorAll('.breadcrumbs-link');
    var chiArr = [];
    $listElems.forEach(function (elem) {
      chiArr.push(elem.dataset.catid);
    });
    return chiArr;
  };
  /**
   * @name collectOnLoadAnalyticsData
   * @public
   * @description Function receives the instrumentation call response object, packages on load analytics data and returns it.
   * @param {Object} data - The instrumentation network call response.
   * @returns {Object} - returns the on load analytics object.
   */


  var collectOnLoadAnalyticsData = function collectOnLoadAnalyticsData() {
    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var hasUserGivenConsent = getUserConsent();
    return {
      rcs: hasUserGivenConsent ? data.rcs || '' : '',
      mvtDetailed: data.mvtDetailed || '',
      userId: hasUserGivenConsent ? getUserId() : '',
      personalizationTest: getPersonalizationTestValues(data.mvtDetailed)
    };
  };
  /**
   * @name collectOnClickAnalyticsData
   * @public
   * @description Function receives the user click event object on product card, packages analytics data and returns it.
   *
   * @param {Object} event - The user click event object.
   *
   * @return {Object} - Returns the on click analytics data object
   */


  var collectOnClickAnalyticsData = function collectOnClickAnalyticsData(event) {
    // Getting parent element to accommodate event bubbling changes for analytics
    var currentTarget = event.currentTarget.parentElement;

    var onClickAnalyticsData = _objectSpread(_objectSpread({}, window.digitalData.get('algonomy.onLoad', {})), {}, {
      placement: currentTarget.dataset.cdpPlacement || '',
      position: currentTarget.dataset.cdpProductPosition || '',
      strategyName: currentTarget.dataset.cdpStrategyName || '',
      mvtTreatments: [{
        control: currentTarget.dataset.mvtControl || '',
        testId: currentTarget.dataset.mvtTestId || '',
        testType: currentTarget.dataset.mvtTestType || '',
        treatmentId: currentTarget.dataset.mvtTreatmentId || '',
        treatmentName: currentTarget.dataset.mvtTreatmentName || ''
      }]
    });

    logger.logPayload([logger.CONSTANTS.locations.algonomyCall, logger.CONSTANTS.messages.analyticsClickEventFired], onClickAnalyticsData);
    return onClickAnalyticsData;
  };
  /**
   * @name isMobileApp
   * @public
   * @description Function that receives the URL of the page and checks if it contains params to indicate if its origin
   * was Apps.
   *
   * @param {String} url - The entire URL of the current page.
   *
   * @return {Boolean} - Returns true/false.
   */


  var isMobileApp = function isMobileApp(url) {
    var urlCmpMobileAppsIdentifierArr = ['AnfMobileApp', 'HCoMobileApp'];
    var urlCmp = getQueryTerm(url, 'cmp');
    return urlCmpMobileAppsIdentifierArr.some(function (cmp) {
      return (urlCmp === null || urlCmp === void 0 ? void 0 : urlCmp.indexOf(cmp)) > -1;
    });
  }; // exports


  exports.getPageKind = getPageKind;
  exports.getIsMobile = getIsMobile;
  exports.collectOnLoadAnalyticsData = collectOnLoadAnalyticsData;
  exports.shouldCallAlgonomy = shouldCallAlgonomy;
  exports.buildPipeDelimitedURLParam = buildPipeDelimitedURLParam;
  exports.isEmptyObject = isEmptyObject;
  exports.collectCommonDataPoints = collectCommonDataPoints;
  exports.getKicFromProductsArr = getKicFromProductsArr;
  exports.getKICValues = getKICValues;
  exports.callAlgonomy = callAlgonomy;
  exports.getOCNProductInfo = getOCNProductInfo;
  exports.getChi = getChi;
  exports.isMobileApp = isMobileApp;
  exports.getQueryTerm = getQueryTerm;
  exports.algonomyAdapter = algonomyAdapter;
  exports.callClickTracking = callClickTracking;
  exports.collectOnClickAnalyticsData = collectOnClickAnalyticsData;
  exports.debounceAlgonomyCall = debounceAlgonomyCall;
  exports.getPersonalizationTestValues = getPersonalizationTestValues;
  exports.isPdpPage = isPdpPage;
  exports.isQuickviewOpened = isQuickviewOpened;
  return exports;
});

redesign.define('globalModulesHelpers/substituteTMNTParams',[], function () {
  'use strict';

  var publicMembers = {
    substitute: function (str, params) {
      var pattern = '[{]__INDEX__[}]';
      var result = str;
      var expr;
      for (var i = 0; i < params.length; i++) {
        expr = new RegExp(pattern.replace('__INDEX__', i), 'g');
        result = result.replace(expr, params[i]);
      }

      return result;
    }
  };

  return publicMembers;
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

redesign.define('es6CoreServices/recommendationSliderHelpers',['exports', 'anfUtil/constants', 'globalModulesHelpers/substituteTMNTParams'], function (exports, constants, substituteTMNTParams) {
  'use strict';
  /**
   * @name isProductListV3Enabled
   * @public
   * @description Function that returns whether product list v3 flag is turned on or not
   *
   * @return {Boolean} - Returns a boolean.
   */

  var isProductListV3Enabled = function isProductListV3Enabled() {
    var _window$digitalData, _window$digitalData$e;

    var storeAttributeFlags = (_window$digitalData = window.digitalData) === null || _window$digitalData === void 0 ? void 0 : (_window$digitalData$e = _window$digitalData.export()) === null || _window$digitalData$e === void 0 ? void 0 : _window$digitalData$e.flag;
    return storeAttributeFlags ? storeAttributeFlags['has-product-list-v3-enabled'] : false;
  };
  /**
   * @name generateProductPriceObject
   * @public
   * @description This function will add a 'priceObj' object to the each product object in the product list array
   * @param {String} productsList - An array of objects. Each object contains product details
   *
   * @return {String} - Returns productsList array, with each object containing 'priceObj'
   */


  var generateProductPriceObject = function generateProductPriceObject(productsList) {
    return productsList.map(function (product) {
      var clearanceText = product.priceFlag === 'clearance' ? constants.anf('messaging.catalogV2.TMNT.cardClearance.value') : null;
      var priceType = product.priceFlag === 'clearance' ? product.priceFlag : '';
      var listPrice = product.prices.list.price;
      var listPriceFormatted = product.prices.list.formatted;
      var offerPrice = product.prices.offer.price;
      var offerPriceFormatted = product.prices.offer.formatted;
      var hasDiscountPricing = listPrice > offerPrice; // Ignoring range pricing & member pricing

      var priceObjConfiguration = hasDiscountPricing ? {
        description: substituteTMNTParams.substitute(constants.anf('messaging.product.GLB_PRICE_DESC_IND_IND'), [listPriceFormatted, offerPriceFormatted]),
        priceText: [{
          formattedPriceText: listPriceFormatted,
          priceTextType: 'original'
        }, {
          formattedPriceText: offerPriceFormatted,
          priceTextType: 'discount'
        }]
      } : {
        description: listPriceFormatted,
        priceText: [{
          priceTextType: '',
          formattedPriceText: listPriceFormatted
        }]
      };
      return _objectSpread(_objectSpread({}, product), {}, {
        priceObj: _objectSpread({
          priceType: priceType,
          clearanceText: clearanceText
        }, priceObjConfiguration)
      });
    });
  };

  exports.isProductListV3Enabled = isProductListV3Enabled;
  exports.generateProductPriceObject = generateProductPriceObject;
  return exports;
});

redesign.define('globalModules/productSlider',[
  'anfUtil/testFramework',
  'anfcore/components/slider',
  'coreClass/ANFImage',
  'globalPartial/productSliderTemplate',
  'globalPartial/productSliderTemplateV3',
  'util/algonomy/helpers',
  'es6CoreServices/recommendationSliderHelpers'
],
function productSlider(
  test,
  dsSlider,
  ANFImage,
  globalPartialProductSliderTemplate,
  globalPartialProductSliderTemplateV3,
  algonomyHelpers,
  recommendationSliderHelpers
) {
  'use strict';

  var NO_TARGET = 'No target node provided.';
  var INVALID_ARRAY = 'No array of products provided.';
  var sliderDefaults = {
    clickable: true,
    infinite: true,
    slidesToShow: 2,
    slidesToScroll: 2,
    dots: false,
    arrows: true,
    centerMode: true,
    mobileFirst: true,
    respondTo: 'window',
    responsive: [
      {
        breakpoint: 0,
        settings: {
          arrows: true,
          centerMode: false,
          slidesToShow: 2,
          slidesToScroll: 2
        }
      },
      {
        breakpoint: 540,
        settings: {
          arrows: true,
          centerMode: false,
          slidesToShow: 3,
          slidesToScroll: 3
        }
      },
      {
        breakpoint: 825,
        settings: {
          arrows: true,
          centerMode: false,
          slidesToShow: 4,
          slidesToScroll: 4
        }
      },
      {
        breakpoint: 1200,
        settings: {
          arrows: true,
          centerMode: false,
          slidesToShow: 5,
          slidesToScroll: 5
        }
      }
    ]
  };

  /**
   * @description Function to build the slider html and instantiate slick slider
   * @param  {array} productArray - an array of product objects
	 * @param  {object} targetNode - an object the slider will be injected in to
    * @param  {object} settings - an object used to override the default slider settings
    * @param  {function} customDataProperties - function that accepts a product and returns an array of key/value pairs to construct custom data properties
    * @return {undefined}
    */
  function buildProductSlidesHtml(productArray, targetNode, settings, customDataProperties) {
    var dsSliderSettings = $.extend({}, sliderDefaults, settings);
    var productHtml;
    var localProductArray;

    var isProductListV3Enabled = recommendationSliderHelpers.isProductListV3Enabled();
    var normalizeFunction = isProductListV3Enabled ? normalizeProductDataV3 : normalizeProductData;
    var templateFunction = isProductListV3Enabled ? globalPartialProductSliderTemplateV3.templates.productSliderTemplateV3 : globalPartialProductSliderTemplate.templates.productSliderTemplate;

    localProductArray = normalizeFunction(productArray, customDataProperties);
    productHtml = templateFunction(localProductArray);

    // Disabling for this line that needs to manipulate the DOM
    // eslint-disable-next-line no-param-reassign
    targetNode.innerHTML = productHtml;

    dsSlider.default().initializeSlider(targetNode, dsSliderSettings);

    bindEvents(targetNode);
    bindClickEvent(targetNode);

    // add the automation testing attribute to the slick slider wrapper
    targetNode.setAttribute('data-aui', 'product-slider');
  }

  /**
   * @description Function that binds a custom function to the error trigger
   * @param  {object} targetNode - an object the slider will be injected in to
   * @return {undefined}
   */
  function bindEvents(targetNode) {
    var sliderImages = targetNode.querySelectorAll('.product-card__image');
    for (var i = 0, len = sliderImages.length; i < len; i++) {
      setImageErrorHandler(sliderImages[i]);
    }
  }
  /*
   * TODO: Revert to targetNode.querySelectorAll('.faux-button') when `Find a better way to pass additional data
   * from an event that opens a QV model to analytics` todo is resolved
   * Find a better way to pass additional data from an event that opens a QV model to analytics
   */
  function bindClickEvent(targetNode) {
    var productCards = targetNode.querySelectorAll('.faux-button .js-product-card-wrapper');
    productCards.forEach(function forEachFn(product) {
      product.addEventListener('click', function clickHandler(event) {
        var clickTrackingUrl = new URL(event.currentTarget.parentElement.getAttribute('data-cdp-product-click-tracking-url'));
        var analyticsData = algonomyHelpers.collectOnClickAnalyticsData(event);

        // Wrap this in a try catch just in case the browser does not let you mutate click event
        try {
        // TODO: Find a better way to pass additional data from an event that opens a QV model to analytics
        // eslint-disable-next-line no-param-reassign
          event.analytics = analyticsData;
        } catch (ewww) {
          // do nothing
        }

        algonomyHelpers.callClickTracking(clickTrackingUrl);
        window.digitalData.set('algonomy.onClick', analyticsData);
        window.digitalData.trigger('analytics.recs_clicked', analyticsData);
      });
    });
  }

  function setImageErrorHandler(imgNode) {
    $(imgNode).one('error', function imgError() {
      imageErrorHandler(this);
    });
  }

  /**
   * @description Function to replace all slider images src with data src
   * @param  {object} imgNode - node of the image that failed to load
   * @return {undefined}
   */
  function imageErrorHandler(imgNode) {
    var failedProducts = $(imgNode).parents('.js-product-slider').find('.product-card__image[data-productId="' + imgNode.dataset.productid + '"]');

    for (var i = 0, len = failedProducts.length; i < len; i++) {
      failedProducts[i].src = failedProducts[i].dataset.fallback;
    }
  }

  /**
   * @description Function to generate a string of custom data properties
   * @param  {array} properties - Array of key/value pairs for custom properties
   * @return {string} - Empty string or a string of concatenated data properties
   */
  function generateCustomDataProperties(properties) {
    var result = [];

    if (test.type.array(properties) && !test.array.empty(properties)) {
      result = properties.map(function propertiesMap(prop) {
        if (prop.key) {
          return 'data-' +
            prop.key +
            (typeof prop.value !== 'undefined' && prop.value !== '' ? "='" + prop.value + "'" : '');
        }

        return '';
      });

      return result.join(' ');
    }

    return '';
  }

  function capitalizeFirstLetter(word) {
    if (typeof word === 'string' ||  word instanceof String) {
      return word.charAt(0).toUpperCase() + word.slice(1);
    }
    return '';
  }

  /**
   * @description Function that performs required string concatenation to properly build a slider
   * Same as normalizeProductData, adpated for product list v3 response
   * @param  {array} productArray - array of product objects
   * @param  {function} customProperties - sets custom properties on individual products
   * @return {array} - array of modified product objects
   */
  function normalizeProductDataV3(productArray, customProperties) {
    var normalizedDataArray = productArray;
    var imageWidth = 347;
    var imageName;

    for (var i = 0, len = normalizedDataArray.length; i < len; i++) {
      var product = normalizedDataArray[i];
      var propsArray = test.type.function(customProperties) ? customProperties(product) : [];
      var faceout = product.primaryFaceOut || 'prod';
      var faceoutType = capitalizeFirstLetter(faceout.slice(0, faceout.search(/\d/)));
      var customDataProperties = generateCustomDataProperties(propsArray);
      var imageSet = 'imageSet' + faceoutType;

      product.productTemplateProps = "data-collectionid='" + product.collectionId +
          "' data-productid='" + product.productId +
          "' data-imageid='" + product.kicId + // image id is just kicId
          "' data-faceout='" + faceout + "' " +
          "' data-product-brand='" + product.brand + "' " +
          customDataProperties;

      imageName = product[imageSet] ? product[imageSet][0] : product.imageSetProd[0];

      product.imagePath = ANFImage.instance()
        .setImageName(imageName)
        .setWidth(imageWidth)
        .url;

      product.imageFallbackPath = ANFImage.instance()
        .setImageName(product.kicId + '_prod1')
        .setWidth(imageWidth)
        .url;
    }
    return normalizedDataArray;
  }

  /**
   * @description Function that performs required string concatenation to properly build a slider
   * @param  {array} productArray - array of product objects
   * @param  {function} customProperties - sets custom properties on individual products
   * @return {array} - array of modified product objects
   */
  function normalizeProductData(productArray, customProperties) {
    var normalizedDataArray = productArray.filter(function removeEmptyImageSet(product) {
      return !test.object.empty(product.imageSet);
    });
    var imageWidth = 347;
    var imageName;

    for (var i = 0, len = normalizedDataArray.length; i < len; i++) {
      var product = normalizedDataArray[i];
      var faceout = extractFaceout(product.productAttrs.PrimaryFaceOutImage);
      var propsArray = test.type.function(customProperties) ? customProperties(product) : [];
      var faceoutType = faceout.slice(0, faceout.search(/\d/));
      var customDataProperties = generateCustomDataProperties(propsArray);

      product.productTemplateProps = "data-collectionid='" + product.collection +
        "' data-productid='" + product.productId +
        "' data-imageid='" + product.imageId +
        "' data-faceout='" + faceout + "' " +
        "' data-product-brand='" + product.productAttrs.brand + "' " +
        customDataProperties;

      imageName = product.imageSet[faceoutType] ? product.imageSet[faceoutType][0].id : product.imageSet.prod[0].id;

      product.imagePath = ANFImage.instance()
        .setImageName(imageName)
        .setWidth(imageWidth)
        .url;

      product.imageFallbackPath = ANFImage.instance()
        .setImageName(product.imageId + '_prod1')
        .setWidth(imageWidth)
        .url;
    }
    return normalizedDataArray;
  }

  /**
   * @description Function that extracts the faceout value from the image ID
   * @param  {string} PrimaryFaceOutImage - image ID
   * @return {string} - image faceout value
   */
  function extractFaceout(PrimaryFaceOutImage) {
    if (test.type.string(PrimaryFaceOutImage)) {
      var faceout = PrimaryFaceOutImage.split('_');
      return faceout[faceout.length - 1];
    }

    return 'prod1';
  }

  /**
   * @description Function that checks if the parameter is an Array
   * @param  {array} productArray - an array of product objects
   * @return {undefined}
   */
  function validateProductArray(productArray) {
    if (
      test.type.not.array(productArray, false) ||
      (!productArray.length)
    ) {
      throw new Error(INVALID_ARRAY);
    }
  }

  /**
   * @description Function that checks id the parameter is an Object
   * @param  {object} targetNode - an object the slider will be injected in to
   * @return {undefined}
   */
  function validateTargetNode(targetNode) {
    if (test.object.null(targetNode, false)) {
      throw new Error(NO_TARGET);
    }
  }

  function resolveSliderOpts(overrides) {
    return $.extend({}, sliderDefaults, overrides);
  }

  var publicMembers = {
    /**
     * @description Function that instantiates the product slider
     * @param  {array} productArray - an array of product objects
     * @param  {object} targetNode - an object the slider will be injected in to
     * @param  {object} settings - an object used to override the default slider settings
     * @return {undefined}
     */
    'init': function init(productArray, targetNode, settings) {
      var localSettings = $.extend(true, {}, settings);
      var sliderSettings = resolveSliderOpts(localSettings.slider);

      validateTargetNode(targetNode);

      validateProductArray(productArray);

      buildProductSlidesHtml(productArray, targetNode, sliderSettings, localSettings.dataProps);
    }
  };

  return publicMembers;
});

redesign.define('coreServices/generateProductPriceObject',['globalModulesHelpers/substituteTMNTParams'], function generateProductPriceObject(substituteTMNTParams) {
  'use strict';

  var showDiscount = function showDiscountPercentage(product) {
    return product.discountPercentage && parseInt(product.discountPercentage, 10) > 0 && ANF.catalog.data.selectedSort.sortOption === 'discount';
  };

  var getMemberPriceConfig = function getMemberPriceConfig(product) {
    var hasRangeMemberPricing = product.highContractPrice > product.lowContractPrice;
    var formattedLowMemberPrice = product.lowContractPriceFmt;
    var formattedHighMemberPrice = product.highContractPriceFmt;
    var memberPriceObj = {
      clearanceText: ANF.messaging.loyalty.MEMBER_CLEARANCE,
      priceType: 'member',
      priceText: {
        priceTextType: 'member'
      },
      'data-prop': {
        aui: 'member-price'
      }
    };

    if (hasRangeMemberPricing) {
      memberPriceObj.description = substituteTMNTParams.substitute(ANF.messaging.loyalty.MEMBER_PRICE_DESC_RANGE, [
        formattedLowMemberPrice,
        formattedHighMemberPrice
      ]);
      memberPriceObj.priceText.formattedPriceText = formattedLowMemberPrice + ' - ' + formattedHighMemberPrice;
    } else {
      memberPriceObj.description = substituteTMNTParams.substitute(ANF.messaging.loyalty.MEMBER_PRICE_DESC_REG, [formattedLowMemberPrice]);
      memberPriceObj.priceText.formattedPriceText = formattedLowMemberPrice;
    }

    return memberPriceObj;
  };

  return function getProductArray(products) {
    var productArray = products;

    for (var i = 0, len = productArray.length; i < len; i++) {
      var product = products[i];

      var clearanceText = product.showClearanceBadge ? ANF.messaging.catalogV2.TMNT.cardClearance.value : null;

      var formattedLowListPrice = product.lowListPriceFmt;
      var formattedHighListPrice = product.highListPriceFmt;
      var formattedLowPrice = product.lowPriceFmt;
      var formattedHighPrice = product.highPriceFmt;

      var hasRangeListPricing = product.highListPrice > product.lowListPrice;
      var hasRangeOfferPricing = product.highPrice > product.lowPrice;
      var hasRangePricing = hasRangeListPricing || hasRangeOfferPricing;
      var hasDiscountHighPricing = product.highListPrice > product.highPrice;
      var hasDiscountLowPricing = product.lowListPrice > product.lowPrice;
      var hasDiscountPricing = hasDiscountHighPricing || hasDiscountLowPricing;

      var priceType = product.showClearanceBadge ? 'clearance' : '';
      var priceObj = {
        priceType: priceType,
        clearanceText: clearanceText
      };

      var priceObjConfiguration = {};

      if (product.discountPercentage) {
        priceObj.discountPercentage = product.discountPercentage.toString();
      }

      priceObj.showDiscountPercentage = showDiscount(product);

      // Wonky logic to specifically deal with the outlet-pricing case where the product OFFER (low) price can
      // actually be higher than the product list (HIGH) price. TODO: Remove this once the underlying issue is resolved.
      if (product.lowPrice > product.lowListPrice) {
        priceObjConfiguration = {
          description: formattedLowPrice,
          priceText: [
            {
              priceTextType: '',
              formattedPriceText: formattedLowPrice
            }
          ]
        };
      } else if (hasRangePricing && !hasDiscountPricing) {
        // Range list price
        priceObjConfiguration = {
          description: 'Between ' + formattedLowListPrice + ' and ' + formattedHighListPrice,
          priceText: [
            {
              priceTextType: '',
              formattedPriceText: formattedLowListPrice + ' - ' + formattedHighListPrice
            }
          ]
        };
      } else if (hasRangePricing && hasDiscountPricing) {
        if (!hasRangeListPricing && hasRangeOfferPricing) {
          priceObjConfiguration = {
            description: 'Was ' + formattedLowListPrice + ', now between ' + formattedLowPrice + ' and ' + formattedHighPrice,
            priceText: [
              {
                formattedPriceText: formattedLowListPrice,
                priceTextType: 'original'
              },
              {
                formattedPriceText: formattedLowPrice + ' - ' + formattedHighPrice,
                priceTextType: 'discount'
              }
            ]
          };
        } else if (hasRangeListPricing && !hasRangeOfferPricing) {
          priceObjConfiguration = {
            description: 'Was between ' + formattedLowListPrice + ' and ' + formattedHighListPrice + ', now ' + formattedLowPrice,
            priceText: [
              {
                formattedPriceText: formattedLowListPrice + ' - ' + formattedHighListPrice,
                priceTextType: 'original'
              },
              {
                formattedPriceText: formattedLowPrice,
                priceTextType: 'discount'
              }
            ]
          };
        } else {
          priceObjConfiguration = {
            description:
							'Was between ' +
							formattedLowListPrice +
							' and ' +
							formattedHighListPrice +
							', now between ' +
							formattedLowPrice +
							' and ' +
							formattedHighPrice,
            priceText: [
              {
                formattedPriceText: formattedLowListPrice + ' - ' + formattedHighListPrice,
                priceTextType: 'original'
              },
              {
                formattedPriceText: formattedLowPrice + ' - ' + formattedHighPrice,
                priceTextType: 'discount'
              }
            ]
          };
        }
      } else if (!hasRangePricing && hasDiscountPricing) {
        priceObjConfiguration = {
          description: 'Was ' + formattedLowListPrice + ', now ' + formattedLowPrice,
          priceText: [
            {
              formattedPriceText: formattedLowListPrice,
              priceTextType: 'original'
            },
            {
              formattedPriceText: formattedLowPrice,
              priceTextType: 'discount'
            }
          ]
        };
      } else {
        priceObjConfiguration = {
          description: formattedLowListPrice, // this should be lowListPrice !!!!!
          priceText: [
            {
              formattedPriceText: formattedLowListPrice,
              priceTextType: ''
            }
          ]
        };
      }

      product.priceObj = $.extend(priceObj, priceObjConfiguration);

      /*
			display member price only if
		  	1. its gt 0
				2. lowContractPrice < lowPrice
        3. lowContractPrice < lowListPrice
      */
      if (
        ANF.params.storeAttributes.loyalty.memberPricingEnabled &&
				product.lowContractPrice > 0 &&
				product.lowContractPrice < product.lowPrice &&
				product.lowContractPrice < product.lowListPrice
      ) {
        product.memberPriceObj = $.extend(true, {}, getMemberPriceConfig(product));
      }

      if (product && product.productAttrs && product.productAttrs.imageAutoFlip === 'true') {
        product.dataImageAutoFlip = 'data-image-auto-flip';
      }
    }

    return productArray;
  };
});

redesign.define('es6Adapter/categoryView',['exports', 'anfUtil/constants'], function categoryViewAdapter(exports, coreConstants) {
  'use strict';

  var CONSTANTS = Object.create(Object.prototype, {
    REASONS: {
      value: Object.create(Object.prototype, {
        AJAX_OK: {
          value: 1,
          message: 'ok'
        },
        AJAX_FAIL: {
          value: 2,
          message: 'fail'
        },
        INVALID_PARAMS: {
          value: 3,
          message: 'invalid params'
        }
      })
    }
  });

  var getApiUrl = function getApiUrl(settings) {
    var categoryViewApiUrl = coreConstants.anf('params.storeAttributes.categoryViewApiUrl');
    var catalogId = coreConstants.anf('params.storeAttributes.idList.catalogId');
    var catIdentifierPrefix = coreConstants.anf('params.storeAttributes.catIdentifierPrefix');
    return "".concat(categoryViewApiUrl + (catIdentifierPrefix + settings.commonCatId).trim(), "?catalogId=").concat(catalogId, "&responseFormat=json");
  };

  var performApiRequest = function performApiRequest(settings) {
    var deferredObject = new $.Deferred();
    var ajaxSettings;

    try {
      ajaxSettings = {
        contentType: 'application/json',
        dataType: 'json',
        type: 'GET',
        url: getApiUrl(settings)
      };
      $.ajax(ajaxSettings).done(function (ajaxData, ajaxTextStatus, ajaxJqXHR) {
        deferredObject.resolve({
          ajaxData: ajaxData,
          ajaxJqXHR: ajaxJqXHR,
          ajaxTextStatus: ajaxTextStatus,
          reason: CONSTANTS.REASONS.AJAX_OK,
          message: CONSTANTS.REASONS.AJAX_OK.message
        });
      }).fail(function (ajaxJqXHR, ajaxTextStatus, ajaxErrorThrown) {
        deferredObject.reject({
          ajaxErrorThrown: ajaxErrorThrown,
          ajaxJqXHR: ajaxJqXHR,
          ajaxTextStatus: ajaxTextStatus,
          reason: CONSTANTS.REASONS.AJAX_FAIL,
          message: CONSTANTS.REASONS.AJAX_FAIL.message
        });
      });
    } catch (_ref) {
      var _eMsg = _ref.message;
      deferredObject.reject({
        _eMsg: _eMsg,
        reason: CONSTANTS.REASONS.INVALID_PARAMS
      });
    }

    return deferredObject.promise();
  };

  exports.get = function (settings) {
    return performApiRequest(settings);
  };

  return exports;
});

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

redesign.define('es6HomeModules/marketingProductSlider',['exports', 'globalModules/productSlider', 'coreServices/generateProductPriceObject', 'coreServices/adapter/category', 'es6Adapter/categoryView'], function marketingProductSlider(exports, productSlider, generateProductPriceObject, categoryAPIAdapter, categoryViewAPIAdapter) {
  'use strict';

  var NO_CAT_ID = 'No category id found on the target node.';
  var CATEGORY_API_CALL_FAIL = 'Category API call failed.';
  var CATEGORY_VIEW_CALL_FAIL = 'Category View API call failed.';
  var NO_PRODUCTS = 'No product data returned from API.';

  function getProductSliders(parent) {
    var allCatDrivenProductSliders = [].concat(_toConsumableArray(parent.querySelectorAll('.js-product-slider[data-categoryid]:not(.slick-initialized)')), _toConsumableArray(parent.querySelectorAll('.js-product-slider[data-cat-identifier]:not(.slick-initialized)'))).reduce(function (acum, element) {
      if (element.dataset.categoryid !== '' || element.dataset.catIdentifier !== '') acum.valid.add(element);
      if (element.dataset.categoryid === '' && element.dataset.catIdentifier === '') acum.invalid.add(element);
      return acum;
    }, {
      valid: new Set(),
      invalid: new Set()
    });

    if (allCatDrivenProductSliders.invalid.length) {
      // eslint-disable-next-line no-console
      allCatDrivenProductSliders.invalid.forEach(function (element) {
        return console.error(NO_CAT_ID, element);
      });
    }

    return _toConsumableArray(allCatDrivenProductSliders.valid);
  }

  function setSliderWaypoints(sliderTarget) {
    return new Waypoint({
      element: sliderTarget,
      handler: function handler() {
        if (typeof this.destroy === 'function') this.destroy();
        productSliderHandler(this.element).fail(function failure(e) {
          // eslint-disable-next-line no-console
          console.error(e, sliderTarget);
        });
      },
      offset: '180%'
    });
  }

  function getCategoryId(targetNode) {
    var deferredObject = new $.Deferred();
    var commonCatId = targetNode.getAttribute('data-cat-identifier');
    var categoryId = '';

    if (commonCatId) {
      categoryViewAPIAdapter.get({
        commonCatId: commonCatId
      }).done(function success(data) {
        var _data$ajaxData$Catalo, _data$ajaxData, _data$ajaxData$Catalo2, _data$ajaxData$Catalo3, _data$ajaxData$Catalo4, _categoryId;

        categoryId = (_data$ajaxData$Catalo = data === null || data === void 0 ? void 0 : (_data$ajaxData = data.ajaxData) === null || _data$ajaxData === void 0 ? void 0 : (_data$ajaxData$Catalo2 = _data$ajaxData.CatalogGroupView) === null || _data$ajaxData$Catalo2 === void 0 ? void 0 : (_data$ajaxData$Catalo3 = _data$ajaxData$Catalo2[0]) === null || _data$ajaxData$Catalo3 === void 0 ? void 0 : (_data$ajaxData$Catalo4 = _data$ajaxData$Catalo3.uniqueID) === null || _data$ajaxData$Catalo4 === void 0 ? void 0 : _data$ajaxData$Catalo4.trim()) !== null && _data$ajaxData$Catalo !== void 0 ? _data$ajaxData$Catalo : '';

        if ((_categoryId = categoryId) !== null && _categoryId !== void 0 && _categoryId.length) {
          deferredObject.resolve(categoryId);
        } else {
          deferredObject.reject(new Error(NO_CAT_ID));
        }
      }).fail(function failure() {
        deferredObject.reject(new Error(CATEGORY_VIEW_CALL_FAIL));
      });
    } else {
      var _categoryId2;

      categoryId = targetNode.getAttribute('data-categoryId');

      if ((_categoryId2 = categoryId) !== null && _categoryId2 !== void 0 && _categoryId2.length) {
        deferredObject.resolve(categoryId);
      } else {
        deferredObject.reject(new Error(NO_CAT_ID));
      }
    }

    return deferredObject.promise();
  }

  function productSliderHandler(targetNode) {
    var deferredObject = new $.Deferred();
    getCategoryId(targetNode).done(function successCatId(catId) {
      categoryAPIAdapter.get({
        categoryId: catId.trim(),
        rows: 50
      }).done(function success(data) {
        if (!(targetNode.classList.contains('.slick-initialized') && !targetNode.querySelector('.slick-initialized'))) {
          var _data$ajaxData$produc, _data$ajaxData2;

          var productArray = (_data$ajaxData$produc = data === null || data === void 0 ? void 0 : (_data$ajaxData2 = data.ajaxData) === null || _data$ajaxData2 === void 0 ? void 0 : _data$ajaxData2.products) !== null && _data$ajaxData$produc !== void 0 ? _data$ajaxData$produc : [];

          if (productArray.length === 0) {
            deferredObject.reject(new Error(NO_PRODUCTS));
            return;
          }

          productArray = generateProductPriceObject(productArray);

          try {
            productSlider.init(productArray, targetNode, {
              image: 'model1'
            });
          } catch (ignore) {// do nothing, the throws will handle any errors
          } finally {
            deferredObject.resolve();
          }
        }
      }).fail(function fail() {
        deferredObject.reject(new Error(CATEGORY_API_CALL_FAIL));
      });
    }).fail(function fail(e) {
      deferredObject.reject(e);
    });
    return deferredObject.promise();
  }

  exports.init = function () {
    var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
    getProductSliders(parent).forEach(setSliderWaypoints);
  };

  return exports;
});

redesign.define('productPartial/pdp_fitTypeAndDescription',['handlebars'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_fitTypeAndDescription", this["ANF"]["templates"]["pdp_fitTypeAndDescription"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var alias1=container.lambda, alias2=container.escapeExpression;

  return "<div>\n    <h3 class=\"product-attrs__shown-in\">\n        <strong>\n            "
    + alias2(alias1((depth0 != null ? depth0.fitTMNT : depth0), depth0))
    + ":\n        </strong>\n        <span class=\"selected-swatch__label\">\n            "
    + alias2(alias1((depth0 != null ? depth0.fitType : depth0), depth0))
    + "\n        </span>\n    </h3>\n    <p> "
    + alias2(alias1((depth0 != null ? depth0.fitDescription : depth0), depth0))
    + " </p>\n</div>\n";
},"useData":true}));

return this["ANF"];

});
redesign.define('productModules/product/buyGridAccordions/productSizeFitAccordion',[
  'productModules/helpers/Utils',
  'productServices/product/productReviewService',
  'anfcore/components/tooltip',
  'productModules/helpers/garmentMeasurements',
  'productPartial/pdp_sizeFitAccordionContent',
  'productPartial/pdp_fitRecommendation',
  'productPartial/pdp_modelSpecs',
  'globalServices/marketing/eSpotContentProvider',
  'anfcore/components/modal',
  'coreServices/personalizedContent',
  'anfUtil/constants',
  'anfUtil/testFramework',
  'coreServices/userPreference',
  'es6HomeModules/marketingProductSlider',
  'productPartial/pdp_fitTypeAndDescription',
  'globalModulesHelpers/debounce',
  'productPartial/pdp_measurements'
],
function ProductSizeFitAccordion(
  Utils,
  reviewService,
  dsTooltip,
  garmentMeasurements,
  productPartialPdpSizeFitAccordionContent,
  productPartialPdpFitRecommendation,
  productPartialPdpModelSpecs,
  eSpotContentProvider,
  modal,
  personalizedContentAPI,
  coreConstants,
  test,
  userPreferenceHelper,
  marketingProductSlider,
  productPartialPdpFitTypeAndDescription,
  debounceService,
  productPartialLensMeasurementsAccordionContent
) {
  'use strict';

  var messageBus = $(ANF);

  function reformSizeFitAccordion($productSection) {
    var anfObject = Utils.getANFObject();
    var productId = $productSection.data('productid');
    var productData = Utils.getProductData(productId);
    var collection = productData.collection;
    var sizeFitInformation = $productSection.find('.size-fit-information');

    var accordionData = {};
    var measurementData = Utils.isEyewearProduct(productData.productAttrs) ?
      garmentMeasurements.getEyewearMeasurementData(productId, anfObject) :
      garmentMeasurements.getGarmentMeasurementData(productId, anfObject, $productSection);

    if (measurementData && measurementData.isEyeware) {
      renderMeasurementsAccordion(measurementData, $productSection);
    } else {
      accordionData.garmentData = measurementData;
      accordionData.hasGarmentMeasurements = accordionData.garmentData.measurements.length > 0 && !Utils.isJeansProduct(productId);

      accordionData.isQuickviewOpened = Utils.isQuickviewOpened;
      accordionData.fitRecommendation = getFitRecommendation(anfObject, collection);
      accordionData.hasFitRecommendation = !!accordionData.fitRecommendation;
      accordionData.hasModelSpecs =  hasModelSpecs(productData);
      if (hasModelSpecs(productData)) {
        accordionData.modelSpecs = Utils.getModelSpecs(productId);
      }

      if ($productSection.hasClass('size-fit-desc-enabled')) {
        var fitTypes = productData.productAttrsComplex['Details-6233'];
        if (fitTypes && fitTypes.values) {
          var fitDetails = fitTypes.values.reduce(function getFitDetails(previous, current) {
            if (current.value === 'Curvy' || current.value === 'Classic' || current.value === 'Curvy Love') {
              return current.value;
            }
            return previous;
          }, '');
          var fitTypeTmntMapping = {
            'Curvy': 'PDP_CURVE_FIT',
            'Curvy Love': 'PDP_CURVE_FIT',
            'Classic': 'PDP_CLASSIC_FIT'
          };
          if (fitDetails) {
            accordionData.fitType = fitDetails;
            accordionData.fitHeaderTMNT = ANF.messaging.product[fitTypeTmntMapping[fitDetails]];
            accordionData.fitDescription = productData.productAttrs.FitDescription;
            accordionData.fitTMNT = ANF.messaging.product.PDP_FIT;
            sizeFitInformation.html(productPartialPdpFitTypeAndDescription.templates.pdp_fitTypeAndDescription(accordionData));
          }
        }
        accordionData.riseTMNT = ANF.messaging.product.PDP_RISE_FIT;
        accordionData.lengthTMNT = ANF.messaging.product.PDP_LENGTH_FIT;
        accordionData.bottomRiseCode = productData.productAttrs.BottomsRiseCode;
        accordionData.bottomLengthCode = productData.productAttrs.BottomsLengthCode;
        accordionData.style = productData.productAttrs.Style;
        accordionData.styleDescription = productData.productAttrs.StyleDescription;
        accordionData.hasCurvyOrClassicFit = accordionData.fitType || accordionData.fitDescription || accordionData.bottomsRiseCode || accordionData.bottomsLengthCode || accordionData.style;
        if (accordionData.hasCurvyOrClassicFit) {
          var sizeFitAccordion = $productSection.find('.size-fit__accordion');
          sizeFitAccordion.find('button').attr('aria-expanded', 'true');
          sizeFitAccordion.find('.js-accordion-panel').attr('aria-hidden', false).css('max-height', 'max-content');
        }
      }
      var debounceInstance = debounceService.debounce(makeCompareFitLink, 500);
      debounceInstance(collection, productId);
    }

    function makeCompareFitLink(collectionDetails, productIdDetails) {
      getCompareFitTemplate(collectionDetails, productIdDetails, accordionData, $productSection).done(function _updateSizeFitAccordion() {
        accordionData.hasFitInfo = accordionData.hasFitRecommendation || accordionData.hasModelSpecs || accordionData.compareFitLinkEspot || accordionData.hasCurvyOrClassicFit;
        var linkText = '<a href="#rating-and-reviews"> ' + accordionData.fitRecommendation + '</a>';

        if (accordionData.isQuickviewOpened) {
          accordionData.contextualFitFullTMNT = ANF.messaging.product.PDP_NEW_MOST_RECOMMEND.replace('{0}', accordionData.fitRecommendation);
        } else {
          accordionData.contextualFitFullTMNT = ANF.messaging.product.PDP_NEW_MOST_RECOMMEND.replace('{0}', linkText);
        }

        accordionData.displayHR = accordionData.hasFitInfo && accordionData.hasGarmentMeasurements;
        updateSizeFitAccordionDisplay(accordionData, $productSection);
        modal.default().init();
        $productSection
          .has('.size-fit__accordion .js-product-slider')
          .each(function applyMarketingProductSlider(index, element) {
            marketingProductSlider.init(element);
          });
      });
    }
  }

  function updateSizeFitAccordion(e, $selectedSwatch, $productSection) {
    reformSizeFitAccordion($productSection);
  }

  function getContentAPISettings() {
    return {
      stylesInResponse: false,
      locale: coreConstants.anf('params.storeAttributes.api.aem').locale,
      singleResponse: true,
      dataType: 'json',
      adapterSettings: {
        aemTimeout: coreConstants.anf('params.storeAttributes.api.aem').timeout.apiBin,
        aemHTMLTimeout: coreConstants.anf('params.storeAttributes.api.aem').timeout.content,
        isSingleResponse: true
      }
    };
  }

  function getISODate(value) {
    try {
      return new Date(value).toISOString();
    } catch (e) {
      return null;
    }
  }

  function getRequestParams() {
    var isStorePreview = coreConstants.anf('params.storeAttributes.api.aem.isStorePreview');
    var espotContentSettings = getContentAPISettings();
    var hasSiteExperienceByShipToCountry = coreConstants.anf('params.storeAttributes.userPreference.siteExperience');
    var uPrefCookieValue = userPreferenceHelper.read({cookieName: 'uPref'});
    var countryParams;

    if (isStorePreview) {
      $.extend(true, espotContentSettings, getStorePreviewParams());
    }

    if (hasSiteExperienceByShipToCountry) {
      if (test.string.not.empty(coreConstants.anf('params.storeAttributes.countryFromIP'))) {
        countryParams = {
          countryCode: coreConstants.anf('params.storeAttributes.countryFromIP')
        };
      } else if (test.object.containsKey(uPrefCookieValue, 'shipTo', false)) {
        countryParams = {
          countryCode: uPrefCookieValue.shipTo
        };
      } else {
        countryParams = {
          countryCode: 'US'
        };
      }
      espotContentSettings.countryCode = countryParams.countryCode;
    }

    return espotContentSettings;
  }

  function getStorePreviewParams() {
    var storePreviewParams = null;
    var previewFrameWrapper = parent.document.getElementById('previewFrameWrapper');

    if (previewFrameWrapper && previewFrameWrapper.dataset) {
      storePreviewParams = {
        previewStart: getISODate(previewFrameWrapper.dataset.start),
        previewMode: true
      };
    }
    return storePreviewParams;
  }

  function getCompareFitAEMContent(collection, settings, accordionData, $productSection) {
    var response = new $.Deferred();
    var compareFitLinkEspotName = 'pdp_sizefitaccordion';
    var compareFitLinkEspot = '';

    personalizedContentAPI.get(settings)
      .done(function _successFunction(results) {
        if (results.reason === personalizedContentAPI.reasons.AJAX_OK) {
          results.data.forEach(function getCompareFitsAccordion(espotContent) {
            if (test.object.containsKey(espotContent, 'espotId', false) && espotContent.espotId === compareFitLinkEspotName) {
              espotContent.pages.forEach(function concatContent(page) {
                compareFitLinkEspot += page.htmlContent;
              });
            }
          });
        }
        ANF.product.data[collection].compareOurFitContent += compareFitLinkEspot;
        ANF.product.data[collection].hasFetchedCompareOurFitContent = true;

        response.resolve(compareFitLinkEspot);
        Object.assign(accordionData, {compareFitLinkEspot: compareFitLinkEspot});
        updateSizeFitAccordionDisplay(accordionData, $productSection);
      })
      .fail(function _failFunction() {
        response.reject();
      });

    return response.promise();
  }

  function getCompareFitCMCContent(collection, productId) {
    var response = new $.Deferred();
    var compareFitLinkEspot = '';
    var espotSettings = [{
      key: 'productId',
      value: productId
    }, {
      key: 'page',
      value: 'ProductDisplay'
    }];
    eSpotContentProvider.fetch(['Product_CompareFitLink'], espotSettings).done(function _successFunction(content) {
      if (content[0]) {
        for (var i = 0; i < content[0].content.length; i++) {
          compareFitLinkEspot += content[0].content[i].text;
        }
      }
      ANF.product.data[collection].compareOurFitContent = compareFitLinkEspot;
      ANF.product.data[collection].hasFetchedCompareOurFitContent = true;
      response.resolve(compareFitLinkEspot);
    }).fail(function _failFunction() {
      response.resolve('');
    });

    return response.promise();
  }

  function getEspotIds(productId) {
    return [productCatalog[productId].productPartNum, 'ALL_KIC_ALL_CTGY', coreConstants.anf('catalog.data.espotIdentifier')];
  }

  function getCompareFitTemplate(collection, productId, accordionData, $productSection) {
    var response = new $.Deferred();
    var compareFitLinkEspot = '';
    var settings;
    var espots;
    if (ANF.product.data[collection].hasFetchedCompareOurFitContent) {
      compareFitLinkEspot = ANF.product.data[collection].compareOurFitContent;
      response.resolve(compareFitLinkEspot);
    } else if (window.digitalData.get('flag.aemCompareFits', false)) {
      espots = getEspotIds(productId);
      settings = getRequestParams();
      ANF.product.data[collection].compareOurFitContent = '';
      $.when.apply($, espots.map(function fetchESpotContent(espotId) {
        settings.pageId = espotId;
        return getCompareFitAEMContent(collection, settings, accordionData, $productSection);
      })).always(function getAllEspotContent() {
        response.resolve(ANF.product.data[collection].compareOurFitContent);
      });
    } else {
      return getCompareFitCMCContent(collection, productId);
    }

    return response.promise();
  }

  function getFitRecommendation(anfObject, collection) {
    var reviewData = {};
    var review = anfObject.product.data[collection] && anfObject.product.data[collection].reviews;
    var fitRecommendation;

    if (review) {
      reviewData = reviewService.buildReviewSummaryModel(review);
    }

    if (reviewData && reviewData.showFitRecommendation && reviewData.fitRecommendation) {
      fitRecommendation = reviewData.fitRecommendation;
    }

    return fitRecommendation;
  }

  function hasModelSpecs(productData) {
    var productAttrs = productData.productAttrs;
    return (productAttrs.OFPModelHeight && productAttrs.OFPModelSize);
  }

  function updateSizeFitAccordionDisplay(accordionData, $productSection) {
    var $sizeFitAccordion = $productSection.find('.size-fit__accordion');
    var $accordionContainer = $sizeFitAccordion.find('.size-fit-accordion__container');

    if (accordionData.fitRecommendation) {
      var $productSizeSectionContainer = $productSection.find('.product-size-section__container');
      $productSizeSectionContainer.html(productPartialPdpFitRecommendation.templates.pdp_fitRecommendation(accordionData));
    }

    // hide and exit if shouldShowSizeFitAccordion == false
    if (!shouldShowSizeFitAccordion(accordionData)) {
      $sizeFitAccordion.hide();
      return;
    }
    $accordionContainer.html(productPartialPdpSizeFitAccordionContent.templates.pdp_sizeFitAccordionContent(accordionData));
    $sizeFitAccordion.show();

    // Accordion calcs a height on open, this fixes the height issue of updating content within that already open accordion
    $productSection.find('.size-fit__accordion .js-accordion-panel').css('max-height', '');

    if (accordionData.hasGarmentMeasurements) {
      // re-init the tooltips since they are injected post load
      dsTooltip.default().init();
    }
  }

  function shouldShowSizeFitAccordion(accordionData) {
    return accordionData.hasGarmentMeasurements ||
      accordionData.hasFitInfo;
  }

  function onModelChanged(e, eventData) {
    var modelSpecs = Utils.getModelSpecs(eventData.productId);
    var $container = eventData.$productSection.find('.model-specs-container');
    $container.html(productPartialPdpModelSpecs.templates.pdp_modelSpecs(modelSpecs));
  }

  function triggerBTest() {
    var $productSection = $('.product-page-v2-modules').not('.quickview-preload');
    $productSection.addClass('size-fit-desc-enabled');
    var productSection = $productSection;
    if ($productSection.length > 1) {
      productSection = $productSection.not('.js-product-page');
    }
    reformSizeFitAccordion(productSection);
  }

  function renderMeasurementsAccordion(measurementData, $productSection) {
    var $measurementsAccordion = $productSection.find('.measurements__accordion');
    var $measurementsAccordionContainer = $measurementsAccordion.find('.measurements-accordion__container');

    if (!measurementData && !measurementData.isEyeware) {
      $measurementsAccordion.hide();
      return;
    }
    $measurementsAccordion.show();
    $measurementsAccordionContainer.html(productPartialLensMeasurementsAccordionContent.templates.pdp_measurements(measurementData));

    dsTooltip.default().init();
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchOnLoad productPageInfo:swatchSelected', updateSizeFitAccordion);
      messageBus.on('productPageMainImages:modelSelected', onModelChanged);
      messageBus.on('styleFitDesc:init', triggerBTest);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/sizeGuide/sizeGuideCharts',[
  'globalModulesHelpers/debounce',
  'productModules/helpers/curry',
  'productServices/product/template'
], function SizeGuideCharts(debounce, curry, template) {
  'use strict';

  var sizeGuideTableScrollSelector = '.size-guide__table-scroll';
  var sizeGuideTableSelector = '.size-guide__guide';
  var hideShadowClass = 'size-guide__table-shadow--hide';
  var dropShadowLeftSelector = '.size-guide__table-shadow-left';
  var dropShadowRightSelector = '.size-guide__table-shadow-right';
  var sizeGuidePrimarySelector = '.size-guide__primary-column';
  var sizeGuideTableRegionSelector = '.size-guide__country-column';
  var sizeGuideShowInchesClass = 'size-guide__show-inches';
  var sizeGuideShowCentimeterClass = 'size-guide__show-cm';
  var selectedClass = 'selected';

  function renderSizeCharts($container, constants, sizeChartData, defaultRegion) {
    var defaultUnitClass = defaultRegion === 'usa' ? sizeGuideShowInchesClass : sizeGuideShowCentimeterClass;

    var tables = template.renderTemplate('sizeGuideCharts', {
      sizeCharts: sizeChartData,
      defaultUnitClass: defaultUnitClass,
      defaultRegion: defaultRegion,
      sizeChartHeader: constants.sizeChartHeader
    });

    $container.html(tables);

    // curry this with an extra argument so debounce calls it with zero args and the container as context
    var curriedRenderShadows = curry(renderTableScrollShadows, 2)($container);
    var debounced = debounce.debounce(curriedRenderShadows, 250);
    $container.find(sizeGuideTableScrollSelector).on('scroll', debounced);
  }

  function renderTableScrollShadows($container) {
    $container.find(sizeGuideTableScrollSelector).each(function setScrollShadows(_idx, tableScroll) {
      var maxScrollLeft = tableScroll.scrollWidth - tableScroll.clientWidth;

      // only when has scrolling
      if (tableScroll.scrollWidth > 375 && maxScrollLeft !== 0) {
        var $currentTableScroll = $(tableScroll);
        var $dropShadowLeft = $currentTableScroll.find(dropShadowLeftSelector);
        var $dropShadowRight = $currentTableScroll.find(dropShadowRightSelector);

        var hideLeftShadow = tableScroll.scrollLeft === 0;
        var hideRightShadow = tableScroll.scrollLeft === maxScrollLeft;

        // account for width of first column
        var $leftHeaders = $currentTableScroll.find(sizeGuidePrimarySelector);
        $dropShadowLeft.css('left', $leftHeaders[0].clientWidth);

        $dropShadowLeft.toggleClass(hideShadowClass, hideLeftShadow);
        $dropShadowRight.toggleClass(hideShadowClass, hideRightShadow);
      }
    });
  }

  function toggleTableUnit($container, unit) {
    var $table = $container.find(sizeGuideTableSelector);

    switch (unit) {
      case 'inches':
        $table
          .removeClass(sizeGuideShowCentimeterClass)
          .addClass(sizeGuideShowInchesClass);
        break;
      case 'centimeters':
        $table
          .removeClass(sizeGuideShowInchesClass)
          .addClass(sizeGuideShowCentimeterClass);
        break;
      default:
        $table
          .removeClass(sizeGuideShowCentimeterClass)
          .addClass(sizeGuideShowInchesClass);
    }

    renderTableScrollShadows($container);
  }

  function changeTableRegion($container, region, unit) {
    var $regionColumns = $container.find(sizeGuideTableRegionSelector);
    var regionSelectedClass = '.size-guide__country-' + region;

    $regionColumns
      .removeClass(selectedClass)
      .filter(regionSelectedClass)
      .addClass(selectedClass);

    toggleTableUnit($container, unit);
  }

  function addAltBackgroundFlag(sizeChartData) {
    var enrichedSizeChartData = $.extend({}, sizeChartData);

    $.each(sizeChartData, function sizeChartLoop(e, chart) {
      $.each(chart.sizes, function altColoringCalculation(i) {
        if (i % 2) {
          enrichedSizeChartData[e].sizes[i].hasAltBackground = true;
        }
      });
    });

    return enrichedSizeChartData;
  }

  function init($container, constants, sizeChartData) {
    var region = constants.sizeGuideDefaultRegion.toLowerCase();

    var enrichedSizeChartData = addAltBackgroundFlag(sizeChartData);
    renderSizeCharts($container, constants, enrichedSizeChartData, region);
  }

  var publicMembers = {
    init: init,
    changeTableRegion: changeTableRegion,
    toggleTableUnit: toggleTableUnit
  };

  return publicMembers;
});

redesign.define('productModules/product/sizeGuide/sizeGuideChartControls',[
  'productServices/product/template',
  'productModules/helpers/Utils',
  'productModules/product/sizeGuide/sizeGuideCharts'
], function SizeGuideChartControls(template, Utils, SizeGuideCharts) {
  'use strict';

  var sizeGuideParentSelector = '.size-guide';
  var sizeGuideRegionSelector = '.size-guide-region-selector select';
  var sizeGuideRegionDropDownSelector = '.size-guide__region-selector';
  var unitTabContainerSelector = '.size-guide__unit-toggle-wrapper .toggle-radio';
  var sizeGuideUnitToggleWrapperSelector = '.size-guide__unit-toggle-wrapper';

  // Treat this as immutable -- once data for a productId is set on init, it should not be modified
  var regionsByProductId = {};

  function bindEvents() {
    $(document).on('change', unitTabContainerSelector, handleUnitToggleChange);
    $(document).on('change', sizeGuideRegionSelector, handleRegionChange);
  }

  function qvModifier() {
    return Utils.isQuickviewOpened ? '_qv' : '';
  }

  function handleUnitToggleChange(event) {
    var $target = $(event.currentTarget);
    var unitClicked = $target.val();
    var $sizeGuideWrapper = $target.closest(sizeGuideParentSelector);

    SizeGuideCharts.toggleTableUnit($sizeGuideWrapper, unitClicked);
  }

  function handleRegionChange(event) {
    var $selectedRegion = $(event.target);

    var region = $selectedRegion.val();
    var unit = region.toLowerCase() === 'usa' ? 'inches' : 'centimeters';

    var $regionSelectorDropDown = $selectedRegion.closest(sizeGuideRegionDropDownSelector);
    var $unitToggle = $regionSelectorDropDown.siblings(sizeGuideUnitToggleWrapperSelector);
    var $sizeGuideWrapper = $regionSelectorDropDown.closest(sizeGuideParentSelector);

    $unitToggle.find('input[value="' + unit + '"]').prop('checked', true);

    SizeGuideCharts.changeTableRegion($sizeGuideWrapper, region, unit);
  }

  // This is mostly a single use func, parses a messy size guide json response and gets the available regions
  function findAvailableRegions(data, constants) {
    // Gotta flatten out all these nested arrays so we can reduce them
    var types = data.reduce(function getSizes(acc, table) {
      return table.sizes.reduce(function getTypes(_callback, size) {
        return acc.concat(size.types);
      }, []);
    }, []);

    // Reduce down using an object to merge duplicates
    var regions = types.reduce(function mergeCountryProps(acc, type) {
      if (type.country !== '') {
        acc[type.country] = true;
      }

      return acc;
    }, {});

    // add default region
    regions[constants.sizeGuideDefaultRegion] = true;

    return Object.keys(regions);
  }

  function buildRegionSelectorTemplateModel(productId, regions, constants) {
    var options = regions.map(function formatRegionForTemplate(region) {
      return {
        title: region,
        value: region
      };
    });

    return {
      id: 'size-guide-region-selector-' + productId + qvModifier(),
      productId: productId,
      productBrand: Utils.getProductData(productId).productAttrs.brand,
      classList: 'size-guide-region-selector',
      label: constants.sizeGuideRegionSelectorAriaLabel,
      value: constants.sizeGuideDefaultRegion,
      dataProperty: 'SIZE_GUIDE_REGION_LIST_ARIA_LABEL',
      options: options
    };
  }

  function buildUnitToggleTemplateModel(productId, constants) {
    var defaultInches = constants.sizeGuideDefaultRegion.toLowerCase() === 'usa';

    return {
      productId: productId,
      productBrand: Utils.getProductData(productId).productAttrs.brand,
      classList: 'size-guide__unit-toggle',
      name: 'size-guide-toggle-' + productId + qvModifier(),
      toggleLabel: constants.tmntSizeGuideUnitToggleLabel,
      toggleBlock: [
        {
          'value': 'inches',
          'toggle-text': constants.tmntSizeGuideInch,
          'id': 'size-guide__toggle-inch-' + productId + qvModifier(),
          'checked': defaultInches
        },
        {
          'value': 'centimeters',
          'toggle-text': constants.tmntSizeGuideCm,
          'id': 'size-guide__toggle-cm-' + productId + qvModifier(),
          'checked': !defaultInches
        }
      ]
    };
  }

  function renderChartControls($container, constants, productId, regions) {
    var unitToggle = template.renderTemplate('sizeGuideUnitToggle', buildUnitToggleTemplateModel(productId, constants));
    var regionSelector = template.renderTemplate('sizeGuideRegionSelector', buildRegionSelectorTemplateModel(productId, regions, constants));

    $container.html([regionSelector, unitToggle]);
  }

  function init($container, constants, productId, data) {
    if (!!data) {
      regionsByProductId[productId] = findAvailableRegions(data[productId], constants);
    }

    renderChartControls($container, constants, productId, regionsByProductId[productId]);
  }


  var publicMembers = {
    init: init,
    bindEvents: bindEvents
  };

  return publicMembers;
});

redesign.define('productModules/product/sizeGuide/productSizeGuide',[
  'productModules/helpers/Utils',
  'productModules/product/sizeGuide/sizeGuideChartControls',
  'productModules/product/sizeGuide/sizeGuideCharts',
  'anfcore/components/tabs',
  'anfcore/components/modal',
  'anfcore/helpers/scope'
], function ProductSizeGuide(
  Utils,
  SizeGuideChartControls,
  SizeGuideCharts,
  tabs,
  modal,
  scope
) {
  'use strict';

  var sizeGuideLinkSelector = '.details__link-size-chart, .product-page__info-size-chart, .size-fit__accordion .view-size-fit-btn';
  var sizeGuideTableContainerSelector = '.size-guide__guide-wrapper';
  var sizeGuideControlsContainerSelector = '.size-guide__cta-wrapper';

  var sizeChartsData = {};

  // have to bind utils here bc utils.getvalue uses 'this'
  var getInANF = Utils.getValueFromObject.bind(Utils, ANF);

  var constants = {
    apiURLRoot: getInANF('params.storeAttributes.apiURLRoot', ''),
    sizeGuideDefaultRegion: getInANF('params.storeAttributes.catalogV2.sizeGuideDefaultRegion', ''),
    sizeGuideRegionSelectorAriaLabel: getInANF('messaging.product.TMNT.SIZE_GUIDE_REGION_SELECTOR_ARIA_LABEL.value', ''),
    tmntSizeChartHeader: getInANF('messaging.product.TMNT.SIZE_CHART_HEADER.value', ''),
    tmntSizeGuideUnitToggleLabel: getInANF('messaging.product.TMNT.SIZE_GUIDE_UNIT_TOGGLE_LABEL.value', ''),
    tmntSizeGuideInch: getInANF('messaging.product.TMNT.SIZE_GUIDE_INCH.value', ''),
    tmntSizeGuideCm: getInANF('messaging.product.TMNT.SIZE_GUIDE_CM.value', '')
  };

  function sizeGuideClickHandler(event) {
    // keep the event executed only on the <button></button>
    event.stopPropagation();

    var $currentTarget = $(event.currentTarget);
    var $productSection = $currentTarget.closest('.product-page-v2-modules');
    var productId = $productSection.data('productid');

    var sizeChartName = Utils.getProductData(productId).sizeChartName;

    var $tableContainer = $productSection.find(sizeGuideTableContainerSelector);
    var $controlsContainer = $productSection.find(sizeGuideControlsContainerSelector);

    if (!sizeChartsData[productId] || !sizeChartsData[productId].length) {
      $.get(ANF.params.storeAttributes.apiURLRoot + '/product/sizeguide/' + sizeChartName)
        .done(function handleSizeChartData(data) {
          sizeChartsData[productId] = data.sizeguides[0].sizecharts;

          SizeGuideCharts.init($tableContainer, constants, sizeChartsData[productId]);
          SizeGuideChartControls.init($controlsContainer, constants, productId, sizeChartsData);
        });
    } else {
      SizeGuideCharts.init($tableContainer, constants, sizeChartsData[productId]);
      SizeGuideChartControls.init($controlsContainer, constants, productId);
    }

    // With the size guide now in QV the ds components we init on page load need to be re-inited() so that the beautiful tabbies work
    // below I set the scope to '.scope-1892' because the scope is being set too small on other pages on the site
    // Since PDP (Qv, Edit) is pretty much on every page we have to make sure the components init properly.
    if (Utils.isQuickviewOpened) {
      scope.default.setScope('.scope-1892');
      tabs.default().init();
    }
    modal.default().init();
  }

  var publicMembers = {
    bindEvents: function bindEvents() {
      $(document).on('click', sizeGuideLinkSelector, sizeGuideClickHandler);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/sizeGuide/sizeGuideHeader',[
  'productModules/helpers/Utils',
  'coreModulesHelpers/StringUtils',
  'productServices/product/template',
  'coreClass/ANFImage',
  'productModules/helpers/garmentMeasurements',
  'anfcore/components/tooltip'
], function SizeGuideHeader(Utils, StringUtils, template, ANFImage, garmentMeasurements, dsTooltip) {
  'use strict';

  var productSectionSelector = '.product-page-v2-modules';
  var infoPanelSelector = '.size-guide-info-panel';

  var sizeGuideRecommendedFitSelector = '.size-guide-info-panel .size-guide-fit-most-reviewers-say';
  var reviewRecommendedFitSelector = '.size-fit-accordion__container .size-fit-reviewer-recommendation';
  var detailsHeightSelector = '.model-specs__height-measurement';
  var detailsSizeSelector = '.model-specs__size-measurement';
  var sizeGuideImagesSelector = '.size-guide-info-panel .size-guide-images';
  var garmentMeasurementsSelector = '.garment-measurements';

  function gatherImagesToDisplay(selectedModel, imageObject) {
    var imagesToDisplay = [];
    if (selectedModel.length >= 3) {
      imagesToDisplay.push(selectedModel[0], selectedModel[2]);
    } else if (selectedModel.length >= 1 && imageObject.prod.length >= 1) {
      imagesToDisplay.push(selectedModel[0], imageObject.prod[0]);
    } else {
      imagesToDisplay.push(imageObject.prod[0]);
    }

    return imagesToDisplay;
  }

  function imageBannerErrorHandler(e) {
    var $failedImage = $(e.target);
    var hasFixedErrorBefore = $failedImage.closest('.image-fail-fix').length > 0;

    if (hasFixedErrorBefore) {
      $failedImage.parent().remove();
    } else {
      var imageIdParts = $failedImage.data('image-id').split('_');

      // hard coding the prod1 image type here, since Image data is stale/broken at this point
      var imageId = imageIdParts[0] + '_' + imageIdParts[1] + '_prod1';

      var fallbackSrc = ANFImage.instance()
        .setImageName(imageId)
        .setWidth(800)
        .url;

      $failedImage.attr('src', fallbackSrc);

      $failedImage.closest('.size-guide-images').addClass('image-fail-fix');
    }
  }

  var publicMembers = {
    bindEvents: function bindEvents() {
      $(document).on('dsModal:Open', '[class*="details__size-guide-modal"]', publicMembers.handleSizeGuideOpen);
    },

    handleSizeGuideOpen: function handleSizeGuideOpen(event) {
      var $productSection = $(event.currentTarget).closest(productSectionSelector);
      var $infoPanel = $productSection.find(infoPanelSelector);
      var productId = $productSection.data('productid');

      publicMembers.setSizeGuideFitRecommendation($productSection);
      publicMembers.sizeGuideImageHandler($productSection, productId);
      publicMembers.setSizeGuideInfoPanel($infoPanel, productId);
      publicMembers.setGarmentMeasurements(productId, $productSection, $infoPanel);
      dsTooltip.default().init();
    },

    setSizeGuideInfoPanel: function setSizeGuideInfoPanel($infoPanel, productId) {
      var productData = Utils.getProductData(productId);
      // Related with from product/base/js/modules/product/productDetails.js
      var defaultModelStr = window.selectedModelSegment || Utils.getValueFromObject(productData, 'productAttrs.ModelData.defaultModel', null);
      var selectedModel = defaultModelStr && productData.productAttrs.ModelData ? productData.productAttrs.ModelData[defaultModelStr] : null;

      var modelHeight = selectedModel ? selectedModel.height : Utils.getValueFromObject(productData, 'productAttrs.OFPModelHeight', '');
      var modelSize = selectedModel ? selectedModel.size : Utils.getValueFromObject(productData, 'productAttrs.OFPModelSize', '');

      $infoPanel.find(detailsHeightSelector).html(modelHeight);
      $infoPanel.find(detailsSizeSelector).html(modelSize);
    },

    setGarmentMeasurements: function setGarmentMeasurements(productId, $productSection, $infoPanel) {
      var anfObject = Utils.getANFObject();
      var $measurementContainer = $infoPanel.find(garmentMeasurementsSelector);
      var garmentData = garmentMeasurements.getGarmentMeasurementData(productId, anfObject, $productSection);
      $measurementContainer.html(template.renderTemplate('garmentMeasurements', garmentData));
    },

    setSizeGuideFitRecommendation: function setSizeGuideFitRecommendation($productSection) {
      var $recommendedFit = $productSection.find(sizeGuideRecommendedFitSelector);

      if ($recommendedFit.html()) {
        return;
      }

      var fitRec = $productSection.find(reviewRecommendedFitSelector).first();
      if (fitRec.length > 0 && fitRec.css('display') === 'block') {
        $recommendedFit.append(fitRec.html());
        $recommendedFit.find('a').contents().unwrap();
      }
    },

    sizeGuideImageHandler: function sizeGuideImageHandler($productSection, productId) {
      var imageObject = $productSection.data('imageDataModel');

      if (!imageObject) {
        return;
      }

      var defaultModelStr = window.selectedModelSegment || Utils.getValueFromObject(Utils.getProductData(productId), 'productAttrs.ModelData.defaultModel', null);
      var model = defaultModelStr ? StringUtils.camelize(defaultModelStr, false) : 'model';
      // double check that we have the correct model
      var selectedModel = imageObject[model] ? imageObject[model] : imageObject.model;

      var imagesToDisplay = gatherImagesToDisplay(selectedModel, imageObject);
      var images = [];
      imagesToDisplay.forEach(function addSrc(image) {
        var imageToDisplay = {
          src: ANFImage.instance()
            .setImageName(image.imageId)
            .setWidth(800)
            .url,
          altText: image.imageId.indexOf('prod') > -1 ? 'prod' : 'model',
          imageId: image.imageId
        };

        images.push(imageToDisplay);
      });

      var markup = template.renderTemplate('sizeGuideImages', {images: images});
      var $imageBannerWrapper = $productSection.find(sizeGuideImagesSelector);

      document.querySelector(sizeGuideImagesSelector).addEventListener('error', imageBannerErrorHandler, true);

      $imageBannerWrapper.html(markup);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/sizeGuide/sizeGuideAnalytics',[], function SizeGuideAnalytics() {
  'use strict';

  var unitTabContainerSelector = '.details__size-guide-modal .size-guide__unit-toggle-wrapper .toggle-block';
  var measurementGuideTabSelector = 'button[id^="size-guide__tab-guide"]';
  var sizeChartTabSelectorId = 'button[id^="size-guide__tab-chart"]';
  var sizeGuideLinkSelector = '.details__link-size-chart, .product-page__info-size-chart, .size-fit__accordion .view-size-fit-btn';
  var sizeGuideRegionSelector = '.size-guide-region-selector select';

  function handleMeasurementGuideTabClick() {
    $(window).trigger('analytics.modalAction', {
      'name': 'size & fit guide',
      'action': 'tab click',
      'attribute': 'how to measure'
    });
  }
  function handleRegionChange(event) {
    $(window).trigger('analytics.modalAction', {
      'name': 'size & fit guide',
      'action': 'region selected',
      'attribute': event.currentTarget.value
    });
  }
  function handleSizeGuideLinkClick() {
    $(window).trigger('analytics.miscProductFeature', {
      'type': 'size & fit guide',
      'action': 'click'
    });
  }
  function handleSizeChartTabClick() {
    $(window).trigger('analytics.modalAction', {
      'name': 'size & fit guide',
      'action': 'tab click',
      'attribute': 'chart'
    });
  }
  function handleUnitToggleChange(event) {
    var unit = $(event.currentTarget).find('input').val();

    $(window).trigger('analytics.modalAction', {
      'name': 'size & fit guide',
      'action': 'unit change',
      'attribute': unit
    });
  }
  var publicMembers = {
    bindEvents: function bindEvents() {
      var $document = $(document);

      $document.on('click', measurementGuideTabSelector, handleMeasurementGuideTabClick);
      $document.on('click', sizeChartTabSelectorId, handleSizeChartTabClick);
      $document.on('click', sizeGuideLinkSelector, handleSizeGuideLinkClick);

      $document.on('change', sizeGuideRegionSelector, handleRegionChange);
      $document.on('change', unitTabContainerSelector, handleUnitToggleChange);
    }

  };

  return publicMembers;
});

redesign.define('productServices/product/retrieveFabricCareAttrs',['productModules/helpers/Utils'], function RetrieveFabricCareAttrs(Utils) {
  'use strict';

  function isArrayOfValues(content) {
    return typeof content.values !== 'undefined' && content.values !== null;
  }

  function isSingleValue(content) {
    return typeof content.value !== 'undefined' && content.value !== null;
  }

  function getCurrentData(productId) {
    var productData = Utils.getProductData(productId);
    var data = (
      typeof productData !== 'undefined'
    ) ? productData.productAttrsComplex : {};

    return data;
  }

  function fromContentValues(content) {
    var data = [];
    if (typeof content !== 'undefined') {
      if (isArrayOfValues(content)) {
        $(content.values).each(function each() {
          data.push(this.value);
        });
      } else if (isSingleValue(content)) {
        data = [content.value];
      }
    }
    return data;
  }

  var publicMembers = {

    getFabricCareData: function getFabricCareData(productId) {
      var fabric = [];
      var care = [];

      if (typeof productId !== 'undefined') {
        var productData = getCurrentData(productId);

        fabric = fromContentValues(productData.FiberContent);
        care = fromContentValues(productData.CareInstructions);
      }

      return {
        fabric: fabric,
        care: care
      };
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/productFabricCare',[
  'productServices/product/retrieveFabricCareAttrs',
  'productModules/helpers/Utils'
], function ProductFabricCare(fabricCareService, Utils) {
  'use strict';

  var messageBus = $(ANF);

  var fabricCareContainerSelectorClass = '.fabric-care__container';
  var fabricCareListSelectorClass = '.fabric-care__list';
  var productV2SelectorClass = '.product-page-v2-modules';
  var quickviewProductSelector = '.product-quickview__modal .product-page-v2-modules';
  var productV2Class = 'product-page-v2-modules';
  var fiberContentContainer = '.fiber-content__label';

  function getFabricCareInfo(DOMElement) {
    var $productSection = $(DOMElement).hasClass(productV2Class) ? $(DOMElement) : $(DOMElement).closest(productV2SelectorClass);

    var fabricCareInfo = {
      $fabricCareContainer: $productSection.find(fabricCareContainerSelectorClass),
      $fiberContentContainer: $productSection.find(fiberContentContainer),
      $fabricCareList: $productSection.find(fabricCareListSelectorClass),
      productId: $productSection.data('productid')
    };

    return fabricCareInfo;
  }

  var publicMembers = {
    createFabricCareListItem: function createFabricCareListItem(text) {
      return $('<li></li>').text(text);
    },

    renderFabricCareList: function renderFabricCareList(fabricCareInfo) {
      var fabricCareData = fabricCareService.getFabricCareData(fabricCareInfo.productId);
      var $careListItems;

      fabricCareInfo.$fiberContentContainer.html(fabricCareData.fabric.join(' / '));
      $careListItems = $.map(fabricCareData.care, publicMembers.createFabricCareListItem);
      fabricCareInfo.$fabricCareList.empty().append($careListItems);

      // We still want to empty the fabricCareList if there are no care instructions, but also not show the container
      var hasCareData = fabricCareData.length > 0 || (fabricCareData.care.length > 0 && fabricCareData.fabric.length > 0);

      if (hasCareData) {
        fabricCareInfo.$fabricCareContainer.addClass('has-care-data');
      } else {
        fabricCareInfo.$fabricCareContainer.removeClass('has-care-data');
      }
    },

    handleSwatchSelect: function handleSwatchSelect(e, swatch) {
      var fabricCareInfo = getFabricCareInfo(swatch);

      publicMembers.renderFabricCareList(fabricCareInfo);
    },

    handleFabricCareLoad: function handleFabricCareLoad(e, isQuickview) {
      var $products = isQuickview ? $(quickviewProductSelector) : $(productV2SelectorClass);
      if (!isQuickview && Utils.hasProductMFEEnabled()) {
        return;
      }
      $products.each(function products(idx, $product) {
        var fabricCareInfo = getFabricCareInfo($product);
        publicMembers.renderFabricCareList(fabricCareInfo);
      });
    }

  };

  publicMembers.listen = function listen() {
    messageBus.on('productPageInfo:swatchSelected', publicMembers.handleSwatchSelect);
    messageBus.on('productFabricCare:load', publicMembers.handleFabricCareLoad);
  };


  return publicMembers;
});

redesign.define('productModules/product/productRecommendationAnalytics',['productModules/helpers/Utils'],
  function ProductRecommendationAnalytics(Utils) {
    'use strict';

    return function ProductRecommendationAnalyticsClosure(productIntersectionObserver) {
      function wireIntersectionObserver(targetContainer) {
        var productSliderObserver = new productIntersectionObserver.IntersectionObserver(
          function productIntersectionObserverCallback(entries) {
            for (var i = 0, len = entries.length; i < len; i++) {
              var recContainer = entries[i];

              if (recContainer.isIntersecting) {
                productSliderObserver.unobserve(recContainer.target);
                var ProductRecommendationId = $(recContainer.target).attr('data-slider-id');
                var ProductRecommendationContainer = document.querySelector('[data-slider-id=' + ProductRecommendationId + ']');
                if (ProductRecommendationContainer.hasChildNodes()) {
                  window.digitalData.trigger('universal_scroll', {
                    Tealium_event: 'scroll',
                    data_text: 'user scrolled to',
                    data_action: ProductRecommendationId
                  });
                }
              }
            }
          },
          {
            threshold: 0
          }
        );

        productSliderObserver.observe(targetContainer);
      }

      function init() {
        var $productRecContainers = $('.product-page-user-content__recommendations .js-recommendation-slider');

        $productRecContainers.each(function recContainerWireLoop(i, container) {
          wireIntersectionObserver(container);
        });
      }

      var publicMembers = {
        'bindEvents': function bindEvents() {
          if (!Utils.isExternalUser()) {
            init();
          }
        }
      };

      return publicMembers;
    };
  });

redesign.define('productModules/product/productSizeMessaging',['productServices/product/template',
  'productModules/helpers/Utils'
], function ProductSizeMessaging(template, Utils) {
  'use strict';

  function handleSizeMessaging(e, $selectedSwatch, $productSection, productId, ANFObject) {
    var sizeChartName = Utils.getProductData(productId).sizeChartName;
    var templateData = ANFObject.messaging.catalogV2.sizeMessaging[sizeChartName];
    var markup;

    if (templateData) {
      markup = template.renderTemplate('productSizeMessaging', templateData);
      var $sizeMessagingContainer = $productSection
        .find('.size-messaging-container')
        .append(markup)
        .show();

      $sizeMessagingContainer
        .eq(1)
        .find('.size-messaging__header')
        .addClass('h2');
    }
  }

  var publicMembers = {
    listen: function listen() {
      $(ANF).on('productPageInfo:swatchOnLoad', handleSizeMessaging);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/sizebaySetup',['productModules/helpers/Utils',
  'productModules/helpers/featureSwitchHelper'
], function SizeBaySetup(Utils, featureSwitchHelper) {
  'use strict';

  function listen() {
    $(ANF).on('productPageInfo:swatchOnLoad', checkForSizebayEnabledAndSetup);
  }

  function checkForSizebayEnabledAndSetup(e, $selectedSwatch, $productSection, productId) {
    if (Utils.isJeansProduct(productId)) {
      featureSwitchHelper.checkFeatureSwitchAndSplitTest('sizebay-enabled', setupSizeBay);
    }
  }

  function setupSizeBay() {
    if ($('#sizebay-vfr-v4').length === 0) {
      var $sizebayScript = $('<script id="sizebay-vfr-v4" />')
        .attr('src', Utils.getANFObject().params.urls.thirdParty.sizebayUrl);

      $('head').append($sizebayScript);
    }
  }

  var publicMembers = {
    listen: listen
  };

  return publicMembers;
});

redesign.define('productModules/product/productMemberEarlyAccess',[
  'globalServices/userState',
  'productModules/helpers/Utils'
], function productMemberEarlyAccess(userStateService, Utils) {
  'use strict';

  var messageBus = $(ANF);
  var nonEarlyAccess = 'non-early-access-member';
  var quickviewLoginButton = '.product-quickview__modal .js-product-login-button';

  function handleMemberEarlyAccess(e, $selectedSwatch, $productSection, productId) {
    var earlyAccessFlag = Utils.productHasEarlyAccessIndicator(productId);
    var isLoyaltyRegion = ANF.params.storeAttributes.loyalty.enabled;
    var atbWrapper = $productSection.find('.atb-member-wrapper');

    if (isLoyaltyRegion && earlyAccessFlag && !userStateService.isLoggedIn()) {
      atbWrapper.addClass(nonEarlyAccess);
    } else {
      atbWrapper.removeClass(nonEarlyAccess);
    }
  }
  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchOnLoad productPageInfo:swatchSelected', handleMemberEarlyAccess);
    },
    bindEvents: function bindEvents() {
      $(document).on('click', quickviewLoginButton, function quickviewLoginClicked() {
        messageBus.trigger('quickviewLogin:clicked');
      });
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/productReviewsLegalText',[
  'productModules/helpers/Utils'
],
function ReviewsLegalText(Utils) {
  'use strict';

  var legalCopyTextSelectorClass = '.reviews-legal-text';
  var legalCopyContainerSelectorClass = '.reviews-legal-text-container';

  function showLegalCopy() {
    var hasReviewLegalText = window.digitalData.get('flag.pdp-reviews-legal-text', false);

    if (!Utils.isQuickviewOpened && hasReviewLegalText) {
      var legalTextRaw = Utils.getANFObject().messaging.product.PDP_REVIEWS_LEGAL_TEXT;
      var legalTextWithLink = legalTextRaw.replace('{0}', Utils.getANFObject().params.urls.catalogV2.reviewsLegalTextUrl);
      var $legalCopyContainer = $(legalCopyContainerSelectorClass);
      var $legalCopyText = $legalCopyContainer.find(legalCopyTextSelectorClass);

      $legalCopyText.append(legalTextWithLink);
      $legalCopyContainer.addClass('show');
    }
  }

  var publicMembers = {
    listen: function listen() {
      $(ANF).on('productPageInfo:swatchOnLoad mfe:SwatchSelected', showLegalCopy);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/finalSale',['productModules/helpers/Utils'], function ProductDetailsAccordion(Utils) {
  'use strict';

  var messageBus = $(ANF);

  function checkForFinalSale(e, $selectedSwatch, $productSection) {
    if (Utils.hasFinalSaleEnabled()) {
      var productId = $productSection.data('productid');
      var isFinalSaleProduct = Utils.getProductData(productId).isFinalSale;
      var $finalSaleContainer = $productSection.find('.final-sale-container');

      if (isFinalSaleProduct) {
        $finalSaleContainer.show();
      } else {
        $finalSaleContainer.hide();
      }
    }
  }

  var publicMembers = {
    listen: function listen() {
      messageBus.on('productPageInfo:swatchOnLoad productPageInfo:swatchSelected', checkForFinalSale);
    }
  };

  return publicMembers;
});

redesign.define('productModules/helpers/analyticsHelper',[],
  function AnalyticsHelper() {
    'use strict';

    var completeTheLookLinkSelectorClass = '.product-main-images__wrapper.scope-1892 a.stylitics-jumplink.jumplink';

    function handleAccordionOpen(event) {
      var accordionType = event.target.dataset && event.target.dataset.accordionName;

      if (accordionType) {
        window.digitalData.trigger('analytics.pdp_accordion_open', {
          tealium_event: 'click',
          data_text: accordionType,
          data_action: 'open'
        });
      }
    }

    function getConfig(configName) {
      var triggerConfig = {
        sizeGuideClick: {
          analytics: 'analytics.pdp_size_guide_click',
          data_text: 'size guide',
          data_action: 'open'
        },
        howToMeasure: {
          analytics: 'pdp_size_guide_how_to_measure_click',
          data_text: 'size guide - how to measure',
          data_action: 'open'
        },
        completeTheLook: {
          analytics: 'pdp_stylitics_complete_this_look_click',
          data_text: 'stylitics-complete-this-look',
          data_action: 'click'
        },
        viewLook: {
          analytics: 'pdp_stylitics_view_this_look_click',
          data_text: 'stylitics-view-this-look',
          data_action: 'open'
        }
      };

      if (triggerConfig[configName]) {
        var defaultConfig = {
          analytics: triggerConfig[configName].analytics,
          data: {
            tealium_event: 'click',
            data_text: triggerConfig[configName].data_text,
            data_action: triggerConfig[configName].data_action
          }
        };
        return defaultConfig;
      }
      return null;
    }

    function handleProductAnalytics(event) {
      var configName = event.data.configName;
      var config = getConfig(configName);

      if (config) {
        window.digitalData.trigger(config.analytics, config.data);
      }
    }

    var publicMembers = {
      bindEvents: function bindEvents() {
        $(document).off('click', '.product-page__info-size-chart.js-open-modal').on('click', '.product-page__info-size-chart.js-open-modal', function handleModalClick() {
          handleProductAnalytics({ data: { configName: 'sizeGuideClick' } });
        });
        $(document).on('dsAccordion:Open', handleAccordionOpen);
        $(document).on('guideSize:howToMeasure', {configName: 'howToMeasure'}, handleProductAnalytics);
        $(completeTheLookLinkSelectorClass).on('click', {configName: 'completeTheLook'}, handleProductAnalytics);
        $(window).on('styliticsV3Item:viewLook', {configName: 'viewLook'}, handleProductAnalytics);
      }
    };

    return publicMembers;
  });

redesign.define('productModules/product/productExitRateAnalytics',['productModules/helpers/Utils'],
  function ProductExitRateAnalytics(Utils) {
    'use strict';

    return function ProductShopSimilarAnalyticsClosure(productIntersectionObserver) {
      function wireIntersectionObserver(targetContainer) {
        var shopSimilarObserver = new productIntersectionObserver.IntersectionObserver(
          function productIntersectionObserverCallback(entries) {
            for (var i = 0, len = entries.length; i < len; i++) {
              var shopSimilarContainer = entries[i];

              if (shopSimilarContainer.isIntersecting) {
                shopSimilarObserver.unobserve(shopSimilarContainer.target);
                window.digitalData.trigger('universal_scroll', {
                  event_name: 'scroll',
                  data_text: 'user scrolled to',
                  data_action: 'pdp shop similar grid'
                });
              }
            }
          },
          {
            threshold: 0
          }
        );

        shopSimilarObserver.observe(targetContainer);
      }

      function init() {
        var $productShopSimilarContainer = $('.pdp-grid-container');
        if (Utils.isExternalUser() && !Utils.isQuickviewOpened && !Utils.hasProductMFEEnabled) {
          wireIntersectionObserver($productShopSimilarContainer[0]);
        }
      }

      var publicMembers = {
        'bindEvents': function bindEvents() {
          if (Utils.isPdpPage) {
            init();
          }
        }
      };

      return publicMembers;
    };
  });

redesign.define('productSections/product/productPageInfo',[
  'coreSectionHelpers',
  'productModules/product/productSizes',
  'productModules/product/productMultipleAttributeFilter',
  'productModules/product/productSwatches',
  'productModules/product/productPrice',
  'productModules/product/addToBag/pdpAddToBag',
  'productModules/product/addToBag/quickviewAddToBag',
  'productModules/product/productNameAndDescription',
  'productModules/product/addToBag/productStickyAddToBag',
  'productModules/product/productDetailBadging',
  'productModules/product/buyGridAccordions/productDetailsAccordion',
  'productModules/product/buyGridAccordions/productSizeFitAccordion',
  'productModules/product/sizeGuide/productSizeGuide',
  'productModules/product/sizeGuide/sizeGuideHeader',
  'productModules/product/sizeGuide/sizeGuideChartControls',
  'productModules/product/sizeGuide/sizeGuideAnalytics',
  'productModules/product/productFabricCare',
  'productModules/product/productRecommendationAnalytics',
  'productModules/helpers/productIntersectionObserver',
  'productModules/product/productSizeMessaging',
  'productModules/product/sizebaySetup',
  'productModules/product/productMemberEarlyAccess',
  'productModules/product/productReviewsLegalText',
  'productModules/helpers/featureSwitchHelper',
  'productModules/product/finalSale',
  'productModules/helpers/analyticsHelper',
  'productModules/helpers/ProductMFEAdapter',
  'productModules/product/productExitRateAnalytics'
], function ProductPageInfo(
  coreSectionHelpers,
  productSizes,
  productMultipleAttributeFilter,
  productSwatches,
  productPrice,
  pdpAddToBag,
  quickviewAddToBag,
  productNameAndDescription,
  productStickyAddToBag,
  productDetailBadging,
  productDetailsAccordion,
  productSizeFitAccordion,
  sizeGuide,
  sizeGuideHeader,
  sizeGuideControls,
  sizeGuideAnalytics,
  productFabricCare,
  productRecommendationAnalytics,
  productIntersectionObserver,
  productSizeMessaging,
  sizebaySetup,
  productMemberEarlyAccess,
  productReviewsLegalText,
  featureSwitchHelper,
  finalSale,
  analyticsHelper,
  productMFEAdapter,
  productExitRateAnalytics
) {
  'use strict';

  var privateMembers = {
    DEFAULT_MODULES: {
      productSizes: productSizes,
      productMultipleAttributeFilter: productMultipleAttributeFilter,
      productSwatches: productSwatches,
      productPrice: productPrice,
      pdpAddToBag: pdpAddToBag,
      quickviewAddToBag: quickviewAddToBag,
      productNameAndDescription: productNameAndDescription,
      productStickyAddToBag: productStickyAddToBag(productIntersectionObserver),
      productDetailBadging: productDetailBadging,
      productDetailsAccordion: productDetailsAccordion,
      productSizeFitAccordion: productSizeFitAccordion,
      '.details__size-chart-modal': sizeGuide,
      sizeGuideHeader: sizeGuideHeader,
      sizeGuideControls: sizeGuideControls,
      sizeGuideAnalytics: sizeGuideAnalytics,
      productFabricCare: productFabricCare,
      productRecommendationAnalytics: productRecommendationAnalytics(productIntersectionObserver),
      productSizeMessaging: productSizeMessaging,
      sizebaySetup: sizebaySetup,
      productMemberEarlyAccess: productMemberEarlyAccess,
      productReviewsLegalText: productReviewsLegalText,
      finalSale: finalSale,
      analyticsHelper: analyticsHelper,
      productMFEAdapter: productMFEAdapter,
      productExitRateAnalytics: productExitRateAnalytics(productIntersectionObserver)
    },
    GLOBAL_SCOPE: '',
    MODULES: {},
    parentPage: ''
  };

  return function scope(settings) {
    privateMembers.GLOBAL_SCOPE = settings.scope;
    privateMembers.parentPage = settings.parentPage;
    privateMembers.MODULES = privateMembers.DEFAULT_MODULES;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    var messageBus = $(ANF);

    return {
      'init': function init() {
        coreSectionHelpers.init({
          'modules': privateMembers.MODULES,
          'scope': privateMembers.GLOBAL_SCOPE
        });

        productDetailBadging.init();
      },
      'subscribe': function subscribe() {
        messageBus.on('productPageMain:init', privateMembers.parentPage.productPageInfo.productPageInfoLoad);
        messageBus.on('productPageMain:init', privateMembers.parentPage.productPageInfo.productFabricCareLoad);
      },
      'productPageInfoLoad': function productPageInfoLoad() {
        messageBus.trigger('productPageInfo:load');
        featureSwitchHelper.styleFitDesc();
        featureSwitchHelper.shortDescriptorSplitTest();
      },
      'productFabricCareLoad': function productFabricCareLoad() {
        messageBus.trigger('productFabricCare:load');
      }
    };
  };
});

redesign.define('productModules/product/quickview/quickview',[
  'anfcore/components/statefulButton',
  'anfcore/components/modal',
  'anfcore/components/dropDown',
  'anfcore/components/accordion',
  'productModules/helpers/Utils',
  'productModules/helpers/breakpoints',
  'coreServices/storage',
  'productModules/helpers/featureSwitchHelper',
  'util/analytics/enum/dataPoint',
  'util/analytics/enum/subscriptionName',
  'anfUtil/constants',
  'coreServices/geoLocationService'
], function ProductQuickview(
  statefulButton,
  modal,
  dropDown,
  accordion,
  Utils,
  breakpoints,
  storage,
  featureSwitchHelper,
  analyticsDataPoints,
  analyticSubscriptionName,
  constants
) {
  'use strict';
  var dsModal = modal.default();

  var quickviewModalSelectorClass = '.product-quickview__modal';
  var quickviewButtonSelectorClass  = '.product-quickview__button';
  var editQuickviewButtonClass  = 'product-quickview__edit-button';
  var quickviewProductSectionSelector = '.product-quickview__content .product-page-v2-modules';
  var quickviewContentSelectorClass = '.product-quickview__content';
  var addToBagButtonSelector = '.product-page-add-to-bag__button';
  var definingAttrSelectorClass = '.product-attrs__attr';
  var quickviewEditModalSelector = '.product-quickview__modal.edit-product';
  var quickviewEditModalClass = 'edit-product';
  var detailsSelectorClass = '.details';
  var addToBagFormSelector = '.product-page-add-to-bag__container';
  var quickviewDetailsWrapperHookSelector = '#quickview-details__wrapper-hook .accordion-panel-content';
  var fullProductLinkSelector = '.product-quickview__modal .product-quickview__view-full-product-link';
  var quickviewSoldOutSelectorClass = '.product-quickview__sold-out';
  var exchangesModalButtonClass = 'exchanges-quickview__button';
  var exchangesModalClass = 'exchanges-quickview__modal';
  var exchangesSaveButtonSelector = '.exchanges-quickview__save-button';
  var exchangesEditModalClass = 'exchanges-quickview__modal-edit';
  var exchangesNoLongerAvailableSelector = '#exchangesNoLongerExists';
  var changeLinkClass = 'return-change_link';
  var shoppingCartQVSelectorClass = '#checkout-cart button.js-pc-edit-button';
  var styliticsQuickviewButtonClass = 'stylitics-widget-item-container';
  var styliticsModalClass = 'stylitics-quickview';
  var isEditFromMiniBag = false;

  var messageBus = $(ANF);

  var openExtraAnalyticsData = {};

  function getFaceoutValue($quickviewLink, quickviewLinkAttrs) {
    var faceout = 'prod';
    var hasOfpAttr = typeof quickviewLinkAttrs.showOfp !== 'undefined' && quickviewLinkAttrs.showOfp;
    var $imageWrapperLink = $quickviewLink.closest('.product-template').find('.product-card__image-link');
    var hasImageWrapperLinkOfp = $imageWrapperLink.length > 0 && $imageWrapperLink.attr('href').indexOf('ofp=true') > -1;
    if (typeof quickviewLinkAttrs.faceout !== 'undefined') {
      faceout = quickviewLinkAttrs.faceout.replace(/[0-9]/g, '');// remove number character
    } else if (hasOfpAttr || hasImageWrapperLinkOfp) {
      faceout = 'model';
    }
    return faceout;
  }

  function getReturnFocus($quickviewLink) {
    var $returnFocus = $quickviewLink;
    // if the link clicked to open qv was edit in minibag, focus will go to bag icon on modal close
    var $shoppingBagParent = $quickviewLink.parents('.rs-nav__util-item--shopping-bag');
    if ($shoppingBagParent.length > 0) {
      $returnFocus = $shoppingBagParent.find('.rs-nav-icon--shopping-bag');
    }
    return $returnFocus;
  }

  function constructQuickviewURL(quickviewState) {
    var quickviewParams = {
      productId: quickviewState.productId,
      collectionId: quickviewState.collectionId,
      seq: quickviewState.seq,
      faceout: quickviewState.faceout
    };
    if (quickviewState.isSoldOutInCart) {
      quickviewParams.isSoldOutInCart = true;
    }
    if (quickviewState.categoryId) {
      quickviewParams.categoryId = quickviewState.categoryId;
    }
    if (quickviewState.origin) {
      quickviewParams.origin = quickviewState.origin;
    }
    if (quickviewState.afsource) {
      quickviewParams.afsource = quickviewState.afsource;
    }

    if (quickviewState.pagevm) {
      quickviewParams.pagevm = quickviewState.pagevm;
    }

    if (quickviewState.prodvm) {
      quickviewParams.prodvm = quickviewState.prodvm;
    }

    // PRO-1479: Add dataText and dataAction to the quickview URL
    // These are specific to recommendations swatch click analytics
    if (quickviewState.dataText) {
      quickviewParams.dataText = quickviewState.dataText;
    }

    if (quickviewState.dataAction) {
      quickviewParams.dataAction = quickviewState.dataAction;
    }

    var baseUrl = ANF.params.urls.ajax.productQuickView;

    return baseUrl + '&' + $.param(quickviewParams);
  }

  function getBadgeDataFromProduct(productId, key) {
    var productData = Utils.getProductData(productId);
    if (!productData) {
      return null;
    }
    var keys = key.split('.');
    return keys.reduce(function _reduce(acc, currKey) {
      return (acc && acc.hasOwnProperty(currKey)) ? acc[currKey] : null;
    }, productData);
  }

  function getProductBadge(productId) {
    var isNewArrival = getBadgeDataFromProduct(productId, 'newArrival');
    var earlyAccessFlag = getBadgeDataFromProduct(productId, 'productAttrs.EarlyAccessIndicator');
    var isEarlyAccess = earlyAccessFlag ? earlyAccessFlag.toString().toLowerCase() === 'true' : false;
    var isTopRated = getBadgeDataFromProduct(productId, 'productAttrs.topRated');
    var isBestSeller = getBadgeDataFromProduct(productId, 'productAttrs.bestSeller');
    return [isNewArrival ? 'new' : '', isEarlyAccess ? 'early access' : '', isTopRated ? 'top rated' : '', isBestSeller ? 'top seller' : ''].filter(Boolean).join(', ');
  }

  function getIndividualProductShortDescriptor(firstShortDescriptor, secondShortDescriptor) {
    var shortDescriptor = firstShortDescriptor || secondShortDescriptor;
    var hasBothShortDescriptors = firstShortDescriptor && secondShortDescriptor;

    if (hasBothShortDescriptors) return firstShortDescriptor + ' | ' + secondShortDescriptor;

    return shortDescriptor || 'null';
  }

  function fireDelayedQuickviewEvents() {
    if (Utils.isQuickviewOpened) {
      var $productSection = $(quickviewProductSectionSelector);
      var productId = $productSection.attr('data-productid');
      var shortSku = $productSection.find('select[name="sku"]').val();
      var dataPointEmptyValue = 'null';

      var orEmptyObject = function orEmptyObjectFn(value) {
        return value || {};
      };

      var productData = Utils.getProductData(productId);
      var listPrice = orEmptyObject(
        Object.values(
          orEmptyObject(
            orEmptyObject(
              productPrices[productId]
            ).items
          )
        ).pop()
      ).listPrice;

      var listPriceUsd = orEmptyObject(
        Object.values(
          orEmptyObject(
            orEmptyObject(
              productPrices[productId]
            ).items
          )
        ).pop()
      ).listPriceUSD;

      var offerPrice = orEmptyObject(
        Object.values(
          orEmptyObject(
            orEmptyObject(
              productPrices[productId]
            ).items
          )
        ).pop()
      ).offerPrice;

      var categoryId = orEmptyObject(
        orEmptyObject(
          orEmptyObject(
            ANF
          ).catalog
        ).data
      ).categoryId;

      var longSku = orEmptyObject(
        orEmptyObject(
          document.querySelector('.product-page-v2-modules.js-quickview')
        ).dataset
      ).longSku;

      // Deprecated
      $(window).trigger('analytics.quickViewComplete', [openExtraAnalyticsData]);

      var eventData = {};
      var primaryShortDescriptor = productData ? productData.shortDesc1 : '';
      var secondaryShortDescriptor = productData ? productData.shortDesc2 : '';

      if ($(exchangesNoLongerAvailableSelector).length) {
        try {
          window.digitalData.trigger(
            'universal_click', {
              event_name: 'click',
              data_text: 'invalid submit',
              data_action: 'the item you wish to exchange is no longer available'
            });
        } catch (error) {
        // error
        }
      } else {
        eventData[analyticsDataPoints.BRAND] = productData.productAttrs && productData.productAttrs.brand || dataPointEmptyValue;
        eventData[analyticsDataPoints.COLLECTION_ID] = productData.collection || dataPointEmptyValue;
        eventData[analyticsDataPoints.KEY_ITEM_COLOR] = productData.kicId || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRICE_LIST_LOCAL] = listPrice || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRICE_LIST_USD] = listPriceUsd || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRICE_OFFER_LOCAL] = offerPrice || dataPointEmptyValue;
        eventData[analyticsDataPoints.CATEGORY_ID] = categoryId || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRICE_FLAG] = productData.priceFlag || dataPointEmptyValue;
        eventData[analyticsDataPoints.LONG_SKU] = longSku || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRODUCT_ID] = productId || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRODUCT_NAME] = productData.name || dataPointEmptyValue;
        eventData[analyticsDataPoints.PAGE_DESCRIPTION] = productData.name || dataPointEmptyValue;
        eventData[analyticsDataPoints.PRODUCT_BADGE] = getProductBadge(productId) || dataPointEmptyValue;
        eventData[analyticsDataPoints.SHORT_DESCRIPTOR] = getIndividualProductShortDescriptor(getIndividualProductShortDescriptor(primaryShortDescriptor, secondaryShortDescriptor));
        window.digitalData.trigger(analyticSubscriptionName.VIEW.QUICK_VIEW, eventData);

        try {
          window.digitalData.trigger(
            'productQuickview.load-complete',
            $.extend(
              {
                brand: productData.productAttrs.brand,
                gender: productData.productAttrs.gender,
                kic: productData.kicId,
                priceFlag: productData.priceFlag,
                productId: productId,
                shortSku: shortSku
              },
              openExtraAnalyticsData
            )
          );
        } catch (error) {
        // error
        } finally {
          openExtraAnalyticsData = {};
        }
      }
    }
  }

  function initQuickviewFromData(event) {
    var quickviewState = $.extend(event.detail, {
      $returnFocus: $(event.detail.returnFocus),
      $modal: $(quickviewModalSelectorClass),
      quickviewUrl: constructQuickviewURL(event.detail)
    });

    openQuickviewModal(quickviewState);
    isEditFromMiniBag = false;
  }

  /*
  * TODO: Find a better way to pass additional data from an event that opens a QV model to analytics
  * We are removing analytics from the details to prevent side effects caused by it being there
  */
  function initializeQuickviewFromClick(e) {
    e.preventDefault();

    try {
      // TODO: Find a better way to pass additional data from an event that opens a QV model to analytics
      openExtraAnalyticsData = e.originalEvent.analytics || {};
    } catch (ewww) {
      openExtraAnalyticsData = {};
    }
    initializeQuickview($(e.currentTarget));
    isEditFromMiniBag = false;
  }

  function initializeQuickviewFromMySaves(e, data) {
    initializeQuickview(data.currentTarget);
  }

  function initializeQuickviewFromCart(e) {
    e.preventDefault();
    var $quickviewLink = $(e.currentTarget).parents('.product-template');
    initializeQuickview($quickviewLink);
    isEditFromMiniBag = false;
  }

  function initializeEditModalOnPDP(e) {
    var quickviewState = $.extend(e.detail, {
      $returnFocus: $(e.detail.returnFocus),
      $modal: $(quickviewModalSelectorClass),
      quickviewUrl: constructQuickviewURL(e.detail)
    });

    setEditModalAttributes(quickviewState);
    openQuickviewModal(quickviewState);
    isEditFromMiniBag = false;
  }

  function initializeQuickview($quickviewLink) {
    var quickviewState = initQuickviewState($quickviewLink);

    if (quickviewState.isEdit) {
      setEditModalAttributes(quickviewState);
    } else if (quickviewState.isExchange) {
      addExchangesModalClassesAndSku(quickviewState);
    }

    openQuickviewModal(quickviewState);
  }

  function initQuickviewState($quickviewLink) {
    var quickviewLinkAttrs = $quickviewLink.data();
    var quickviewState = {
      $modal: $(quickviewModalSelectorClass),
      isExchange: $quickviewLink.hasClass(exchangesModalButtonClass),
      isEdit: $quickviewLink.hasClass(editQuickviewButtonClass) || ($quickviewLink.parents('.shopping-bag-list').length > 0) || quickviewLinkAttrs.isedit,
      isSoldOutInCart: $quickviewLink.data('status') === 'Sold Out',
      isStylitics: $quickviewLink.hasClass(styliticsQuickviewButtonClass),
      hasChangeLink: $quickviewLink.hasClass(changeLinkClass),
      seq: quickviewLinkAttrs.seq,
      sku: quickviewLinkAttrs.sku && quickviewLinkAttrs.sku.toString(),
      orderItemId: quickviewLinkAttrs.orderitemid || $quickviewLink.closest(detailsSelectorClass).attr('data-orderitemid'),
      productId: quickviewLinkAttrs.productid,
      collectionId: quickviewLinkAttrs.collectionid || quickviewLinkAttrs.collection,
      faceout: getFaceoutValue($quickviewLink, quickviewLinkAttrs),
      $returnFocus: getReturnFocus($quickviewLink)
    };
    quickviewState.quickviewUrl = constructQuickviewURL(quickviewState);
    return quickviewState;
  }

  function setEditModalAttributes(quickviewState) {
    quickviewState.$modal.attr('data-orderitemid', quickviewState.orderItemId);
    quickviewState.$modal
      .addClass(quickviewEditModalClass)
      .find(quickviewContentSelectorClass)
      .data('sku', quickviewState.sku);
  }

  function addExchangesModalClassesAndSku(quickviewState) {
    if (quickviewState.hasChangeLink) {
      quickviewState.$modal.addClass(exchangesEditModalClass);
    }
    quickviewState.$modal
      .addClass(exchangesModalClass)
      .find(quickviewContentSelectorClass)
      .data('sku', quickviewState.sku);
  }
  function isMobile() {
    return (constants.anf('params.env.isMobile') === 'true');
  }
  function isShoppingBagPage() {
    return $('body').hasClass('cart-view');
  }

  function setMfeQuickviewData(quickviewState) {
    var quickviewType = 'default';
    if (quickviewState.isEdit) {
      quickviewType = 'edit';
    } else if (quickviewState.isExchange) {
      quickviewType = 'exchange';
    }
    var quickviewData = {
      productId: quickviewState.productId,
      collectionId: quickviewState.collectionId,
      categoryId: '',
      sku: quickviewState.sku,
      faceout: quickviewState.faceout,
      type: quickviewType,
      orderItemId: quickviewState.orderItemId,
      isStylitics: quickviewState.isStylitics,
      returnFocus: quickviewState.$returnFocus[0]
    };
    return quickviewData;
  }

  function checkForLocalStorageOverrideMFEQuickviewEnabled() {
    var isDebugModeEnabled = storage.session.get('debug_mode');
    var hasLocalStorageOverrideMFEQuickviewEnabled = storage.session.get('pe-has-quickview-mfe-dev-enabled');
    return isDebugModeEnabled && hasLocalStorageOverrideMFEQuickviewEnabled;
  }

  function openQuickviewModal(quickviewState) {
    if (Utils.hasQuickviewMfeEnabled() && (checkForLocalStorageOverrideMFEQuickviewEnabled() || window.digitalData.get('flag.pe-has-quickview-mfe-dev-enabled', false))) {
      document.dispatchEvent(new CustomEvent('quickview:mfe:openModal', {detail: setMfeQuickviewData(quickviewState)}));
    } else {
      dsModal.openModal('product-quickview__modal');
      quickviewState.$modal.find('.js-modal-heading').focus();

      // DS modal Close event
      quickviewState.$modal.on('dsModal:Close', function handleClose(closeEvent) {
        if ($(closeEvent.target).is(quickviewState.$modal)) {
          quickviewState.$returnFocus.focus();
          resetQuickview(quickviewState);
          storage.local.remove('storedQuickviewProductId');
          quickviewState.$modal.off('dsModal:Close', handleClose);
          if (publicMembers.isEditFromMiniBagFn() && !isMobile() && !isShoppingBagPage()) {
            var event = new Event('miniBag-toaster:open');
            window.dispatchEvent(event);
          }
        }
      });
      loadQuickview(quickviewState);
    }
  }

  function resetQuickview(quickviewState) {
    // removing classes and content so next opening of quickview is fresh
    quickviewState.$modal
      .removeClass(quickviewEditModalClass)
      .find(quickviewContentSelectorClass).html('');
  }

  function loadQuickview(quickviewState) {
    $.ajax({
      url: quickviewState.quickviewUrl
    }).done(function success(data) {
      setUpQuickview(quickviewState, data);
    });
  }

  function setUpQuickview(quickviewState, data) {
    var $quickviewContent = quickviewState.$modal.find(quickviewContentSelectorClass);
    $quickviewContent.html(data);
    if (quickviewState.$modal.attr('data-open') === 'false') {
      $quickviewContent.empty();
    } else {
      if ($(quickviewSoldOutSelectorClass).length === 0) {
        setupInStockQuickview(quickviewState);
      } else {
        $quickviewContent.fadeIn(500);
      }

      modal.default().init();
    }
  }

  function setupInStockQuickview(quickviewState) {
    if (quickviewState.isEdit) {
      setupEditModal(quickviewState);
    } else if (quickviewState.isExchange) {
      setupExchangeModal(quickviewState);
    } else if (quickviewState.isStylitics) {
      setupStyliticsClass(quickviewState);
    }

    triggerQuickviewLoadEvents(quickviewState);
    quickviewState.$modal.find(quickviewProductSectionSelector).data('quickviewProductOpened', quickviewState.productId);

    quickviewState.$modal.find(detailsSelectorClass).appendTo(quickviewDetailsWrapperHookSelector);
    accordion.default().init();
  }

  function setupEditModal(quickviewState) {
    var $button = quickviewState.$modal.find(addToBagButtonSelector);
    preSelectProductSize(quickviewState);
    statefulButton.default().changeState({button: $button[0], state: 'updateInitial'});
    $button.attr('disabled', true);
  }

  function setupExchangeModal(quickviewState) {
    quickviewState.$modal.find(exchangesSaveButtonSelector).attr('disabled', true);
    dropDown.default().init();
  }

  function setupStyliticsClass(quickviewState) {
    quickviewState.$modal.addClass(styliticsModalClass);
  }

  function triggerQuickviewLoadEvents(quickviewState) {
    if (quickviewState.$modal.find('.details__modals .details__size-guide-modal').length > 0) {
      messageBus.trigger('productSizeCharts:load');
    }
    messageBus.trigger('productPageImages:load', {URL: quickviewState.quickviewUrl, isQuickview: true});
    messageBus.trigger('productPageInfo:load');
    messageBus.trigger('productFabricCare:load', true);
    featureSwitchHelper.styleFitDesc();
  }

  function preSelectProductSize(quickviewState) {
    var $addToBagForm = quickviewState.$modal.find(addToBagFormSelector);
    var skuNum = quickviewState.$modal.find(quickviewContentSelectorClass).data('sku');
    var $skuOptions = $addToBagForm.find('.product-page__skus option[value="' + skuNum + '"]');
    var	sizePrimary = $skuOptions.data('size-primary');
    var	sizeSecondary = $skuOptions.data('size-secondary');

    if (typeof sizePrimary !== 'undefined' && (sizePrimary.length > 0 || typeof sizePrimary === 'number')) {
      var	sizeInputPrimary = $addToBagForm.find('.product-sizes input[value="' + sizePrimary + '"]');
      if (sizeInputPrimary.length > 0) {
        sizeInputPrimary.prop('checked', true);
        sizeInputPrimary.closest(definingAttrSelectorClass).addClass('selected');
      }
    }

    if (typeof sizeSecondary !== 'undefined' && (sizePrimary.length > 0 || typeof sizePrimary === 'number')) {
      var	sizeInputSecondary = $addToBagForm.find('.product-sizes input[value="' + sizeSecondary + '"]');
      if (sizeInputSecondary.length > 0) {
        sizeInputSecondary.prop('checked', true);
        sizeInputSecondary.closest(definingAttrSelectorClass).addClass('selected');
      }
    }
  }

  function toggleUpdateButtonState(e, data) {
    var $editQuickview = $(quickviewEditModalSelector);
    if ($editQuickview.length > 0) {
      var currentSKU = $editQuickview.find(quickviewContentSelectorClass).data('sku');
      var newSKU = data.sku;
      var disabledValue = newSKU && currentSKU && (newSKU !== currentSKU) ? false : 'disabled';
      $editQuickview.find(addToBagButtonSelector).attr('disabled', disabledValue);
    }
  }

  function updateViewFullProductLink(e, link) {
    var $fullProductLinkSelector = $(fullProductLinkSelector);
    var analyticsParams = $fullProductLinkSelector.parent().attr('data-analytics-params');
    $(fullProductLinkSelector).attr('href', link + analyticsParams);
  }

  function storeQuickviewState() {
    var initialProductId = $(quickviewProductSectionSelector).data('quickviewProductOpened');
    storage.local.set('storedQuickviewProductId', initialProductId);
  }

  function checkForStoredQuickviewState() {
    var storedQuickviewProductId = storage.local.get('storedQuickviewProductId');
    var $quickviewButton = $(quickviewButtonSelectorClass + '[data-productid="' + storedQuickviewProductId + '"]');
    if ($quickviewButton.length > 0) {
      $quickviewButton.click();
    }
  }

  var publicMembers = {
    initQuickviewFromData: initQuickviewFromData,
    'listen': function listen() {
      messageBus.on('mysaves:quickviewInitialize', initializeQuickviewFromMySaves);
      messageBus.on('quickview:updateFullProductLink', updateViewFullProductLink);
      messageBus.on('productSize:skuSelected', toggleUpdateButtonState);
      messageBus.on('quickviewLifecycle:complete', fireDelayedQuickviewEvents);
      messageBus.on('quickviewLogin:clicked', storeQuickviewState);
      messageBus.on('quickviewModules:loaded', checkForStoredQuickviewState);

      window.addEventListener('quickview:openModal', initQuickviewFromData);
      window.addEventListener('quickview:openEditModalOnPDP', initializeEditModalOnPDP);
    },

    'bindEvents': function bindEvents() {
      $(document).on('click', shoppingCartQVSelectorClass, initializeQuickviewFromCart);
      $(document).on('click', quickviewButtonSelectorClass, initializeQuickviewFromClick);

      // ACR-14504 MFE MiniBag initialize Quick View Event
      window.addEventListener('initializeQuickViewFromMiniBag', function initializeQuickviewFromMiniBag(e) {
        e.preventDefault();
        var divRef = e.quickViewLinkAttrs.pdpDivElement;
        initializeQuickview($(divRef));
        var quickviewLinkAttrs = $(divRef).data();
        $(window).trigger('analytics.cartItemEdited', {
          'collectionId': quickviewLinkAttrs.collectionId,
          'longSku': quickviewLinkAttrs.longSku,
          'shortSku': quickviewLinkAttrs.sku,
          'inventoryAvailability': quickviewLinkAttrs.inventoryAvailability
        });
        isEditFromMiniBag = true;
      }, false);
    },
    'isEditFromMiniBagFn': function isEditFromMiniBagFn() {
      return isEditFromMiniBag;
    }
  };

  return publicMembers;
});

/*!
	Zoom 1.7.18
	license: MIT
	http://www.jacklmoore.com/zoom
*/
(function ($) {
	var defaults = {
		url: false,
		callback: false,
		target: false,
		duration: 120,
		on: 'mouseover', // other options: grab, click, toggle
		touch: true, // enables a touch fallback
		onZoomIn: false,
		onZoomOut: false,
		magnify: 1
	};

	// Core Zoom Logic, independent of event listeners.
	$.zoom = function(target, source, img, magnify) {
		var targetHeight,
			targetWidth,
			sourceHeight,
			sourceWidth,
			xRatio,
			yRatio,
			offset,
			$target = $(target),
			position = $target.css('position'),
			$source = $(source);

		// The parent element needs positioning so that the zoomed element can be correctly positioned within.
		target.style.position = /(absolute|fixed)/.test(position) ? position : 'relative';
		target.style.overflow = 'hidden';
		img.style.width = img.style.height = '';

		$(img)
			.addClass('zoomImg')
			.css({
				position: 'absolute',
				top: 0,
				left: 0,
				opacity: 0,
				width: img.width * magnify,
				height: img.height * magnify,
				border: 'none',
				maxWidth: 'none',
				maxHeight: 'none'
			})
			.appendTo(target);

		return {
			init: function() {
				targetWidth = $target.outerWidth();
				targetHeight = $target.outerHeight();

				if (source === target) {
					sourceWidth = targetWidth;
					sourceHeight = targetHeight;
				} else {
					sourceWidth = $source.outerWidth();
					sourceHeight = $source.outerHeight();
				}

				xRatio = (img.width - targetWidth) / sourceWidth;
				yRatio = (img.height - targetHeight) / sourceHeight;

				offset = $source.offset();
			},
			move: function (e) {
				var left = (e.pageX - offset.left),
					top = (e.pageY - offset.top);

				top = Math.max(Math.min(top, sourceHeight), 0);
				left = Math.max(Math.min(left, sourceWidth), 0);

				img.style.left = (left * -xRatio) + 'px';
				img.style.top = (top * -yRatio) + 'px';
			}
		};
	};

	$.fn.zoom = function (options) {
		return this.each(function () {
			var
			settings = $.extend({}, defaults, options || {}),
			//target will display the zoomed image
			target = settings.target && $(settings.target)[0] || this,
			//source will provide zoom location info (thumbnail)
			source = this,
			$source = $(source),
			img = document.createElement('img'),
			$img = $(img),
			mousemove = 'mousemove.zoom',
			clicked = false,
			touched = false;

			// If a url wasn't specified, look for an image element.
			if (!settings.url) {
				var srcElement = source.querySelector('img');
				if (srcElement) {
					settings.url = srcElement.getAttribute('data-src') || srcElement.currentSrc || srcElement.src;
				}
				if (!settings.url) {
					return;
				}
			}

			$source.one('zoom.destroy', function(position, overflow){
				$source.off(".zoom");
				target.style.position = position;
				target.style.overflow = overflow;
				img.onload = null;
				$img.remove();
			}.bind(this, target.style.position, target.style.overflow));

			img.onload = function () {
				var zoom = $.zoom(target, source, img, settings.magnify);

				function start(e) {
					zoom.init();
					zoom.move(e);

					// Skip the fade-in for IE8 and lower since it chokes on fading-in
					// and changing position based on mousemovement at the same time.
					$img.stop()
					.fadeTo($.support.opacity ? settings.duration : 0, 1, $.isFunction(settings.onZoomIn) ? settings.onZoomIn.call(img) : false);
				}

				function stop() {
					$img.stop()
					.fadeTo(settings.duration, 0, $.isFunction(settings.onZoomOut) ? settings.onZoomOut.call(img) : false);
				}

				// Mouse events
				if (settings.on === 'grab') {
					$source
						.on('mousedown.zoom',
							function (e) {
								if (e.which === 1) {
									$(document).one('mouseup.zoom',
										function () {
											stop();

											$(document).off(mousemove, zoom.move);
										}
									);

									start(e);

									$(document).on(mousemove, zoom.move);

									e.preventDefault();
								}
							}
						);
				} else if (settings.on === 'click') {
					$source.on('click.zoom',
						function (e) {
							if (clicked) {
								// bubble the event up to the document to trigger the unbind.
								return;
							} else {
								clicked = true;
								start(e);
								$(document).on(mousemove, zoom.move);
								$(document).one('click.zoom',
									function () {
										stop();
										clicked = false;
										$(document).off(mousemove, zoom.move);
									}
								);
								return false;
							}
						}
					);
				} else if (settings.on === 'toggle') {
					$source.on('click.zoom',
						function (e) {
							if (clicked) {
								stop();
							} else {
								start(e);
							}
							clicked = !clicked;
						}
					);
				} else if (settings.on === 'mouseover') {
					zoom.init(); // Preemptively call init because IE7 will fire the mousemove handler before the hover handler.

					$source
						.on('mouseenter.zoom', start)
						.on('mouseleave.zoom', stop)
						.on(mousemove, zoom.move);
				}

				// Touch fallback
				if (settings.touch) {
					$source
						.on('touchstart.zoom', function (e) {
							e.preventDefault();
							if (touched) {
								touched = false;
								stop();
							} else {
								touched = true;
								start( e.originalEvent.touches[0] || e.originalEvent.changedTouches[0] );
							}
						})
						.on('touchmove.zoom', function (e) {
							e.preventDefault();
							zoom.move( e.originalEvent.touches[0] || e.originalEvent.changedTouches[0] );
						})
						.on('touchend.zoom', function (e) {
							e.preventDefault();
							if (touched) {
								touched = false;
								stop();
							}
						});
				}

				if ($.isFunction(settings.callback)) {
					settings.callback.call(img);
				}
			};

			img.src = settings.url;
		});
	};

	$.fn.zoom.defaults = defaults;
}(window.jQuery));

redesign.define("jquery_zoom", function(){});

redesign.define('productModules/product/quickview/quickviewImages',[
  'coreClass/ANFImage',
  'jquery_zoom'
], function ProductQuickviewImages(ANFImage) {
  'use strict';

  var quickviewNonUGCMainImageWapperSelectorClass = '.product-main-images__image:not(.product-main-images__image--ugc)';
  var quickviewModalSelectorClass = '.product-quickview__modal';
  var tabFocusClass = 'tab-focused';

  var isClick = null;
  var isMobile = ANF.params.env.isMobile;
  var magnifyWidth = 1200;

  var messageBus = $(ANF);

  function handleZoomImageBlur(e) {
    var image = $(e.currentTarget).removeClass(tabFocusClass);
    image.scrollTop(0);
    image.scrollLeft(0);
  }

  function setupMagnifyQuickviewImage(e, productSection) {
    if (isMobile === 'true') {
      return;
    }

    var getSetZoomAltText = function getSetZoomAltText(alt) {
      return function setZoomAltText() {
        $(this).attr('alt', alt);
      };
    };

    $(productSection).find(quickviewNonUGCMainImageWapperSelectorClass).each(function iterateProductImages(_i, imageContainer) {
      var $imageContainer = $(imageContainer);
      var $productImage = $imageContainer.find('img');
      var altText = $productImage.attr('alt');

      var magnifyImageSrc = ANFImage.instance()
        .setImageName($productImage.data().imageId)
        .setWidth(magnifyWidth)
        .url;

      $imageContainer.zoom({
        callback: getSetZoomAltText(altText),
        duration: 300, // Fade-in blocked for lte IE
        icon: false,
        url: magnifyImageSrc
      });

      $imageContainer.on('focusin', zoomFocus);
      $imageContainer.on('focusout', handleZoomImageBlur);
    });
  }

  function zoomFocus(e) {
    setTimeout( function setTimeout() {
      if (!isClick) {
        var image = $(e.target);
        image.addClass(tabFocusClass);
        image.scrollTop(0);
        image.scrollLeft(0);
        image.find('.zoomImg').css({'top': 0, 'left': 0});
      }
    }, 150);
  }

  var publicMembers = {
    // This function should only be called for setting private module vars during unit tests. P.S. I hate this.
    unitTestSetup: function unitTestSetup(obj) {
      isMobile = obj.isMobile;
      magnifyWidth = obj.magnifyWidth;
    },

    'listen': function listen() {
      messageBus.on('quickviewImages:mainImageLoaded', setupMagnifyQuickviewImage);
    },

    'bindEvents': function bindEvents() {
      $(document).on('click', quickviewModalSelectorClass, function click() {isClick = true; });
      $(document).on('keydown', quickviewModalSelectorClass, function keydown() {isClick = false; });
    }
  };
  return publicMembers;
});

redesign.define('productModules/product/quickview/quickviewLifecycle',[], function QuickviewLifecycle() {
  'use strict';

  var quickviewButtonSelectorClass  = '.product-quickview__button, button.js-pc-edit-button';
  var shoppingCartQVImageSelector = '#checkout-cart .product-image:not(.gift-card-image-container) + .product-image-overlay';
  var quickviewModalSelectorClass = '.product-quickview__modal';
  var soldOutSelector = '.product-quickview__sold-out';
  var quickviewURLMatcher = 'QuickView';

  var messageBus = $(ANF);

  var quickviewCompleteEvents = [];
  var $quickviewModal;

  function onAjaxComplete(event, request, settings) {
    if (settings.url.indexOf(quickviewURLMatcher) !== -1) {
      messageBus.trigger('quickviewLifecycle:postAjax', [$quickviewModal]);

      if ($quickviewModal.find(soldOutSelector).length) {
        messageBus.trigger('quickviewLifecycle:complete', [$quickviewModal]);
      }
    }
  }

  function onAjaxSend(event, request, settings) {
    if (settings.url.indexOf(quickviewURLMatcher) !== -1) {
      messageBus.trigger('quickviewLifecycle:preAjax', [$quickviewModal]);
    }
  }

  function onCompleteEvent(event) {
    quickviewCompleteEvents.push(event);

    if (quickviewCompleteEvents.length > 1) {
      messageBus.trigger('quickviewLifecycle:complete', [$quickviewModal]);
      document.dispatchEvent(new CustomEvent('quickview:recs:openModal'));
    }
  }

  function onQuickviewClose(event) {
    if ($(event.target).is($quickviewModal)) {
      messageBus.trigger('quickviewLifecycle:close', [$quickviewModal]);

      $(document).off('ajaxSend', onAjaxSend);
      $(document).off('ajaxComplete', onAjaxComplete);
      $quickviewModal.off('dsModal:Close');

      quickviewCompleteEvents = [];
    }
  }

  function onQuickviewOpen() {
    $quickviewModal = $(quickviewModalSelectorClass);
    messageBus.trigger('quickviewLifecycle:open', [$quickviewModal]);

    $(document).on('ajaxSend', onAjaxSend);
    $(document).on('ajaxComplete', onAjaxComplete);

    $quickviewModal.on('dsModal:Close', onQuickviewClose);

    messageBus.one('thumbnailSlider:InitComplete', onCompleteEvent);
    messageBus.one('quickviewImages:mainImageLoaded', onCompleteEvent);
  }

  return {
    onQuickviewOpen: onQuickviewOpen,
    bindEvents: function bindEvents() {
      $(document).on('click', quickviewButtonSelectorClass, onQuickviewOpen);
      $(document).on('click', shoppingCartQVImageSelector, onQuickviewOpen);
    },
    listen: function listen() {
      messageBus.on('mysaves:quickviewInitialize', onQuickviewOpen);
      window.addEventListener('quickview:openModal', onQuickviewOpen);
      window.addEventListener('quickview:openEditModalOnPDP', onQuickviewOpen);
    }
  };
});

redesign.define('productModules/product/quickview/quickviewPreload',[
  'productServices/product/template',
  'productModules/helpers/curry',
  'anfUtil/testFramework',
  'coreClass/ANFImage',
  'productModules/helpers/Utils'
], function QuickviewPreload(template, curry, test, ANFImage, Utils) {
  'use strict';

  var quickviewButtonSelector  = '.product-quickview__button, button.js-pc-edit-button';
  var shoppingCartQVImageSelector = '#checkout-cart .product-image:not(.gift-card-image-container) + .product-image-overlay';

  var quickviewModalSelector = '.product-quickview__modal';
  var quickviewPreloadContentSelector = '.product-quickview__preload-content';

  var partialQuickviewTemplate = curry(template.renderTemplate)('quickviewPreload');

  var messageBus = $(ANF);

  function initPreload(event) {
    var $button = $(event.currentTarget);
    var $container = $button.closest('.product-template');

    // On recommendations, the product container is actually nested under the button
    // On shop this look, the product container is product-card, not product-template
    // On stylitics outfitting and the grid mixer, the product container is the button :mind_blown:
    if (!$container.length) {
      if ($button.hasClass('stylitics-widget-item-container')) {
        $container = $button;
        var styliticsPreloadData = gatherPreloadDataForStylitics($container);
      } else if ($button.hasClass('grid-mixer-button')) {
        $container = $button;
        var gridMixerPreloadData = gatherPreloadDataForGridMixer($container);
      } else {
        $container = $button.find('.product-template, .product-card');
      }
    }

    // If there's no recognized container to pull image/data from, just revert to original qv
    if ($container.length) {
      // check to see if the stylitics object has been compiled. if not call it with the contaner.
      var preloadDataObj = styliticsPreloadData || gridMixerPreloadData || collectProductData($container, $button);
      renderPreload(preloadDataObj);
    } else {
      teardownPreload();
    }
  }

  function initPreloadFromMySaves(event, data) {
    initPreload(data);
  }

  function initPreloadFromData(event) {
    var data = event.detail;
    var preloadImage = ANFImage.instance()
      .setImageName(data.imageId)
      .setWidth(400)
      .url;

    var preloadImageElement = document.createElement('img');
    preloadImageElement.setAttribute('src', preloadImage);
    preloadImageElement.setAttribute('class', 'product-card__image');

    var preloadDataObj = $.extend(data, {
      img: preloadImageElement.outerHTML,
      qtyLabel: Utils.getANFObject().messaging.product.GLB_QTY,
      atbLabel: Utils.getANFObject().messaging.product.GLB_ADDTOBAG
    });

    renderPreload(preloadDataObj);
  }

  function collectProductData($container, $button) {
    var img = $container.find('img');
    var shortDescription = $container.find('.short-description, .product-card__description');
    var $productName = $container.find('.product-name');
    var $productPrice = $container.find('.product-price');
    var productBrand = $button.data('product-brand') || ANF.params.urls.STATIC_DIR;

    // Make sure we don't add a screen reader version of this text, usually on shopping cart
    $productName = $productName.children().length < 2 ? $productName : $productName.children().not('.screen-reader-text');

    // Some qv link containers don't match the right size of the qv price label
    $productPrice.find('.product-price-font-size').addClass('ds-override');

    return {
      img: test.type.defined(img[0], false) ? img[0].outerHTML : '',
      shortDescription: shortDescription.text(),
      productBrand: productBrand,
      productName: $productName.text(),
      productPrice: test.type.defined($productPrice[0], false) ? $productPrice[0].outerHTML : '',
      qtyLabel: ANF.messaging.product.GLB_QTY,
      atbLabel: ANF.messaging.product.GLB_ADDTOBAG
    };
  }

  function gatherPreloadDataForStylitics($container) {
    // stylitics injects line break characters... lol i know.
    var productName = $container.find('.stylitics-widget-item-name a').text().trim() || '';
    var productPrice = $container.find('.stylitics-widget-item-price').text().trim() || '';
    var imageSource = ANFImage.instance()
      .setImageName($container.data('item-remote-id') + '_prod1')
      .setWidth(400)
      .url;

    var preloadImageElement = document.createElement('img');
    preloadImageElement.setAttribute('src', imageSource);
    preloadImageElement.setAttribute('class', 'product-card__image');

    return {
      img: preloadImageElement.outerHTML,
      productName: productName,
      productPrice: productPrice,
      qtyLabel: ANF.messaging.product.GLB_QTY,
      atbLabel: ANF.messaging.product.GLB_ADDTOBAG
    };
  }

  function gatherPreloadDataForGridMixer($container) {
    var img = $container.find('img');
    var shortDescription = $container.data('shortDesc');
    var productName = $container.data('productName');
    var productBrand = $container.data('brand') || ANF.params.urls.STATIC_DIR;

    /*
      Not populating "productPrice" for the grid mixer's preload data because we don't have the original product card
      to source the price from (there is extensive logic on the card to determine what the displayed price looks like
      for various pricing scenarios, and duplicating it here just for the sake of preload display would be overkill)
    */

    return {
      img: test.type.defined(img[0], false) ? img[0].outerHTML : '',
      shortDescription: shortDescription,
      productBrand: productBrand,
      productName: productName,
      productPrice: '',
      qtyLabel: ANF.messaging.product.GLB_QTY,
      atbLabel: ANF.messaging.product.GLB_ADDTOBAG
    };
  }

  function crossfadePreload(event, $modal) {
    $modal.addClass('crossfade');
  }

  function renderPreload(data) {
    $(quickviewPreloadContentSelector).html(partialQuickviewTemplate(data));
  }

  function teardownPreload(event, $modal) {
    var $modalCopy = $modal ? $modal : $(quickviewModalSelector);

    $modalCopy.find(quickviewPreloadContentSelector).html('');
    $modalCopy.removeClass('crossfade');
  }

  var publicMembers = {
    initPreloadFromData: initPreloadFromData,
    bindEvents: function bindEvents() {
      $(document).on('click', quickviewButtonSelector, initPreload);
      $(document).on('click', shoppingCartQVImageSelector, initPreload);
    },
    listen: function listen() {
      messageBus.on('mysaves:quickviewInitialize', initPreloadFromMySaves);
      messageBus.on('quickviewLifecycle:complete', crossfadePreload);
      messageBus.on('quickviewLifecycle:close', teardownPreload);

      window.addEventListener('quickview:openModal', initPreloadFromData);
      window.addEventListener('quickview:openEditModalOnPDP', initPreloadFromData);
    }
  };

  return publicMembers;
});

redesign.define('productSections/product/quickviewModules',[
  'coreSectionHelpers',
  'productModules/product/quickview/quickview',
  'productModules/helpers/analyticsHelper',
  'productModules/product/quickview/quickviewImages',
  'productModules/product/quickview/quickviewLifecycle',
  'productModules/product/quickview/quickviewPreload'
], function QuickviewModules(coreSectionHelpers, quickview, analyticsHelper, quickviewImages, quickviewLifecycle, quickviewPreload) {
  'use strict';

  var privateMembers = {
    'DEFAULT_MODULES': {
      'quickview': quickview,
      'quickviewImages': quickviewImages,
      'quickviewLifecycle': quickviewLifecycle,
      'quickviewPreload': quickviewPreload,
      'analyticsHelper': analyticsHelper
    },
    'GLOBAL_SCOPE': '',
    'MODULES': {},
    'parentPage': ''
  };

  return function scope(settings) {
    privateMembers.GLOBAL_SCOPE	= settings.scope;
    privateMembers.parentPage = settings.parentPage;
    privateMembers.MODULES = privateMembers.DEFAULT_MODULES;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    var messageBus = $(ANF);

    return {
      'init': function init() {
        coreSectionHelpers.init({
          'modules': privateMembers.MODULES,
          'scope': privateMembers.GLOBAL_SCOPE
        });

        messageBus.trigger('quickviewModules:loaded');
      }
    };
  };
});

redesign.define('productPartial/pdp_preferredStore',['handlebars','dsPartial/selector','dsPartial/logo','wcsHelper/i18n','dsPartial/omni-info'], function(Handlebars) {

this["ANF"] = this["ANF"] || {};
this["ANF"]["templates"] = this["ANF"]["templates"] || {};

Handlebars.registerPartial("pdp_preferredStore", this["ANF"]["templates"]["pdp_preferredStore"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : (container.nullContext || {});

  return "      <span class=\"selector-map-icon\" aria-hidden=\"true\"></span>\n      <span class=\"description\" data-brand=\""
    + alias2(alias1((depth0 != null ? depth0.brand : depth0), depth0))
    + "\">\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.showBranding : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "        <span>"
    + alias2(alias1((depth0 != null ? depth0.storeName : depth0), depth0))
    + "</span>\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.showBranding : depth0),{"name":"if","hash":{},"fn":container.program(4, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </span>\n";
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.logo,depth0,{"name":"logo","hash":{"icon-aria-label":(depth0 != null ? depth0.brandName : depth0),"type":"horizontal","brand":(depth0 != null ? depth0.brand : depth0)},"data":data,"indent":"          ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"4":function(container,depth0,helpers,partials,data) {
    return "          <span class=\"screen-reader-text\">"
    + container.escapeExpression(container.lambda((depth0 != null ? depth0.checkStoreAvailability : depth0), depth0))
    + "</span>\n";
},"6":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module__choose-size-message item-availability-message\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.selectSizeCardInfo : depth0),{"name":"omni-info","data":data,"indent":"            ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "          </div>\n";
},"8":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module-info item-availability-message\">\n            <div class=\"preferred-store-module__store-available preferred-store-module__inventory-status\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.isAvailableCardInfo : depth0),{"name":"omni-info","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n";
},"10":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module-info item-availability-message\">\n            <div class=\"preferred-store-module__store-not-available preferred-store-module__inventory-status not-available\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.noStockCardInfo : depth0),{"name":"omni-info","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n";
},"12":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module-info item-availability-message\">\n            <div class=\"preferred-store-module__store-available preferred-store-module__inventory-status\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.popinsCardInfo : depth0),{"name":"omni-info","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n";
},"14":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module-info item-availability-message\">\n            <div class=\"preferred-store-module__store-not-available preferred-store-module__inventory-status not-available\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.noPickupCardInfo : depth0),{"name":"omni-info","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n";
},"16":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "          <div class=\"preferred-store-module-info item-availability-message\">\n            <div class=\"preferred-store-module__store-not-available preferred-store-module__inventory-status not-available\">\n"
    + ((stack1 = container.invokePartial(partials["omni-info"],(depth0 != null ? depth0.notAvailableCardInfo : depth0),{"name":"omni-info","data":data,"indent":"              ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "            </div>\n          </div>\n";
},"18":function(container,depth0,helpers,partials,data) {
    return "          <p class=\"store-messaging item-availability-message\">"
    + container.escapeExpression(container.lambda((depth0 != null ? depth0.storeMessage : depth0), depth0))
    + "</p>\n";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression, alias3=depth0 != null ? depth0 : (container.nullContext || {});

  return "<div class=\"preferred-store-module__template\">\n  <div class=\"preferred-store-module\" data-storeid=\""
    + alias2(alias1((depth0 != null ? depth0.storeID : depth0), depth0))
    + "\" data-store-zip=\""
    + alias2(alias1((depth0 != null ? depth0.zipCode : depth0), depth0))
    + "\" data-store-city=\""
    + alias2(alias1((depth0 != null ? depth0.city : depth0), depth0))
    + "\">\n"
    + ((stack1 = container.invokePartial(partials.selector,depth0,{"name":"selector","hash":{"data-prop":"data-modal='find-store-form__modal-wrapper'","class-list":"js-open-modal find-store-form__modal-wrapper"},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data,"helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "")
    + "      <div class=\"preferred-store-module__content\">\n        <div class=\"preferred-store-module__popins-error\" data-property=\"GLB_PREFERRED_STORE_ITEM_ERROR\">\n          "
    + ((stack1 = helpers.i18n.call(alias3,"storelocator.GLB_PREFERRED_STORE_ITEM_ERROR",{"name":"i18n","hash":{},"data":data})) != null ? stack1 : "")
    + "\n        </div>\n\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isSelectSizeMsg : depth0),{"name":"if","hash":{},"fn":container.program(6, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isAvailableInStore : depth0),{"name":"if","hash":{},"fn":container.program(8, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isNotInStock : depth0),{"name":"if","hash":{},"fn":container.program(10, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isStorePopinsEligible : depth0),{"name":"if","hash":{},"fn":container.program(12, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isNotAvailableForPickup : depth0),{"name":"if","hash":{},"fn":container.program(14, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.isNotAvailableAtLocation : depth0),{"name":"if","hash":{},"fn":container.program(16, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers["if"].call(alias3,(depth0 != null ? depth0.storeMessage : depth0),{"name":"if","hash":{},"fn":container.program(18, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "      </div>\n  </div>\n</div>\n";
},"usePartial":true,"useData":true}));

return this["ANF"];

});
redesign.define('productModules/popins/preferredStore',[
  'anfUtil/testFramework',
  'coreServices/findastore/productAvailability',
  'coreModules/brandedPage',
  'productServices/product/brandMap',
  'anfcore/components/modal',
  'productModules/helpers/Utils',
  'jsCookie',
  'productPartial/pdp_preferredStore',
  'coreServices/geo/core'
], function PreferredStore(
  test,
  productAvailability,
  brandedPage,
  brandMap,
  modal,
  Utils,
  cookies,
  productPartialPdpPreferredStore,
  GeoCore
) {
  'use strict';


  var productSectionSelector = '.product-page-v2-modules';
  var availabilityWrapper = '.product__actions--availability-wrapper';
  var changeButton = '.preferred-store-module .selector, .preferred-store-module__change-store';
  var preferredStoreWidget = '.preferred-store-module';
  var selectedSizeVariant1 = '.product-sizes__select option:selected';
  var selectedSizeVariant2 = '.product-details__size-select option:selected';
  var selectedSizeVariant3 = '.size-select option:selected';
  var skuSelect = '.product-page__skus';
  var reserveError = '.preferred-store-module__popins-error';
  var preferredStoreBadgeSelectorClass = '.preferred-store-module__badge';
  var isAvailable = '.defining-attribute-value.selected';
  var catalogProductSelectorClass = '.catalog-product';
  var productViewSelectorClass = '.product-view';
  var productPageV2SelectorClass = '.product-page-v2';
  var preferredStoreDefaultClass = 'preferred-store-module__default-state';
  var itemAvailabilitySelectorClass = '.item-availability-message';

  var storeObj = {};
  var scopeData = {};

  function getPhysicalStore() {
    GeoCore.getService('default');
    // get from uPref cookie
    brandedPage.getStoreFromCookie()
      .done(function done(data) {
        storeObj = data;
        widgetSetup();
      })
      .fail(function fail() {
        // get from preferred store
        brandedPage.getStoreFromPreferredStore()
          .done(function failDone(data) {
            storeObj = data;
            widgetSetup();
          })
          .fail(function failFail() {
            // get from geolocation
            brandedPage.getGeolocatedStore()
              .done(function failFailDone(data) {
                storeObj = data;
                widgetSetup();
              })
              .fail(function failFailFail() {
                storeObj = {};
                widgetSetup();
              });
          });
      });
  }

  // eslint-disable-next-line consistent-return
  function widgetSetup() {
    var dataObj = {};
    // In order to maintain focus after closing modal & re-rendering wrapper
    var selectorHasFocus = $(availabilityWrapper).find('.selector').is(':focus');

    // This length used to be fetched in privateMembers, but now that this element is
    // rendered on client-side after an API call, it wouldn't exist when this check ran
    // So, we look in the DOM for this length HERE, instead of in privateMembers
    // This is kind of a hack, but at least it's just tweaking an existing hack, not
    // creating a new one.
    if ($('.ds-rs-facet-tile-location__wrapper').length) {
      return false;
    }

    if (test.string.not.empty(storeObj.storeId, false)) {
      $(availabilityWrapper).html(productPartialPdpPreferredStore.templates.pdp_preferredStore(buildPreferredWidgetObj()));

      updateProductAvailabilityHandler();

      $(preferredStoreBadgeSelectorClass).addClass(storeObj.brand);
    } else {
      // set up the defaults
      dataObj.isSelectSizeMsg = false; // default to false cuz it should only be seen when geo located
      dataObj.storeName = ANF.messaging.catalogV2.defaultStoreAvailability; // set default 'store name'
      dataObj.defaultClass = preferredStoreDefaultClass; // set class for 'store name' styling
      dataObj.showBranding = false;

      $(availabilityWrapper).html(productPartialPdpPreferredStore.templates.pdp_preferredStore(dataObj));
    }

    if (selectorHasFocus) {
      $(availabilityWrapper).find('.selector').focus();
    }
    $(availabilityWrapper).fadeIn();
    reInitializeModal();
  }

  function showPreferredStoreModal(e) {
    e.preventDefault();
    var shortSku = $(selectedSizeVariant1).val();
    var $productSection = $(e.target).closest(productSectionSelector);
    var templateData = {};

    if (!shortSku && $(selectedSizeVariant2).length > 0) {
      shortSku = $(selectedSizeVariant2).val();
    } else if (!shortSku && $(selectedSizeVariant3).length > 0) {
      shortSku = $(selectedSizeVariant3).val();
    } else if ($(skuSelect).length > 0) {
      shortSku = $productSection.find(skuSelect).val();
    }

    templateData.shortSku = shortSku ? shortSku : '';

    $(ANF).trigger('FISModal:build', templateData);
  }

  function buildPreferredWidgetObj(msgData) {
    var dataObj = {};

    if (test.string.not.empty(storeObj.storeId, false)) {
      dataObj = {
        'brand': brandMap.dsBrandFromBrand(storeObj.brand),
        'brandName': brandMap.nameFromBrand(storeObj.brand),
        'storeName': storeObj.storeName,
        'storeID': storeObj.storeId,
        'zipCode': storeObj.zipCode,
        'city': storeObj.city,
        'showBranding': true
      };
    }

    dataObj.isSelectSizeMsg = true;

    if (msgData) {
      dataObj = $.extend({}, dataObj, msgData);
    }

    // Once we know the FIS options, we need to set the store card's content and type before breaking.
    if (dataObj.isSelectSizeMsg) {
      dataObj.selectSizeCardInfo = {
        'state': 'initial',
        'main-text': {
          'text': ANF.messaging.popins.GLB_SELECT_SIZE_TO_SEE_INSTORE_AVAILABILITY
        }
      };
    }

    if (dataObj.isAvailableInStore) {
      dataObj.isAvailableCardInfo = {
        'state': 'available',
        'main-text': {
          'text': ANF.messaging.popins.GLB_ITEMAVAILABLENOW
        }
      };
      if (ANF.params.env.region === 'US') {
        dataObj.isAvailableCardInfo['sub-text'] = {
          'text': ANF.messaging.popins.GLB_INELIGIBLEFORSAMEDAYDELIVERY
        };
      }
    }

    if (dataObj.isNotInStock) {
      dataObj.noStockCardInfo = {
        'state': 'unavailable',
        'main-text': {
          'text': ANF.messaging.popins.GLB_NOTINSTOCKATSTORE
        }
      };
    }

    if (dataObj.isStorePopinsEligible) {
      dataObj.popinsCardInfo = {
        'state': 'available',
        'main-text': {
          'text': ANF.messaging.popins.OMNI_POPINSAVAILABLE_PRIMARY,
          'help-button': {
            'aria-label': ANF.messaging.popins.OMNI_POPINSAVAILABLE_HELPBUTTONLABEL,
            'class-list': 'product__actions--popins-info js-open-modal',
            'data-prop': "data-modal='product__actions--popins-info-espot-v2'"
          }
        }
      };
    }

    if (dataObj.isNotAvailableAtLocation) {
      dataObj.notAvailableCardInfo = {
        'state': 'unavailable',
        'main-text': {
          'text': ANF.messaging.popins.GLB_CLICKCOLLECT_NOTAVAILABLE
        }
      };
    }

    if (dataObj.isNotAvailableForPickup) {
      dataObj.noPickupCardInfo = {
        'state': 'unavailable',
        'main-text': {
          'text': ANF.messaging.popins.GLB_NOTAVAILABLEFORPICKUP
        }
      };
    }

    return dataObj;
  }

  function updateProductAvailabilityHandler() {
    if (!Utils.isQuickviewOpened) {
      if (!scopeData) {
        scopeData = {
          $parentContainer: $(productSectionSelector)
        };
      }

      updateProductAvailability();
    }
  }

  function getStoreId() {
    return $(preferredStoreWidget).attr('data-storeid');
  }

  function getOmniMfeCrsDataBridge() {
    var pdpDataBridge = {};

    if (window.digitalData.export().pdp) {
      pdpDataBridge = window.digitalData.export().pdp.omniMfeCrsDataBridge || {};
    }

    return pdpDataBridge;
  }

  function updateProductAvailability() {
    var storeID = null;
    var skuEligibility = null;
    var tempObj = null;
    var omniMfeCrsDataBridge = getOmniMfeCrsDataBridge();
    var $productSection = $(productSectionSelector);
    var shortSku = omniMfeCrsDataBridge.qualifiedSku || $productSection.find(skuSelect).val();

    if (
      test.string.not.empty(storeObj.storeId, false) &&
      test.string.not.empty(shortSku, false)
    ) {
      var productID = omniMfeCrsDataBridge.productId || $productSection.data('productid');

      storeID = getStoreId();
      skuEligibility = productAvailability.checkSkuAvailability(productID, shortSku);
      productAvailability.retrieveStoreEligibility(storeID, shortSku, skuEligibility, updateWidget);
    } else if (test.string.not.empty(storeObj.storeId, false)) {
      tempObj = {
        'isPhase2Messaging': true,
        'isSelectSizeMsg': false,
        'isAvailableInStore': false,
        'isNotInStock': false,
        'isStorePopinsEligible': false,
        'isNotAvailableForPickup': false,
        'isNotAvailableAtLocation': false
      };

      if ($productSection.find(isAvailable).hasClass('inactive')) {
        tempObj.isNotInStock = true;
      } else {
        tempObj.isSelectSizeMsg = true;
      }

      updateWidget(tempObj);
    }
  }

  function updateWidget(data) {
    var $errorContainer = $(reserveError);
    var templateData = buildPreferredWidgetObj(data);
    var processedTemplate = productPartialPdpPreferredStore.templates.pdp_preferredStore(templateData);

    if ($errorContainer.hasClass('show')) {
      $errorContainer.removeClass('show');
    }

    $(availabilityWrapper).html(processedTemplate);

    if (test.string.not.empty(storeObj.brand, false)) {
      $(preferredStoreBadgeSelectorClass).addClass(storeObj.brand);
    }

    $(availabilityWrapper).data('selected-store-hours-object', data.storeHours);
    reInitializeModal();
  }

  function displayReserveError() {
    $(reserveError).addClass('show');
    $(itemAvailabilitySelectorClass).hide();

    $(ANF).trigger('product:AJAXError');
  }

  function hideReserveError() {
    $(reserveError).removeClass('show');
  }

  function reInitializeModal() {
    modal.default().init();
  }

  var publicMembers = {
    'bindEvents': function bindEvents() {
      $(document).on('click', changeButton, showPreferredStoreModal);
    },
    'listen': function listen() {
      var messageBus = $(ANF);
      var selectedStoreCookie = cookies.get('selectedStore');
      var $bodySelector = $('body');

      messageBus.on('popins:getPhysicalStore', getPhysicalStore);
      messageBus.on('findAStore:storeCookied', widgetSetup);
      messageBus.on('findAStore:noStoreCookied', widgetSetup);
      window.addEventListener('omni-mfe-setup-crs-widget', widgetSetup);
      messageBus.on('product:availabilityError', displayReserveError);
      messageBus.on('product:availabilitySuccess', hideReserveError);

      if (($bodySelector.is(catalogProductSelectorClass) || $bodySelector.is(productViewSelectorClass) || $bodySelector.is(productPageV2SelectorClass)) && selectedStoreCookie !== 'null') {
        messageBus.on('PDP:skuSelected', updateProductAvailabilityHandler);
        window.digitalData.subscribe('pdp.omniMfeCrsDataBridge.qualifiedSku', updateProductAvailabilityHandler);
      }
    }
  };

  return publicMembers;
});

redesign.define('productSections/product/popins',[
  'coreSectionHelpers',
  'coreModules/floatingLabels',
  'productModules/popins/preferredStore'
], function Popins(coreSectionHelpers, floatingLabels, preferredStore) {
  'use strict';


  var privateMembers = {
    'DEFAULT_MODULES': {
      'preferredStore': preferredStore,
      'floatingLabels': floatingLabels
    },
    'GLOBAL_SCOPE': '',
    'MODULES': {}
  };

  return function setScope(settings) {
    privateMembers.GLOBAL_SCOPE = settings.scope;

    privateMembers.MODULES = privateMembers.DEFAULT_MODULES;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    return {
      'init': function init() {
        coreSectionHelpers.init({
          'modules': privateMembers.MODULES,
          'scope': privateMembers.GLOBAL_SCOPE
        });
      }
    };
  };
});

redesign.define('polyfill/IntersectionObserver',[], function () {
  "use strict";
  /**
   * Copyright 2016 Google Inc. All Rights Reserved.
   *
   * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.
   *
   *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document
   *
   */
  (function() {
  'use strict';

  // Exit early if we're not running in a browser.
  if (typeof window !== 'object') {
    return;
  }

  // Exit early if all IntersectionObserver and IntersectionObserverEntry
  // features are natively supported.
  if ('IntersectionObserver' in window &&
      'IntersectionObserverEntry' in window &&
      'intersectionRatio' in window.IntersectionObserverEntry.prototype) {

    // Minimal polyfill for Edge 15's lack of `isIntersecting`
    // See: https://github.com/w3c/IntersectionObserver/issues/211
    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {
      Object.defineProperty(window.IntersectionObserverEntry.prototype,
        'isIntersecting', {
        get: function () {
          return this.intersectionRatio > 0;
        }
      });
    }
    return;
  }


  /**
   * A local reference to the document.
   */
  var document = window.document;


  /**
   * An IntersectionObserver registry. This registry exists to hold a strong
   * reference to IntersectionObserver instances currently observing a target
   * element. Without this registry, instances without another reference may be
   * garbage collected.
   */
  var registry = [];


  /**
   * Creates the global IntersectionObserverEntry constructor.
   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry
   * @param {Object} entry A dictionary of instance properties.
   * @constructor
   */
  function IntersectionObserverEntry(entry) {
    this.time = entry.time;
    this.target = entry.target;
    this.rootBounds = entry.rootBounds;
    this.boundingClientRect = entry.boundingClientRect;
    this.intersectionRect = entry.intersectionRect || getEmptyRect();
    this.isIntersecting = !!entry.intersectionRect;

    // Calculates the intersection ratio.
    var targetRect = this.boundingClientRect;
    var targetArea = targetRect.width * targetRect.height;
    var intersectionRect = this.intersectionRect;
    var intersectionArea = intersectionRect.width * intersectionRect.height;

    // Sets intersection ratio.
    if (targetArea) {
      // Round the intersection ratio to avoid floating point math issues:
      // https://github.com/w3c/IntersectionObserver/issues/324
      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
    } else {
      // If area is zero and is intersecting, sets to 1, otherwise to 0
      this.intersectionRatio = this.isIntersecting ? 1 : 0;
    }
  }


  /**
   * Creates the global IntersectionObserver constructor.
   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface
   * @param {Function} callback The function to be invoked after intersection
   *     changes have queued. The function is not invoked if the queue has
   *     been emptied by calling the `takeRecords` method.
   * @param {Object=} opt_options Optional configuration options.
   * @constructor
   */
  function IntersectionObserver(callback, opt_options) {

    var options = opt_options || {};

    if (typeof callback != 'function') {
      throw new Error('callback must be a function');
    }

    if (options.root && options.root.nodeType != 1) {
      throw new Error('root must be an Element');
    }

    // Binds and throttles `this._checkForIntersections`.
    this._checkForIntersections = throttle(
        this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);

    // Private properties.
    this._callback = callback;
    this._observationTargets = [];
    this._queuedEntries = [];
    this._rootMarginValues = this._parseRootMargin(options.rootMargin);

    // Public properties.
    this.thresholds = this._initThresholds(options.threshold);
    this.root = options.root || null;
    this.rootMargin = this._rootMarginValues.map(function(margin) {
      return margin.value + margin.unit;
    }).join(' ');
  }


  /**
   * The minimum interval within which the document will be checked for
   * intersection changes.
   */
  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;


  /**
   * The frequency in which the polyfill polls for intersection changes.
   * this can be updated on a per instance basis and must be set prior to
   * calling `observe` on the first target.
   */
  IntersectionObserver.prototype.POLL_INTERVAL = null;

  /**
   * Use a mutation observer on the root element
   * to detect intersection changes.
   */
  IntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;


  /**
   * Starts observing a target element for intersection changes based on
   * the thresholds values.
   * @param {Element} target The DOM element to observe.
   */
  IntersectionObserver.prototype.observe = function(target) {
    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
      return item.element == target;
    });

    if (isTargetAlreadyObserved) {
      return;
    }

    if (!(target && target.nodeType == 1)) {
      throw new Error('target must be an Element');
    }

    this._registerInstance();
    this._observationTargets.push({element: target, entry: null});
    this._monitorIntersections();
    this._checkForIntersections();
  };


  /**
   * Stops observing a target element for intersection changes.
   * @param {Element} target The DOM element to observe.
   */
  IntersectionObserver.prototype.unobserve = function(target) {
    this._observationTargets =
        this._observationTargets.filter(function(item) {

      return item.element != target;
    });
    if (!this._observationTargets.length) {
      this._unmonitorIntersections();
      this._unregisterInstance();
    }
  };


  /**
   * Stops observing all target elements for intersection changes.
   */
  IntersectionObserver.prototype.disconnect = function() {
    this._observationTargets = [];
    this._unmonitorIntersections();
    this._unregisterInstance();
  };


  /**
   * Returns any queue entries that have not yet been reported to the
   * callback and clears the queue. This can be used in conjunction with the
   * callback to obtain the absolute most up-to-date intersection information.
   * @return {Array} The currently queued entries.
   */
  IntersectionObserver.prototype.takeRecords = function() {
    var records = this._queuedEntries.slice();
    this._queuedEntries = [];
    return records;
  };


  /**
   * Accepts the threshold value from the user configuration object and
   * returns a sorted array of unique threshold values. If a value is not
   * between 0 and 1 and error is thrown.
   * @private
   * @param {Array|number=} opt_threshold An optional threshold value or
   *     a list of threshold values, defaulting to [0].
   * @return {Array} A sorted list of unique and valid threshold values.
   */
  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {
    var threshold = opt_threshold || [0];
    if (!Array.isArray(threshold)) threshold = [threshold];

    return threshold.sort().filter(function(t, i, a) {
      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {
        throw new Error('threshold must be a number between 0 and 1 inclusively');
      }
      return t !== a[i - 1];
    });
  };


  /**
   * Accepts the rootMargin value from the user configuration object
   * and returns an array of the four margin values as an object containing
   * the value and unit properties. If any of the values are not properly
   * formatted or use a unit other than px or %, and error is thrown.
   * @private
   * @param {string=} opt_rootMargin An optional rootMargin value,
   *     defaulting to '0px'.
   * @return {Array<Object>} An array of margin objects with the keys
   *     value and unit.
   */
  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {
    var marginString = opt_rootMargin || '0px';
    var margins = marginString.split(/\s+/).map(function(margin) {
      var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
      if (!parts) {
        throw new Error('rootMargin must be specified in pixels or percent');
      }
      return {value: parseFloat(parts[1]), unit: parts[2]};
    });

    // Handles shorthand.
    margins[1] = margins[1] || margins[0];
    margins[2] = margins[2] || margins[0];
    margins[3] = margins[3] || margins[1];

    return margins;
  };


  /**
   * Starts polling for intersection changes if the polling is not already
   * happening, and if the page's visibility state is visible.
   * @private
   */
  IntersectionObserver.prototype._monitorIntersections = function() {
    if (!this._monitoringIntersections) {
      this._monitoringIntersections = true;

      // If a poll interval is set, use polling instead of listening to
      // resize and scroll events or DOM mutations.
      if (this.POLL_INTERVAL) {
        this._monitoringInterval = setInterval(
            this._checkForIntersections, this.POLL_INTERVAL);
      }
      else {
        addEvent(window, 'resize', this._checkForIntersections, true);
        addEvent(document, 'scroll', this._checkForIntersections, true);

        if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {
          this._domObserver = new MutationObserver(this._checkForIntersections);
          this._domObserver.observe(document, {
            attributes: true,
            childList: true,
            characterData: true,
            subtree: true
          });
        }
      }
    }
  };


  /**
   * Stops polling for intersection changes.
   * @private
   */
  IntersectionObserver.prototype._unmonitorIntersections = function() {
    if (this._monitoringIntersections) {
      this._monitoringIntersections = false;

      clearInterval(this._monitoringInterval);
      this._monitoringInterval = null;

      removeEvent(window, 'resize', this._checkForIntersections, true);
      removeEvent(document, 'scroll', this._checkForIntersections, true);

      if (this._domObserver) {
        this._domObserver.disconnect();
        this._domObserver = null;
      }
    }
  };


  /**
   * Scans each observation target for intersection changes and adds them
   * to the internal entries queue. If new entries are found, it
   * schedules the callback to be invoked.
   * @private
   */
  IntersectionObserver.prototype._checkForIntersections = function() {
    var rootIsInDom = this._rootIsInDom();
    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();

    this._observationTargets.forEach(function(item) {
      var target = item.element;
      var targetRect = getBoundingClientRect(target);
      var rootContainsTarget = this._rootContainsTarget(target);
      var oldEntry = item.entry;
      var intersectionRect = rootIsInDom && rootContainsTarget &&
          this._computeTargetAndRootIntersection(target, rootRect);

      var newEntry = item.entry = new IntersectionObserverEntry({
        time: now(),
        target: target,
        boundingClientRect: targetRect,
        rootBounds: rootRect,
        intersectionRect: intersectionRect
      });

      if (!oldEntry) {
        this._queuedEntries.push(newEntry);
      } else if (rootIsInDom && rootContainsTarget) {
        // If the new entry intersection ratio has crossed any of the
        // thresholds, add a new entry.
        if (this._hasCrossedThreshold(oldEntry, newEntry)) {
          this._queuedEntries.push(newEntry);
        }
      } else {
        // If the root is not in the DOM or target is not contained within
        // root but the previous entry for this target had an intersection,
        // add a new record indicating removal.
        if (oldEntry && oldEntry.isIntersecting) {
          this._queuedEntries.push(newEntry);
        }
      }
    }, this);

    if (this._queuedEntries.length) {
      this._callback(this.takeRecords(), this);
    }
  };


  /**
   * Accepts a target and root rect computes the intersection between then
   * following the algorithm in the spec.
   * TODO(philipwalton): at this time clip-path is not considered.
   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo
   * @param {Element} target The target DOM element
   * @param {Object} rootRect The bounding rect of the root after being
   *     expanded by the rootMargin value.
   * @return {?Object} The final intersection rect object or undefined if no
   *     intersection is found.
   * @private
   */
  IntersectionObserver.prototype._computeTargetAndRootIntersection =
      function(target, rootRect) {

    // If the element isn't displayed, an intersection can't happen.
    if (window.getComputedStyle(target).display == 'none') return;

    var targetRect = getBoundingClientRect(target);
    var intersectionRect = targetRect;
    var parent = getParentNode(target);
    var atRoot = false;

    while (!atRoot) {
      var parentRect = null;
      var parentComputedStyle = parent.nodeType == 1 ?
          window.getComputedStyle(parent) : {};

      // If the parent isn't displayed, an intersection can't happen.
      if (parentComputedStyle.display == 'none') return;

      if (parent == this.root || parent == document) {
        atRoot = true;
        parentRect = rootRect;
      } else {
        // If the element has a non-visible overflow, and it's not the <body>
        // or <html> element, update the intersection rect.
        // Note: <body> and <html> cannot be clipped to a rect that's not also
        // the document rect, so no need to compute a new intersection.
        if (parent != document.body &&
            parent != document.documentElement &&
            parentComputedStyle.overflow != 'visible') {
          parentRect = getBoundingClientRect(parent);
        }
      }

      // If either of the above conditionals set a new parentRect,
      // calculate new intersection data.
      if (parentRect) {
        intersectionRect = computeRectIntersection(parentRect, intersectionRect);

        if (!intersectionRect) break;
      }
      parent = getParentNode(parent);
    }
    return intersectionRect;
  };


  /**
   * Returns the root rect after being expanded by the rootMargin value.
   * @return {Object} The expanded root rect.
   * @private
   */
  IntersectionObserver.prototype._getRootRect = function() {
    var rootRect;
    if (this.root) {
      rootRect = getBoundingClientRect(this.root);
    } else {
      // Use <html>/<body> instead of window since scroll bars affect size.
      var html = document.documentElement;
      var body = document.body;
      rootRect = {
        top: 0,
        left: 0,
        right: html.clientWidth || body.clientWidth,
        width: html.clientWidth || body.clientWidth,
        bottom: html.clientHeight || body.clientHeight,
        height: html.clientHeight || body.clientHeight
      };
    }
    return this._expandRectByRootMargin(rootRect);
  };


  /**
   * Accepts a rect and expands it by the rootMargin value.
   * @param {Object} rect The rect object to expand.
   * @return {Object} The expanded rect.
   * @private
   */
  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {
    var margins = this._rootMarginValues.map(function(margin, i) {
      return margin.unit == 'px' ? margin.value :
          margin.value * (i % 2 ? rect.width : rect.height) / 100;
    });
    var newRect = {
      top: rect.top - margins[0],
      right: rect.right + margins[1],
      bottom: rect.bottom + margins[2],
      left: rect.left - margins[3]
    };
    newRect.width = newRect.right - newRect.left;
    newRect.height = newRect.bottom - newRect.top;

    return newRect;
  };


  /**
   * Accepts an old and new entry and returns true if at least one of the
   * threshold values has been crossed.
   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a
   *    particular target element or null if no previous entry exists.
   * @param {IntersectionObserverEntry} newEntry The current entry for a
   *    particular target element.
   * @return {boolean} Returns true if a any threshold has been crossed.
   * @private
   */
  IntersectionObserver.prototype._hasCrossedThreshold =
      function(oldEntry, newEntry) {

    // To make comparing easier, an entry that has a ratio of 0
    // but does not actually intersect is given a value of -1
    var oldRatio = oldEntry && oldEntry.isIntersecting ?
        oldEntry.intersectionRatio || 0 : -1;
    var newRatio = newEntry.isIntersecting ?
        newEntry.intersectionRatio || 0 : -1;

    // Ignore unchanged ratios
    if (oldRatio === newRatio) return;

    for (var i = 0; i < this.thresholds.length; i++) {
      var threshold = this.thresholds[i];

      // Return true if an entry matches a threshold or if the new ratio
      // and the old ratio are on the opposite sides of a threshold.
      if (threshold == oldRatio || threshold == newRatio ||
          threshold < oldRatio !== threshold < newRatio) {
        return true;
      }
    }
  };


  /**
   * Returns whether or not the root element is an element and is in the DOM.
   * @return {boolean} True if the root element is an element and is in the DOM.
   * @private
   */
  IntersectionObserver.prototype._rootIsInDom = function() {
    return !this.root || containsDeep(document, this.root);
  };


  /**
   * Returns whether or not the target element is a child of root.
   * @param {Element} target The target element to check.
   * @return {boolean} True if the target element is a child of root.
   * @private
   */
  IntersectionObserver.prototype._rootContainsTarget = function(target) {
    return containsDeep(this.root || document, target);
  };


  /**
   * Adds the instance to the global IntersectionObserver registry if it isn't
   * already present.
   * @private
   */
  IntersectionObserver.prototype._registerInstance = function() {
    if (registry.indexOf(this) < 0) {
      registry.push(this);
    }
  };


  /**
   * Removes the instance from the global IntersectionObserver registry.
   * @private
   */
  IntersectionObserver.prototype._unregisterInstance = function() {
    var index = registry.indexOf(this);
    if (index != -1) registry.splice(index, 1);
  };


  /**
   * Returns the result of the performance.now() method or null in browsers
   * that don't support the API.
   * @return {number} The elapsed time since the page was requested.
   */
  function now() {
    return window.performance && performance.now && performance.now();
  }


  /**
   * Throttles a function and delays its execution, so it's only called at most
   * once within a given time period.
   * @param {Function} fn The function to throttle.
   * @param {number} timeout The amount of time that must pass before the
   *     function can be called again.
   * @return {Function} The throttled function.
   */
  function throttle(fn, timeout) {
    var timer = null;
    return function () {
      if (!timer) {
        timer = setTimeout(function() {
          fn();
          timer = null;
        }, timeout);
      }
    };
  }


  /**
   * Adds an event handler to a DOM node ensuring cross-browser compatibility.
   * @param {Node} node The DOM node to add the event handler to.
   * @param {string} event The event name.
   * @param {Function} fn The event handler to add.
   * @param {boolean} opt_useCapture Optionally adds the even to the capture
   *     phase. Note: this only works in modern browsers.
   */
  function addEvent(node, event, fn, opt_useCapture) {
    if (typeof node.addEventListener == 'function') {
      node.addEventListener(event, fn, opt_useCapture || false);
    }
    else if (typeof node.attachEvent == 'function') {
      node.attachEvent('on' + event, fn);
    }
  }


  /**
   * Removes a previously added event handler from a DOM node.
   * @param {Node} node The DOM node to remove the event handler from.
   * @param {string} event The event name.
   * @param {Function} fn The event handler to remove.
   * @param {boolean} opt_useCapture If the event handler was added with this
   *     flag set to true, it should be set to true here in order to remove it.
   */
  function removeEvent(node, event, fn, opt_useCapture) {
    if (typeof node.removeEventListener == 'function') {
      node.removeEventListener(event, fn, opt_useCapture || false);
    }
    else if (typeof node.detatchEvent == 'function') {
      node.detatchEvent('on' + event, fn);
    }
  }


  /**
   * Returns the intersection between two rect objects.
   * @param {Object} rect1 The first rect.
   * @param {Object} rect2 The second rect.
   * @return {?Object} The intersection rect or undefined if no intersection
   *     is found.
   */
  function computeRectIntersection(rect1, rect2) {
    var top = Math.max(rect1.top, rect2.top);
    var bottom = Math.min(rect1.bottom, rect2.bottom);
    var left = Math.max(rect1.left, rect2.left);
    var right = Math.min(rect1.right, rect2.right);
    var width = right - left;
    var height = bottom - top;

    return (width >= 0 && height >= 0) && {
      top: top,
      bottom: bottom,
      left: left,
      right: right,
      width: width,
      height: height
    };
  }


  /**
   * Shims the native getBoundingClientRect for compatibility with older IE.
   * @param {Element} el The element whose bounding rect to get.
   * @return {Object} The (possibly shimmed) rect of the element.
   */
  function getBoundingClientRect(el) {
    var rect;

    try {
      rect = el.getBoundingClientRect();
    } catch (err) {
      // Ignore Windows 7 IE11 "Unspecified error"
      // https://github.com/w3c/IntersectionObserver/pull/205
    }

    if (!rect) return getEmptyRect();

    // Older IE
    if (!(rect.width && rect.height)) {
      rect = {
        top: rect.top,
        right: rect.right,
        bottom: rect.bottom,
        left: rect.left,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
      };
    }
    return rect;
  }


  /**
   * Returns an empty rect object. An empty rect is returned when an element
   * is not in the DOM.
   * @return {Object} The empty rect.
   */
  function getEmptyRect() {
    return {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      width: 0,
      height: 0
    };
  }

  /**
   * Checks to see if a parent element contains a child element (including inside
   * shadow DOM).
   * @param {Node} parent The parent element.
   * @param {Node} child The child element.
   * @return {boolean} True if the parent node contains the child node.
   */
  function containsDeep(parent, child) {
    var node = child;
    while (node) {
      if (node == parent) return true;

      node = getParentNode(node);
    }
    return false;
  }


  /**
   * Gets the parent node of an element or its host element if the parent node
   * is a shadow root.
   * @param {Node} node The node whose parent to get.
   * @return {Node|null} The parent node or null if no parent exists.
   */
  function getParentNode(node) {
    var parent = node.parentNode;

    if (parent && parent.nodeType == 11 && parent.host) {
      // If the parent is a shadow root, return the host element.
      return parent.host;
    }

    if (parent && parent.assignedSlot) {
      // If the parent is distributed in a <slot>, return the parent of a slot.
      return parent.assignedSlot.parentNode;
    }

    return parent;
  }


  // Exposes the constructors globally.
  window.IntersectionObserver = IntersectionObserver;
  window.IntersectionObserverEntry = IntersectionObserverEntry;

  }());

    return window.IntersectionObserver;
  });
redesign.define('productModules/helpers/productIntersectionObserverSetup',[
  'productModules/helpers/productIntersectionObserver',
  'polyfill/IntersectionObserver'
], function productIntersectionObserverSetup(productIntersectionObserver, IntersectionObserver) {
  'use strict';

  var getIntersectionObserver = function getIntersectionObserver() {
    return IntersectionObserver;
  };

  var publicMembers = {
    init: function init() {
      productIntersectionObserver.create('IntersectionObserver', getIntersectionObserver);
    }
  };

  return publicMembers;
});

redesign.define('productModules/product/productGridSaves',[
  'coreServices/mysaves',
  'globalModulesHelpers/mysavesUtility'
],
function productGridSaves(savesService, savesUtility) {
  'use strict';

  var retryCount = 1;
  function callSavesApi(serviceMethod, products) {
    var savesApiPromise = savesService[serviceMethod]({
      serviceMethod: serviceMethod,
      products: products
    });

    savesApiPromise.done(function saveApiPromiseDone(response) {
      var APIResponseCode = response.reason;
      var isFirstTimeSaveResponseCode = 5;
      var isFirstTimeSave = APIResponseCode === isFirstTimeSaveResponseCode;
      var itemSaved = serviceMethod === 'add';

      if (itemSaved) {
        savesUtility.saveSuccess(isFirstTimeSave);
      }

      $(window.ANF).trigger('mySaves:updatedMySavesCount');
    });

    savesApiPromise.fail(function onFailure() {
      if (retryCount < 3) {
        retryCount++;
        callSavesApi(serviceMethod, products);
      }
    });
  }

  var productAddSaveListener = function addSaveListener(e) {
    callSavesApi('add', [e.detail]);
  };

  var productRemoveSaveListener = function removeSaveListener(e) {
    callSavesApi('remove', [e.detail]);
  };

  var publicMembers = {
    gridSavesPublicFunctions: function gridSavesPublicFunctions() {
      window.addEventListener('mfe:productAddSave', productAddSaveListener);
      window.addEventListener('mfe:productRemoveSave', productRemoveSaveListener);
    }
  };

  return publicMembers;
});


redesign.define('productPages/productPageMain',[
  'productSections/product/productPageImages',
  'productSections/product/productPageReviews',
  'productSections/product/productPageInfo',
  'productSections/product/quickviewModules',
  'productSections/product/popins',
  'productModules/helpers/productIntersectionObserverSetup',
  'productModules/helpers/Utils',
  'productModules/product/productGridSaves'
], function ProductPageMain(productPageImages, productPageReviews, productPageInfo, quickviewModules, popins, productIntersectionObserverSetup, Utils, productGridSaves) {
  'use strict';

  function main() {
    if (typeof ANF.product !== 'object') {
      ANF.product = {};
    }

    function isPdP() {
      return $('body').is('#catalog-productpageview, #catalog-product, .product-page-v2');
    }
    function hasLocationFilter() {
      return $('.ds-rs-facet-tile-location__wrapper').length;
    }

    ANF.product.productPageMain = (function productPageMain($, ANF) {
      var messageBus = $(ANF);

      var publicMembers = {
        init: function init() {
          ANF.product.productPageMain.start.productPageImagesStart({
            'scope': 'body',
            'parentPage': ANF.product.productPageMain
          });
          ANF.product.productPageMain.start.productPageReviewsStart({
            'scope': 'body',
            'parentPage': ANF.product.productPageMain
          });
          ANF.product.productPageMain.start.productPageInfoStart({
            'scope': 'body',
            'parentPage': ANF.product.productPageMain
          });
          ANF.product.productPageMain.start.quickviewModulesStart({
            'scope': 'body',
            'parentPage': ANF.product.productPageMain
          });
          ANF.product.productPageMain.start.popinsStart({
            'scope': '.product__actions--availability'
          });
        },
        start: {
          productPageImagesStart: function productPageImagesStart(settings) {
            ANF.product.productPageMain.productPageImages = productPageImages(settings);
            ANF.product.productPageMain.productPageImages.init();
            ANF.product.productPageMain.productPageImages.subscribe();
          },
          productPageReviewsStart: function productPageReviewsStart(settings) {
            if (ANF.params.storeAttributes.catalogV2.hasBazaarVoiceEnable) {
              ANF.product.productPageMain.productPageReviews = productPageReviews(settings);
              ANF.product.productPageMain.productPageReviews.init();
              ANF.product.productPageMain.productPageReviews.subscribe();
            }
          },
          productPageInfoStart: function productPageInfoStart(settings) {
            ANF.product.productPageMain.productPageInfo = productPageInfo(settings);
            ANF.product.productPageMain.productPageInfo.init();
            ANF.product.productPageMain.productPageInfo.subscribe();
          },
          quickviewModulesStart: function quickviewModulesStart(settings) {
            ANF.product.productPageMain.quickviewModules = quickviewModules(settings);
            ANF.product.productPageMain.quickviewModules.init();
          },
          popinsStart: function popinsStart(settings) {
            if (isPdP() || hasLocationFilter()) {
              ANF.product.productPageMain.popins = popins(settings);
              ANF.product.productPageMain.popins.init();
            }
          }
        },
        ajaxInContent: function ajaxInContent() {
          messageBus.trigger('productPageMain:init');

          if (Utils.isExternalUser() && !Utils.isQuickviewOpened) {
            productGridSaves.gridSavesPublicFunctions();
          }
          if (isPdP()) {
            messageBus.trigger('popins:getPhysicalStore');
          }
        }
      };

      return publicMembers;
    })(jQuery, ANF);

    ANF.deferredStart = ANF.deferredStart || $.deferred();
    ANF.deferredStart.then(function deferredStart() {
      // this is needed to set up the productIntersectionObserver module which has the Intersection Observer API
      productIntersectionObserverSetup.init();
      ANF.product.productPageMain.init();
      ANF.product.productPageMain.ajaxInContent();
    });
  }

  return main;
});

redesign.define('productSections/product/quickviewImages',[
  'coreSectionHelpers',
  'productModules/product/productThumbnails',
  'productModules/product/productMainImage',
  'productModules/product/productImageLoader'
], function QuickviewImages(coreSectionHelpers, thumbnails, mainImage, imageLoader) {
  'use strict';

  var privateMembers = {
    'DEFAULT_MODULES': {
      '.product-thumbnails': thumbnails,
      '.product-main-images': mainImage,
      'product-main-images;=': imageLoader
    },
    'GLOBAL_SCOPE': '',
    'parentPage': '',
    'MODULES': {}
  };

  return function quickviewImagesScope(settings) {
    privateMembers.GLOBAL_SCOPE = settings.scope;
    privateMembers.parentPage = settings.parentPage;
    privateMembers.MODULES = privateMembers.DEFAULT_MODULES;

    if (typeof settings.modules === 'object') {
      $.extend(true, privateMembers.MODULES, settings.modules);
    }

    // var messageBus = $(ANF);

    return {
      'init': function quickviewImagesInit() {
        coreSectionHelpers.init({
          'modules': privateMembers.MODULES,
          'scope': privateMembers.GLOBAL_SCOPE
        });
      }
    };
  };
});

redesign.define('productPages/quickviewMain',[
  'productSections/product/quickviewModules',
  'productSections/product/quickviewImages',
  'productSections/product/productPageInfo',
  'productSections/product/productPageReviews'
], function QuickviewMain(quickviewModules, quickviewImages, productPageInfo, productPageReviews) {
  'use strict';

  function main() {
    if (typeof ANF.product !== 'object') {
      ANF.product = {};
    }

    ANF.product.quickviewMain = (function quickviewMain($, ANF) {
      var publicMembers = {
        init: function init() {
          ANF.product.quickviewMain.start.quickviewModulesStart({
            'scope': 'body',
            'parentPage': ANF.product.quickviewMain
          });
          ANF.product.quickviewMain.start.quickviewImagesStart({
            'scope': 'body',
            'parentPage': ANF.product.quickviewMain
          });
          ANF.product.quickviewMain.start.productPageInfoStart({
            'scope': 'body',
            'parentPage': ANF.product.quickviewMain
          });
          ANF.product.quickviewMain.start.productPageReviewsStart({
            'scope': 'body',
            'parentPage': ANF.product.quickviewMain
          });
        },
        start: {
          quickviewModulesStart: function quickviewModulesStart(settings) {
            ANF.product.quickviewMain.quickviewModules = quickviewModules(settings);
            ANF.product.quickviewMain.quickviewModules.init();
          },
          quickviewImagesStart: function quickviewImagesStart(settings) {
            ANF.product.quickviewMain.quickviewImages = quickviewImages(settings);
            ANF.product.quickviewMain.quickviewImages.init();
          },
          productPageInfoStart: function productPageInfoStart(settings) {
            ANF.product.quickviewMain.productPageInfo = productPageInfo(settings);
            ANF.product.quickviewMain.productPageInfo.init();
          },
          productPageReviewsStart: function productPageReviewsStart(settings) {
            if (ANF.params.storeAttributes.catalogV2.hasBazaarVoiceEnable) {
              ANF.product.quickviewMain.productPageReviews = productPageReviews(settings);
              ANF.product.quickviewMain.productPageReviews.init();
              ANF.product.quickviewMain.productPageReviews.subscribe();
            }
          }
        }
      };

      return publicMembers;
    })(jQuery, ANF);

    ANF.deferredStart = ANF.deferredStart || $.deferred();
    ANF.deferredStart.then(function deferredStart() {
      ANF.product.quickviewMain.init();
    });
  }

  return main;
});

redesign.require([
  'productPages/productPageMain',
  'productPages/quickviewMain'
], function ProductV2(productPageMain, quickview) {
  'use strict';

  var ANF = ANF || {};

  function isProductPage() {
    return $('body').hasClass('product-page-v2');
  }

  function product() {
    if (!isProductPage()) {
      quickview();
    } else {
      productPageMain();
    }
  }

  ANF.product = product();
});

redesign.define("src/hol/js/productV2.js", function(){});

